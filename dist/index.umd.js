(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("cornerstone-core"), require("cornerstone-math"), require("cornerstone-tools"), require("cornerstone-wado-image-loader"), require("dcmjs"), require("dicom-parser"));
	else if(typeof define === 'function' && define.amd)
		define(["cornerstone-core", "cornerstone-math", "cornerstone-tools", "cornerstone-wado-image-loader", "dcmjs", "dicom-parser"], factory);
	else if(typeof exports === 'object')
		exports["viewerCore"] = factory(require("cornerstone-core"), require("cornerstone-math"), require("cornerstone-tools"), require("cornerstone-wado-image-loader"), require("dcmjs"), require("dicom-parser"));
	else
		root["viewerCore"] = factory(root["cornerstone-core"], root["cornerstone-math"], root["cornerstone-tools"], root["cornerstone-wado-image-loader"], root["dcmjs"], root["dicom-parser"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_cornerstone_core__, __WEBPACK_EXTERNAL_MODULE_cornerstone_math__, __WEBPACK_EXTERNAL_MODULE_cornerstone_tools__, __WEBPACK_EXTERNAL_MODULE_cornerstone_wado_image_loader__, __WEBPACK_EXTERNAL_MODULE_dcmjs__, __WEBPACK_EXTERNAL_MODULE_dicom_parser__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../node_modules/@babel/runtime/helpers/AsyncGenerator.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/AsyncGenerator.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var AwaitValue = __webpack_require__(/*! ./AwaitValue */ "../node_modules/@babel/runtime/helpers/AwaitValue.js");

function AsyncGenerator(gen) {
  var front, back;

  function send(key, arg) {
    return new Promise(function (resolve, reject) {
      var request = {
        key: key,
        arg: arg,
        resolve: resolve,
        reject: reject,
        next: null
      };

      if (back) {
        back = back.next = request;
      } else {
        front = back = request;
        resume(key, arg);
      }
    });
  }

  function resume(key, arg) {
    try {
      var result = gen[key](arg);
      var value = result.value;
      var wrappedAwait = value instanceof AwaitValue;
      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {
        if (wrappedAwait) {
          resume(key === "return" ? "return" : "next", arg);
          return;
        }

        settle(result.done ? "return" : "normal", arg);
      }, function (err) {
        resume("throw", err);
      });
    } catch (err) {
      settle("throw", err);
    }
  }

  function settle(type, value) {
    switch (type) {
      case "return":
        front.resolve({
          value: value,
          done: true
        });
        break;

      case "throw":
        front.reject(value);
        break;

      default:
        front.resolve({
          value: value,
          done: false
        });
        break;
    }

    front = front.next;

    if (front) {
      resume(front.key, front.arg);
    } else {
      back = null;
    }
  }

  this._invoke = send;

  if (typeof gen["return"] !== "function") {
    this["return"] = undefined;
  }
}

if (typeof Symbol === "function" && Symbol.asyncIterator) {
  AsyncGenerator.prototype[Symbol.asyncIterator] = function () {
    return this;
  };
}

AsyncGenerator.prototype.next = function (arg) {
  return this._invoke("next", arg);
};

AsyncGenerator.prototype["throw"] = function (arg) {
  return this._invoke("throw", arg);
};

AsyncGenerator.prototype["return"] = function (arg) {
  return this._invoke("return", arg);
};

module.exports = AsyncGenerator;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/AwaitValue.js":
/*!************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/AwaitValue.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _AwaitValue(value) {
  this.wrapped = value;
}

module.exports = _AwaitValue;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
/*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

module.exports = _arrayLikeToArray;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "../node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}

module.exports = _arrayWithoutHoles;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/asyncIterator.js":
/*!***************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/asyncIterator.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _asyncIterator(iterable) {
  var method;

  if (typeof Symbol !== "undefined") {
    if (Symbol.asyncIterator) {
      method = iterable[Symbol.asyncIterator];
      if (method != null) return method.call(iterable);
    }

    if (Symbol.iterator) {
      method = iterable[Symbol.iterator];
      if (method != null) return method.call(iterable);
    }
  }

  throw new TypeError("Object is not async iterable");
}

module.exports = _asyncIterator;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js":
/*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var AwaitValue = __webpack_require__(/*! ./AwaitValue */ "../node_modules/@babel/runtime/helpers/AwaitValue.js");

function _awaitAsyncGenerator(value) {
  return new AwaitValue(value);
}

module.exports = _awaitAsyncGenerator;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/classCallCheck.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/construct.js":
/*!***********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/construct.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct */ "../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js");

function _construct(Parent, args, Class) {
  if (isNativeReflectConstruct()) {
    module.exports = _construct = Reflect.construct;
  } else {
    module.exports = _construct = function _construct(Parent, args, Class) {
      var a = [null];
      a.push.apply(a, args);
      var Constructor = Function.bind.apply(Parent, a);
      var instance = new Constructor();
      if (Class) setPrototypeOf(instance, Class.prototype);
      return instance;
    };
  }

  return _construct.apply(null, arguments);
}

module.exports = _construct;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/createClass.js":
/*!*************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/createClass.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/defineProperty.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

module.exports = _defineProperty;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/inherits.js":
/*!**********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/inherits.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/isNativeFunction.js":
/*!******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/isNativeFunction.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeFunction(fn) {
  return Function.toString.call(fn).indexOf("[native code]") !== -1;
}

module.exports = _isNativeFunction;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !Reflect.construct) return false;
  if (Reflect.construct.sham) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

module.exports = _isNativeReflectConstruct;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/iterableToArray.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

module.exports = _iterableToArray;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

module.exports = _nonIterableSpread;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");

var assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js":
/*!****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!***************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "../node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "../node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/toConsumableArray.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles */ "../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js");

var iterableToArray = __webpack_require__(/*! ./iterableToArray */ "../node_modules/@babel/runtime/helpers/iterableToArray.js");

var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray */ "../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread */ "../node_modules/@babel/runtime/helpers/nonIterableSpread.js");

function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}

module.exports = _toConsumableArray;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/typeof.js":
/*!********************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/typeof.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray */ "../node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(n);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}

module.exports = _unsupportedIterableToArray;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js":
/*!********************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var AsyncGenerator = __webpack_require__(/*! ./AsyncGenerator */ "../node_modules/@babel/runtime/helpers/AsyncGenerator.js");

function _wrapAsyncGenerator(fn) {
  return function () {
    return new AsyncGenerator(fn.apply(this, arguments));
  };
}

module.exports = _wrapAsyncGenerator;

/***/ }),

/***/ "../node_modules/@babel/runtime/helpers/wrapNativeSuper.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@babel/runtime/helpers/wrapNativeSuper.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ "../node_modules/@babel/runtime/helpers/setPrototypeOf.js");

var isNativeFunction = __webpack_require__(/*! ./isNativeFunction */ "../node_modules/@babel/runtime/helpers/isNativeFunction.js");

var construct = __webpack_require__(/*! ./construct */ "../node_modules/@babel/runtime/helpers/construct.js");

function _wrapNativeSuper(Class) {
  var _cache = typeof Map === "function" ? new Map() : undefined;

  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {
    if (Class === null || !isNativeFunction(Class)) return Class;

    if (typeof Class !== "function") {
      throw new TypeError("Super expression must either be null or a function");
    }

    if (typeof _cache !== "undefined") {
      if (_cache.has(Class)) return _cache.get(Class);

      _cache.set(Class, Wrapper);
    }

    function Wrapper() {
      return construct(Class, arguments, getPrototypeOf(this).constructor);
    }

    Wrapper.prototype = Object.create(Class.prototype, {
      constructor: {
        value: Wrapper,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
    return setPrototypeOf(Wrapper, Class);
  };

  return _wrapNativeSuper(Class);
}

module.exports = _wrapNativeSuper;

/***/ }),

/***/ "../node_modules/@babel/runtime/regenerator/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/@babel/runtime/regenerator/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! regenerator-runtime */ "../node_modules/regenerator-runtime/runtime.js");


/***/ }),

/***/ "../node_modules/ajv/lib/ajv.js":
/*!**************************************!*\
  !*** ../node_modules/ajv/lib/ajv.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var compileSchema = __webpack_require__(/*! ./compile */ "../node_modules/ajv/lib/compile/index.js")
  , resolve = __webpack_require__(/*! ./compile/resolve */ "../node_modules/ajv/lib/compile/resolve.js")
  , Cache = __webpack_require__(/*! ./cache */ "../node_modules/ajv/lib/cache.js")
  , SchemaObject = __webpack_require__(/*! ./compile/schema_obj */ "../node_modules/ajv/lib/compile/schema_obj.js")
  , stableStringify = __webpack_require__(/*! fast-json-stable-stringify */ "../node_modules/fast-json-stable-stringify/index.js")
  , formats = __webpack_require__(/*! ./compile/formats */ "../node_modules/ajv/lib/compile/formats.js")
  , rules = __webpack_require__(/*! ./compile/rules */ "../node_modules/ajv/lib/compile/rules.js")
  , $dataMetaSchema = __webpack_require__(/*! ./data */ "../node_modules/ajv/lib/data.js")
  , util = __webpack_require__(/*! ./compile/util */ "../node_modules/ajv/lib/compile/util.js");

module.exports = Ajv;

Ajv.prototype.validate = validate;
Ajv.prototype.compile = compile;
Ajv.prototype.addSchema = addSchema;
Ajv.prototype.addMetaSchema = addMetaSchema;
Ajv.prototype.validateSchema = validateSchema;
Ajv.prototype.getSchema = getSchema;
Ajv.prototype.removeSchema = removeSchema;
Ajv.prototype.addFormat = addFormat;
Ajv.prototype.errorsText = errorsText;

Ajv.prototype._addSchema = _addSchema;
Ajv.prototype._compile = _compile;

Ajv.prototype.compileAsync = __webpack_require__(/*! ./compile/async */ "../node_modules/ajv/lib/compile/async.js");
var customKeyword = __webpack_require__(/*! ./keyword */ "../node_modules/ajv/lib/keyword.js");
Ajv.prototype.addKeyword = customKeyword.add;
Ajv.prototype.getKeyword = customKeyword.get;
Ajv.prototype.removeKeyword = customKeyword.remove;
Ajv.prototype.validateKeyword = customKeyword.validate;

var errorClasses = __webpack_require__(/*! ./compile/error_classes */ "../node_modules/ajv/lib/compile/error_classes.js");
Ajv.ValidationError = errorClasses.Validation;
Ajv.MissingRefError = errorClasses.MissingRef;
Ajv.$dataMetaSchema = $dataMetaSchema;

var META_SCHEMA_ID = 'http://json-schema.org/draft-07/schema';

var META_IGNORE_OPTIONS = [ 'removeAdditional', 'useDefaults', 'coerceTypes', 'strictDefaults' ];
var META_SUPPORT_DATA = ['/properties'];

/**
 * Creates validator instance.
 * Usage: `Ajv(opts)`
 * @param {Object} opts optional options
 * @return {Object} ajv instance
 */
function Ajv(opts) {
  if (!(this instanceof Ajv)) return new Ajv(opts);
  opts = this._opts = util.copy(opts) || {};
  setLogger(this);
  this._schemas = {};
  this._refs = {};
  this._fragments = {};
  this._formats = formats(opts.format);

  this._cache = opts.cache || new Cache;
  this._loadingSchemas = {};
  this._compilations = [];
  this.RULES = rules();
  this._getId = chooseGetId(opts);

  opts.loopRequired = opts.loopRequired || Infinity;
  if (opts.errorDataPath == 'property') opts._errorDataPathProperty = true;
  if (opts.serialize === undefined) opts.serialize = stableStringify;
  this._metaOpts = getMetaSchemaOptions(this);

  if (opts.formats) addInitialFormats(this);
  if (opts.keywords) addInitialKeywords(this);
  addDefaultMetaSchema(this);
  if (typeof opts.meta == 'object') this.addMetaSchema(opts.meta);
  if (opts.nullable) this.addKeyword('nullable', {metaSchema: {type: 'boolean'}});
  addInitialSchemas(this);
}



/**
 * Validate data using schema
 * Schema will be compiled and cached (using serialized JSON as key. [fast-json-stable-stringify](https://github.com/epoberezkin/fast-json-stable-stringify) is used to serialize.
 * @this   Ajv
 * @param  {String|Object} schemaKeyRef key, ref or schema object
 * @param  {Any} data to be validated
 * @return {Boolean} validation result. Errors from the last validation will be available in `ajv.errors` (and also in compiled schema: `schema.errors`).
 */
function validate(schemaKeyRef, data) {
  var v;
  if (typeof schemaKeyRef == 'string') {
    v = this.getSchema(schemaKeyRef);
    if (!v) throw new Error('no schema with key or ref "' + schemaKeyRef + '"');
  } else {
    var schemaObj = this._addSchema(schemaKeyRef);
    v = schemaObj.validate || this._compile(schemaObj);
  }

  var valid = v(data);
  if (v.$async !== true) this.errors = v.errors;
  return valid;
}


/**
 * Create validating function for passed schema.
 * @this   Ajv
 * @param  {Object} schema schema object
 * @param  {Boolean} _meta true if schema is a meta-schema. Used internally to compile meta schemas of custom keywords.
 * @return {Function} validating function
 */
function compile(schema, _meta) {
  var schemaObj = this._addSchema(schema, undefined, _meta);
  return schemaObj.validate || this._compile(schemaObj);
}


/**
 * Adds schema to the instance.
 * @this   Ajv
 * @param {Object|Array} schema schema or array of schemas. If array is passed, `key` and other parameters will be ignored.
 * @param {String} key Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.
 * @param {Boolean} _skipValidation true to skip schema validation. Used internally, option validateSchema should be used instead.
 * @param {Boolean} _meta true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.
 * @return {Ajv} this for method chaining
 */
function addSchema(schema, key, _skipValidation, _meta) {
  if (Array.isArray(schema)){
    for (var i=0; i<schema.length; i++) this.addSchema(schema[i], undefined, _skipValidation, _meta);
    return this;
  }
  var id = this._getId(schema);
  if (id !== undefined && typeof id != 'string')
    throw new Error('schema id must be string');
  key = resolve.normalizeId(key || id);
  checkUnique(this, key);
  this._schemas[key] = this._addSchema(schema, _skipValidation, _meta, true);
  return this;
}


/**
 * Add schema that will be used to validate other schemas
 * options in META_IGNORE_OPTIONS are alway set to false
 * @this   Ajv
 * @param {Object} schema schema object
 * @param {String} key optional schema key
 * @param {Boolean} skipValidation true to skip schema validation, can be used to override validateSchema option for meta-schema
 * @return {Ajv} this for method chaining
 */
function addMetaSchema(schema, key, skipValidation) {
  this.addSchema(schema, key, skipValidation, true);
  return this;
}


/**
 * Validate schema
 * @this   Ajv
 * @param {Object} schema schema to validate
 * @param {Boolean} throwOrLogError pass true to throw (or log) an error if invalid
 * @return {Boolean} true if schema is valid
 */
function validateSchema(schema, throwOrLogError) {
  var $schema = schema.$schema;
  if ($schema !== undefined && typeof $schema != 'string')
    throw new Error('$schema must be a string');
  $schema = $schema || this._opts.defaultMeta || defaultMeta(this);
  if (!$schema) {
    this.logger.warn('meta-schema not available');
    this.errors = null;
    return true;
  }
  var valid = this.validate($schema, schema);
  if (!valid && throwOrLogError) {
    var message = 'schema is invalid: ' + this.errorsText();
    if (this._opts.validateSchema == 'log') this.logger.error(message);
    else throw new Error(message);
  }
  return valid;
}


function defaultMeta(self) {
  var meta = self._opts.meta;
  self._opts.defaultMeta = typeof meta == 'object'
                            ? self._getId(meta) || meta
                            : self.getSchema(META_SCHEMA_ID)
                              ? META_SCHEMA_ID
                              : undefined;
  return self._opts.defaultMeta;
}


/**
 * Get compiled schema from the instance by `key` or `ref`.
 * @this   Ajv
 * @param  {String} keyRef `key` that was passed to `addSchema` or full schema reference (`schema.id` or resolved id).
 * @return {Function} schema validating function (with property `schema`).
 */
function getSchema(keyRef) {
  var schemaObj = _getSchemaObj(this, keyRef);
  switch (typeof schemaObj) {
    case 'object': return schemaObj.validate || this._compile(schemaObj);
    case 'string': return this.getSchema(schemaObj);
    case 'undefined': return _getSchemaFragment(this, keyRef);
  }
}


function _getSchemaFragment(self, ref) {
  var res = resolve.schema.call(self, { schema: {} }, ref);
  if (res) {
    var schema = res.schema
      , root = res.root
      , baseId = res.baseId;
    var v = compileSchema.call(self, schema, root, undefined, baseId);
    self._fragments[ref] = new SchemaObject({
      ref: ref,
      fragment: true,
      schema: schema,
      root: root,
      baseId: baseId,
      validate: v
    });
    return v;
  }
}


function _getSchemaObj(self, keyRef) {
  keyRef = resolve.normalizeId(keyRef);
  return self._schemas[keyRef] || self._refs[keyRef] || self._fragments[keyRef];
}


/**
 * Remove cached schema(s).
 * If no parameter is passed all schemas but meta-schemas are removed.
 * If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.
 * Even if schema is referenced by other schemas it still can be removed as other schemas have local references.
 * @this   Ajv
 * @param  {String|Object|RegExp} schemaKeyRef key, ref, pattern to match key/ref or schema object
 * @return {Ajv} this for method chaining
 */
function removeSchema(schemaKeyRef) {
  if (schemaKeyRef instanceof RegExp) {
    _removeAllSchemas(this, this._schemas, schemaKeyRef);
    _removeAllSchemas(this, this._refs, schemaKeyRef);
    return this;
  }
  switch (typeof schemaKeyRef) {
    case 'undefined':
      _removeAllSchemas(this, this._schemas);
      _removeAllSchemas(this, this._refs);
      this._cache.clear();
      return this;
    case 'string':
      var schemaObj = _getSchemaObj(this, schemaKeyRef);
      if (schemaObj) this._cache.del(schemaObj.cacheKey);
      delete this._schemas[schemaKeyRef];
      delete this._refs[schemaKeyRef];
      return this;
    case 'object':
      var serialize = this._opts.serialize;
      var cacheKey = serialize ? serialize(schemaKeyRef) : schemaKeyRef;
      this._cache.del(cacheKey);
      var id = this._getId(schemaKeyRef);
      if (id) {
        id = resolve.normalizeId(id);
        delete this._schemas[id];
        delete this._refs[id];
      }
  }
  return this;
}


function _removeAllSchemas(self, schemas, regex) {
  for (var keyRef in schemas) {
    var schemaObj = schemas[keyRef];
    if (!schemaObj.meta && (!regex || regex.test(keyRef))) {
      self._cache.del(schemaObj.cacheKey);
      delete schemas[keyRef];
    }
  }
}


/* @this   Ajv */
function _addSchema(schema, skipValidation, meta, shouldAddSchema) {
  if (typeof schema != 'object' && typeof schema != 'boolean')
    throw new Error('schema should be object or boolean');
  var serialize = this._opts.serialize;
  var cacheKey = serialize ? serialize(schema) : schema;
  var cached = this._cache.get(cacheKey);
  if (cached) return cached;

  shouldAddSchema = shouldAddSchema || this._opts.addUsedSchema !== false;

  var id = resolve.normalizeId(this._getId(schema));
  if (id && shouldAddSchema) checkUnique(this, id);

  var willValidate = this._opts.validateSchema !== false && !skipValidation;
  var recursiveMeta;
  if (willValidate && !(recursiveMeta = id && id == resolve.normalizeId(schema.$schema)))
    this.validateSchema(schema, true);

  var localRefs = resolve.ids.call(this, schema);

  var schemaObj = new SchemaObject({
    id: id,
    schema: schema,
    localRefs: localRefs,
    cacheKey: cacheKey,
    meta: meta
  });

  if (id[0] != '#' && shouldAddSchema) this._refs[id] = schemaObj;
  this._cache.put(cacheKey, schemaObj);

  if (willValidate && recursiveMeta) this.validateSchema(schema, true);

  return schemaObj;
}


/* @this   Ajv */
function _compile(schemaObj, root) {
  if (schemaObj.compiling) {
    schemaObj.validate = callValidate;
    callValidate.schema = schemaObj.schema;
    callValidate.errors = null;
    callValidate.root = root ? root : callValidate;
    if (schemaObj.schema.$async === true)
      callValidate.$async = true;
    return callValidate;
  }
  schemaObj.compiling = true;

  var currentOpts;
  if (schemaObj.meta) {
    currentOpts = this._opts;
    this._opts = this._metaOpts;
  }

  var v;
  try { v = compileSchema.call(this, schemaObj.schema, root, schemaObj.localRefs); }
  catch(e) {
    delete schemaObj.validate;
    throw e;
  }
  finally {
    schemaObj.compiling = false;
    if (schemaObj.meta) this._opts = currentOpts;
  }

  schemaObj.validate = v;
  schemaObj.refs = v.refs;
  schemaObj.refVal = v.refVal;
  schemaObj.root = v.root;
  return v;


  /* @this   {*} - custom context, see passContext option */
  function callValidate() {
    /* jshint validthis: true */
    var _validate = schemaObj.validate;
    var result = _validate.apply(this, arguments);
    callValidate.errors = _validate.errors;
    return result;
  }
}


function chooseGetId(opts) {
  switch (opts.schemaId) {
    case 'auto': return _get$IdOrId;
    case 'id': return _getId;
    default: return _get$Id;
  }
}

/* @this   Ajv */
function _getId(schema) {
  if (schema.$id) this.logger.warn('schema $id ignored', schema.$id);
  return schema.id;
}

/* @this   Ajv */
function _get$Id(schema) {
  if (schema.id) this.logger.warn('schema id ignored', schema.id);
  return schema.$id;
}


function _get$IdOrId(schema) {
  if (schema.$id && schema.id && schema.$id != schema.id)
    throw new Error('schema $id is different from id');
  return schema.$id || schema.id;
}


/**
 * Convert array of error message objects to string
 * @this   Ajv
 * @param  {Array<Object>} errors optional array of validation errors, if not passed errors from the instance are used.
 * @param  {Object} options optional options with properties `separator` and `dataVar`.
 * @return {String} human readable string with all errors descriptions
 */
function errorsText(errors, options) {
  errors = errors || this.errors;
  if (!errors) return 'No errors';
  options = options || {};
  var separator = options.separator === undefined ? ', ' : options.separator;
  var dataVar = options.dataVar === undefined ? 'data' : options.dataVar;

  var text = '';
  for (var i=0; i<errors.length; i++) {
    var e = errors[i];
    if (e) text += dataVar + e.dataPath + ' ' + e.message + separator;
  }
  return text.slice(0, -separator.length);
}


/**
 * Add custom format
 * @this   Ajv
 * @param {String} name format name
 * @param {String|RegExp|Function} format string is converted to RegExp; function should return boolean (true when valid)
 * @return {Ajv} this for method chaining
 */
function addFormat(name, format) {
  if (typeof format == 'string') format = new RegExp(format);
  this._formats[name] = format;
  return this;
}


function addDefaultMetaSchema(self) {
  var $dataSchema;
  if (self._opts.$data) {
    $dataSchema = __webpack_require__(/*! ./refs/data.json */ "../node_modules/ajv/lib/refs/data.json");
    self.addMetaSchema($dataSchema, $dataSchema.$id, true);
  }
  if (self._opts.meta === false) return;
  var metaSchema = __webpack_require__(/*! ./refs/json-schema-draft-07.json */ "../node_modules/ajv/lib/refs/json-schema-draft-07.json");
  if (self._opts.$data) metaSchema = $dataMetaSchema(metaSchema, META_SUPPORT_DATA);
  self.addMetaSchema(metaSchema, META_SCHEMA_ID, true);
  self._refs['http://json-schema.org/schema'] = META_SCHEMA_ID;
}


function addInitialSchemas(self) {
  var optsSchemas = self._opts.schemas;
  if (!optsSchemas) return;
  if (Array.isArray(optsSchemas)) self.addSchema(optsSchemas);
  else for (var key in optsSchemas) self.addSchema(optsSchemas[key], key);
}


function addInitialFormats(self) {
  for (var name in self._opts.formats) {
    var format = self._opts.formats[name];
    self.addFormat(name, format);
  }
}


function addInitialKeywords(self) {
  for (var name in self._opts.keywords) {
    var keyword = self._opts.keywords[name];
    self.addKeyword(name, keyword);
  }
}


function checkUnique(self, id) {
  if (self._schemas[id] || self._refs[id])
    throw new Error('schema with key or id "' + id + '" already exists');
}


function getMetaSchemaOptions(self) {
  var metaOpts = util.copy(self._opts);
  for (var i=0; i<META_IGNORE_OPTIONS.length; i++)
    delete metaOpts[META_IGNORE_OPTIONS[i]];
  return metaOpts;
}


function setLogger(self) {
  var logger = self._opts.logger;
  if (logger === false) {
    self.logger = {log: noop, warn: noop, error: noop};
  } else {
    if (logger === undefined) logger = console;
    if (!(typeof logger == 'object' && logger.log && logger.warn && logger.error))
      throw new Error('logger must implement log, warn and error methods');
    self.logger = logger;
  }
}


function noop() {}


/***/ }),

/***/ "../node_modules/ajv/lib/cache.js":
/*!****************************************!*\
  !*** ../node_modules/ajv/lib/cache.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



var Cache = module.exports = function Cache() {
  this._cache = {};
};


Cache.prototype.put = function Cache_put(key, value) {
  this._cache[key] = value;
};


Cache.prototype.get = function Cache_get(key) {
  return this._cache[key];
};


Cache.prototype.del = function Cache_del(key) {
  delete this._cache[key];
};


Cache.prototype.clear = function Cache_clear() {
  this._cache = {};
};


/***/ }),

/***/ "../node_modules/ajv/lib/compile/async.js":
/*!************************************************!*\
  !*** ../node_modules/ajv/lib/compile/async.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var MissingRefError = __webpack_require__(/*! ./error_classes */ "../node_modules/ajv/lib/compile/error_classes.js").MissingRef;

module.exports = compileAsync;


/**
 * Creates validating function for passed schema with asynchronous loading of missing schemas.
 * `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.
 * @this  Ajv
 * @param {Object}   schema schema object
 * @param {Boolean}  meta optional true to compile meta-schema; this parameter can be skipped
 * @param {Function} callback an optional node-style callback, it is called with 2 parameters: error (or null) and validating function.
 * @return {Promise} promise that resolves with a validating function.
 */
function compileAsync(schema, meta, callback) {
  /* eslint no-shadow: 0 */
  /* global Promise */
  /* jshint validthis: true */
  var self = this;
  if (typeof this._opts.loadSchema != 'function')
    throw new Error('options.loadSchema should be a function');

  if (typeof meta == 'function') {
    callback = meta;
    meta = undefined;
  }

  var p = loadMetaSchemaOf(schema).then(function () {
    var schemaObj = self._addSchema(schema, undefined, meta);
    return schemaObj.validate || _compileAsync(schemaObj);
  });

  if (callback) {
    p.then(
      function(v) { callback(null, v); },
      callback
    );
  }

  return p;


  function loadMetaSchemaOf(sch) {
    var $schema = sch.$schema;
    return $schema && !self.getSchema($schema)
            ? compileAsync.call(self, { $ref: $schema }, true)
            : Promise.resolve();
  }


  function _compileAsync(schemaObj) {
    try { return self._compile(schemaObj); }
    catch(e) {
      if (e instanceof MissingRefError) return loadMissingSchema(e);
      throw e;
    }


    function loadMissingSchema(e) {
      var ref = e.missingSchema;
      if (added(ref)) throw new Error('Schema ' + ref + ' is loaded but ' + e.missingRef + ' cannot be resolved');

      var schemaPromise = self._loadingSchemas[ref];
      if (!schemaPromise) {
        schemaPromise = self._loadingSchemas[ref] = self._opts.loadSchema(ref);
        schemaPromise.then(removePromise, removePromise);
      }

      return schemaPromise.then(function (sch) {
        if (!added(ref)) {
          return loadMetaSchemaOf(sch).then(function () {
            if (!added(ref)) self.addSchema(sch, ref, undefined, meta);
          });
        }
      }).then(function() {
        return _compileAsync(schemaObj);
      });

      function removePromise() {
        delete self._loadingSchemas[ref];
      }

      function added(ref) {
        return self._refs[ref] || self._schemas[ref];
      }
    }
  }
}


/***/ }),

/***/ "../node_modules/ajv/lib/compile/error_classes.js":
/*!********************************************************!*\
  !*** ../node_modules/ajv/lib/compile/error_classes.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var resolve = __webpack_require__(/*! ./resolve */ "../node_modules/ajv/lib/compile/resolve.js");

module.exports = {
  Validation: errorSubclass(ValidationError),
  MissingRef: errorSubclass(MissingRefError)
};


function ValidationError(errors) {
  this.message = 'validation failed';
  this.errors = errors;
  this.ajv = this.validation = true;
}


MissingRefError.message = function (baseId, ref) {
  return 'can\'t resolve reference ' + ref + ' from id ' + baseId;
};


function MissingRefError(baseId, ref, message) {
  this.message = message || MissingRefError.message(baseId, ref);
  this.missingRef = resolve.url(baseId, ref);
  this.missingSchema = resolve.normalizeId(resolve.fullPath(this.missingRef));
}


function errorSubclass(Subclass) {
  Subclass.prototype = Object.create(Error.prototype);
  Subclass.prototype.constructor = Subclass;
  return Subclass;
}


/***/ }),

/***/ "../node_modules/ajv/lib/compile/formats.js":
/*!**************************************************!*\
  !*** ../node_modules/ajv/lib/compile/formats.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(/*! ./util */ "../node_modules/ajv/lib/compile/util.js");

var DATE = /^(\d\d\d\d)-(\d\d)-(\d\d)$/;
var DAYS = [0,31,28,31,30,31,30,31,31,30,31,30,31];
var TIME = /^(\d\d):(\d\d):(\d\d)(\.\d+)?(z|[+-]\d\d(?::?\d\d)?)?$/i;
var HOSTNAME = /^(?=.{1,253}\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\.?$/i;
var URI = /^(?:[a-z][a-z0-9+\-.]*:)(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\?(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;
var URIREF = /^(?:[a-z][a-z0-9+\-.]*:)?(?:\/?\/(?:(?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\.[a-z0-9\-._~!$&'()*+,;=:]+)\]|(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)|(?:[a-z0-9\-._~!$&'"()*+,;=]|%[0-9a-f]{2})*)(?::\d*)?(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*|\/(?:(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})+(?:\/(?:[a-z0-9\-._~!$&'"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\?(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\-._~!$&'"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;
// uri-template: https://tools.ietf.org/html/rfc6570
var URITEMPLATE = /^(?:(?:[^\x00-\x20"'<>%\\^`{|}]|%[0-9a-f]{2})|\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\*)?)*\})*$/i;
// For the source: https://gist.github.com/dperini/729294
// For test cases: https://mathiasbynens.be/demo/url-regex
// @todo Delete current URL in favour of the commented out URL rule when this issue is fixed https://github.com/eslint/eslint/issues/7983.
// var URL = /^(?:(?:https?|ftp):\/\/)(?:\S+(?::\S*)?@)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u{00a1}-\u{ffff}0-9]+-?)*[a-z\u{00a1}-\u{ffff}0-9]+)(?:\.(?:[a-z\u{00a1}-\u{ffff}0-9]+-?)*[a-z\u{00a1}-\u{ffff}0-9]+)*(?:\.(?:[a-z\u{00a1}-\u{ffff}]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?$/iu;
var URL = /^(?:(?:http[s\u017F]?|ftp):\/\/)(?:(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+(?::(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?@)?(?:(?!10(?:\.[0-9]{1,3}){3})(?!127(?:\.[0-9]{1,3}){3})(?!169\.254(?:\.[0-9]{1,3}){2})(?!192\.168(?:\.[0-9]{1,3}){2})(?!172\.(?:1[6-9]|2[0-9]|3[01])(?:\.[0-9]{1,3}){2})(?:[1-9][0-9]?|1[0-9][0-9]|2[01][0-9]|22[0-3])(?:\.(?:1?[0-9]{1,2}|2[0-4][0-9]|25[0-5])){2}(?:\.(?:[1-9][0-9]?|1[0-9][0-9]|2[0-4][0-9]|25[0-4]))|(?:(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)(?:\.(?:(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+-?)*(?:[0-9KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])+)*(?:\.(?:(?:[KSa-z\xA1-\uD7FF\uE000-\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]){2,})))(?::[0-9]{2,5})?(?:\/(?:[\0-\x08\x0E-\x1F!-\x9F\xA1-\u167F\u1681-\u1FFF\u200B-\u2027\u202A-\u202E\u2030-\u205E\u2060-\u2FFF\u3001-\uD7FF\uE000-\uFEFE\uFF00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])*)?$/i;
var UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;
var JSON_POINTER = /^(?:\/(?:[^~/]|~0|~1)*)*$/;
var JSON_POINTER_URI_FRAGMENT = /^#(?:\/(?:[a-z0-9_\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;
var RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\/(?:[^~/]|~0|~1)*)*)$/;


module.exports = formats;

function formats(mode) {
  mode = mode == 'full' ? 'full' : 'fast';
  return util.copy(formats[mode]);
}


formats.fast = {
  // date: http://tools.ietf.org/html/rfc3339#section-5.6
  date: /^\d\d\d\d-[0-1]\d-[0-3]\d$/,
  // date-time: http://tools.ietf.org/html/rfc3339#section-5.6
  time: /^(?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)?$/i,
  'date-time': /^\d\d\d\d-[0-1]\d-[0-3]\d[t\s](?:[0-2]\d:[0-5]\d:[0-5]\d|23:59:60)(?:\.\d+)?(?:z|[+-]\d\d(?::?\d\d)?)$/i,
  // uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js
  uri: /^(?:[a-z][a-z0-9+-.]*:)(?:\/?\/)?[^\s]*$/i,
  'uri-reference': /^(?:(?:[a-z][a-z0-9+-.]*:)?\/?\/)?(?:[^\\\s#][^\s#]*)?(?:#[^\\\s]*)?$/i,
  'uri-template': URITEMPLATE,
  url: URL,
  // email (sources from jsen validator):
  // http://stackoverflow.com/questions/201323/using-a-regular-expression-to-validate-an-email-address#answer-8829363
  // http://www.w3.org/TR/html5/forms.html#valid-e-mail-address (search for 'willful violation')
  email: /^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\.[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?)*$/i,
  hostname: HOSTNAME,
  // optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html
  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
  // optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses
  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
  regex: regex,
  // uuid: http://tools.ietf.org/html/rfc4122
  uuid: UUID,
  // JSON-pointer: https://tools.ietf.org/html/rfc6901
  // uri fragment: https://tools.ietf.org/html/rfc3986#appendix-A
  'json-pointer': JSON_POINTER,
  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,
  // relative JSON-pointer: http://tools.ietf.org/html/draft-luff-relative-json-pointer-00
  'relative-json-pointer': RELATIVE_JSON_POINTER
};


formats.full = {
  date: date,
  time: time,
  'date-time': date_time,
  uri: uri,
  'uri-reference': URIREF,
  'uri-template': URITEMPLATE,
  url: URL,
  email: /^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?$/i,
  hostname: HOSTNAME,
  ipv4: /^(?:(?:25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d\d?)$/,
  ipv6: /^\s*(?:(?:(?:[0-9a-f]{1,4}:){7}(?:[0-9a-f]{1,4}|:))|(?:(?:[0-9a-f]{1,4}:){6}(?::[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){5}(?:(?:(?::[0-9a-f]{1,4}){1,2})|:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(?:(?:[0-9a-f]{1,4}:){4}(?:(?:(?::[0-9a-f]{1,4}){1,3})|(?:(?::[0-9a-f]{1,4})?:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){3}(?:(?:(?::[0-9a-f]{1,4}){1,4})|(?:(?::[0-9a-f]{1,4}){0,2}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){2}(?:(?:(?::[0-9a-f]{1,4}){1,5})|(?:(?::[0-9a-f]{1,4}){0,3}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?:(?:[0-9a-f]{1,4}:){1}(?:(?:(?::[0-9a-f]{1,4}){1,6})|(?:(?::[0-9a-f]{1,4}){0,4}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(?::(?:(?:(?::[0-9a-f]{1,4}){1,7})|(?:(?::[0-9a-f]{1,4}){0,5}:(?:(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(?:\.(?:25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(?:%.+)?\s*$/i,
  regex: regex,
  uuid: UUID,
  'json-pointer': JSON_POINTER,
  'json-pointer-uri-fragment': JSON_POINTER_URI_FRAGMENT,
  'relative-json-pointer': RELATIVE_JSON_POINTER
};


function isLeapYear(year) {
  // https://tools.ietf.org/html/rfc3339#appendix-C
  return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
}


function date(str) {
  // full-date from http://tools.ietf.org/html/rfc3339#section-5.6
  var matches = str.match(DATE);
  if (!matches) return false;

  var year = +matches[1];
  var month = +matches[2];
  var day = +matches[3];

  return month >= 1 && month <= 12 && day >= 1 &&
          day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]);
}


function time(str, full) {
  var matches = str.match(TIME);
  if (!matches) return false;

  var hour = matches[1];
  var minute = matches[2];
  var second = matches[3];
  var timeZone = matches[5];
  return ((hour <= 23 && minute <= 59 && second <= 59) ||
          (hour == 23 && minute == 59 && second == 60)) &&
         (!full || timeZone);
}


var DATE_TIME_SEPARATOR = /t|\s/i;
function date_time(str) {
  // http://tools.ietf.org/html/rfc3339#section-5.6
  var dateTime = str.split(DATE_TIME_SEPARATOR);
  return dateTime.length == 2 && date(dateTime[0]) && time(dateTime[1], true);
}


var NOT_URI_FRAGMENT = /\/|:/;
function uri(str) {
  // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required "."
  return NOT_URI_FRAGMENT.test(str) && URI.test(str);
}


var Z_ANCHOR = /[^\\]\\Z/;
function regex(str) {
  if (Z_ANCHOR.test(str)) return false;
  try {
    new RegExp(str);
    return true;
  } catch(e) {
    return false;
  }
}


/***/ }),

/***/ "../node_modules/ajv/lib/compile/index.js":
/*!************************************************!*\
  !*** ../node_modules/ajv/lib/compile/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var resolve = __webpack_require__(/*! ./resolve */ "../node_modules/ajv/lib/compile/resolve.js")
  , util = __webpack_require__(/*! ./util */ "../node_modules/ajv/lib/compile/util.js")
  , errorClasses = __webpack_require__(/*! ./error_classes */ "../node_modules/ajv/lib/compile/error_classes.js")
  , stableStringify = __webpack_require__(/*! fast-json-stable-stringify */ "../node_modules/fast-json-stable-stringify/index.js");

var validateGenerator = __webpack_require__(/*! ../dotjs/validate */ "../node_modules/ajv/lib/dotjs/validate.js");

/**
 * Functions below are used inside compiled validations function
 */

var ucs2length = util.ucs2length;
var equal = __webpack_require__(/*! fast-deep-equal */ "../node_modules/fast-deep-equal/index.js");

// this error is thrown by async schemas to return validation errors via exception
var ValidationError = errorClasses.Validation;

module.exports = compile;


/**
 * Compiles schema to validation function
 * @this   Ajv
 * @param  {Object} schema schema object
 * @param  {Object} root object with information about the root schema for this schema
 * @param  {Object} localRefs the hash of local references inside the schema (created by resolve.id), used for inline resolution
 * @param  {String} baseId base ID for IDs in the schema
 * @return {Function} validation function
 */
function compile(schema, root, localRefs, baseId) {
  /* jshint validthis: true, evil: true */
  /* eslint no-shadow: 0 */
  var self = this
    , opts = this._opts
    , refVal = [ undefined ]
    , refs = {}
    , patterns = []
    , patternsHash = {}
    , defaults = []
    , defaultsHash = {}
    , customRules = [];

  root = root || { schema: schema, refVal: refVal, refs: refs };

  var c = checkCompiling.call(this, schema, root, baseId);
  var compilation = this._compilations[c.index];
  if (c.compiling) return (compilation.callValidate = callValidate);

  var formats = this._formats;
  var RULES = this.RULES;

  try {
    var v = localCompile(schema, root, localRefs, baseId);
    compilation.validate = v;
    var cv = compilation.callValidate;
    if (cv) {
      cv.schema = v.schema;
      cv.errors = null;
      cv.refs = v.refs;
      cv.refVal = v.refVal;
      cv.root = v.root;
      cv.$async = v.$async;
      if (opts.sourceCode) cv.source = v.source;
    }
    return v;
  } finally {
    endCompiling.call(this, schema, root, baseId);
  }

  /* @this   {*} - custom context, see passContext option */
  function callValidate() {
    /* jshint validthis: true */
    var validate = compilation.validate;
    var result = validate.apply(this, arguments);
    callValidate.errors = validate.errors;
    return result;
  }

  function localCompile(_schema, _root, localRefs, baseId) {
    var isRoot = !_root || (_root && _root.schema == _schema);
    if (_root.schema != root.schema)
      return compile.call(self, _schema, _root, localRefs, baseId);

    var $async = _schema.$async === true;

    var sourceCode = validateGenerator({
      isTop: true,
      schema: _schema,
      isRoot: isRoot,
      baseId: baseId,
      root: _root,
      schemaPath: '',
      errSchemaPath: '#',
      errorPath: '""',
      MissingRefError: errorClasses.MissingRef,
      RULES: RULES,
      validate: validateGenerator,
      util: util,
      resolve: resolve,
      resolveRef: resolveRef,
      usePattern: usePattern,
      useDefault: useDefault,
      useCustomRule: useCustomRule,
      opts: opts,
      formats: formats,
      logger: self.logger,
      self: self
    });

    sourceCode = vars(refVal, refValCode) + vars(patterns, patternCode)
                   + vars(defaults, defaultCode) + vars(customRules, customRuleCode)
                   + sourceCode;

    if (opts.processCode) sourceCode = opts.processCode(sourceCode);
    // console.log('\n\n\n *** \n', JSON.stringify(sourceCode));
    var validate;
    try {
      var makeValidate = new Function(
        'self',
        'RULES',
        'formats',
        'root',
        'refVal',
        'defaults',
        'customRules',
        'equal',
        'ucs2length',
        'ValidationError',
        sourceCode
      );

      validate = makeValidate(
        self,
        RULES,
        formats,
        root,
        refVal,
        defaults,
        customRules,
        equal,
        ucs2length,
        ValidationError
      );

      refVal[0] = validate;
    } catch(e) {
      self.logger.error('Error compiling schema, function code:', sourceCode);
      throw e;
    }

    validate.schema = _schema;
    validate.errors = null;
    validate.refs = refs;
    validate.refVal = refVal;
    validate.root = isRoot ? validate : _root;
    if ($async) validate.$async = true;
    if (opts.sourceCode === true) {
      validate.source = {
        code: sourceCode,
        patterns: patterns,
        defaults: defaults
      };
    }

    return validate;
  }

  function resolveRef(baseId, ref, isRoot) {
    ref = resolve.url(baseId, ref);
    var refIndex = refs[ref];
    var _refVal, refCode;
    if (refIndex !== undefined) {
      _refVal = refVal[refIndex];
      refCode = 'refVal[' + refIndex + ']';
      return resolvedRef(_refVal, refCode);
    }
    if (!isRoot && root.refs) {
      var rootRefId = root.refs[ref];
      if (rootRefId !== undefined) {
        _refVal = root.refVal[rootRefId];
        refCode = addLocalRef(ref, _refVal);
        return resolvedRef(_refVal, refCode);
      }
    }

    refCode = addLocalRef(ref);
    var v = resolve.call(self, localCompile, root, ref);
    if (v === undefined) {
      var localSchema = localRefs && localRefs[ref];
      if (localSchema) {
        v = resolve.inlineRef(localSchema, opts.inlineRefs)
            ? localSchema
            : compile.call(self, localSchema, root, localRefs, baseId);
      }
    }

    if (v === undefined) {
      removeLocalRef(ref);
    } else {
      replaceLocalRef(ref, v);
      return resolvedRef(v, refCode);
    }
  }

  function addLocalRef(ref, v) {
    var refId = refVal.length;
    refVal[refId] = v;
    refs[ref] = refId;
    return 'refVal' + refId;
  }

  function removeLocalRef(ref) {
    delete refs[ref];
  }

  function replaceLocalRef(ref, v) {
    var refId = refs[ref];
    refVal[refId] = v;
  }

  function resolvedRef(refVal, code) {
    return typeof refVal == 'object' || typeof refVal == 'boolean'
            ? { code: code, schema: refVal, inline: true }
            : { code: code, $async: refVal && !!refVal.$async };
  }

  function usePattern(regexStr) {
    var index = patternsHash[regexStr];
    if (index === undefined) {
      index = patternsHash[regexStr] = patterns.length;
      patterns[index] = regexStr;
    }
    return 'pattern' + index;
  }

  function useDefault(value) {
    switch (typeof value) {
      case 'boolean':
      case 'number':
        return '' + value;
      case 'string':
        return util.toQuotedString(value);
      case 'object':
        if (value === null) return 'null';
        var valueStr = stableStringify(value);
        var index = defaultsHash[valueStr];
        if (index === undefined) {
          index = defaultsHash[valueStr] = defaults.length;
          defaults[index] = value;
        }
        return 'default' + index;
    }
  }

  function useCustomRule(rule, schema, parentSchema, it) {
    if (self._opts.validateSchema !== false) {
      var deps = rule.definition.dependencies;
      if (deps && !deps.every(function(keyword) {
        return Object.prototype.hasOwnProperty.call(parentSchema, keyword);
      }))
        throw new Error('parent schema must have all required keywords: ' + deps.join(','));

      var validateSchema = rule.definition.validateSchema;
      if (validateSchema) {
        var valid = validateSchema(schema);
        if (!valid) {
          var message = 'keyword schema is invalid: ' + self.errorsText(validateSchema.errors);
          if (self._opts.validateSchema == 'log') self.logger.error(message);
          else throw new Error(message);
        }
      }
    }

    var compile = rule.definition.compile
      , inline = rule.definition.inline
      , macro = rule.definition.macro;

    var validate;
    if (compile) {
      validate = compile.call(self, schema, parentSchema, it);
    } else if (macro) {
      validate = macro.call(self, schema, parentSchema, it);
      if (opts.validateSchema !== false) self.validateSchema(validate, true);
    } else if (inline) {
      validate = inline.call(self, it, rule.keyword, schema, parentSchema);
    } else {
      validate = rule.definition.validate;
      if (!validate) return;
    }

    if (validate === undefined)
      throw new Error('custom keyword "' + rule.keyword + '"failed to compile');

    var index = customRules.length;
    customRules[index] = validate;

    return {
      code: 'customRule' + index,
      validate: validate
    };
  }
}


/**
 * Checks if the schema is currently compiled
 * @this   Ajv
 * @param  {Object} schema schema to compile
 * @param  {Object} root root object
 * @param  {String} baseId base schema ID
 * @return {Object} object with properties "index" (compilation index) and "compiling" (boolean)
 */
function checkCompiling(schema, root, baseId) {
  /* jshint validthis: true */
  var index = compIndex.call(this, schema, root, baseId);
  if (index >= 0) return { index: index, compiling: true };
  index = this._compilations.length;
  this._compilations[index] = {
    schema: schema,
    root: root,
    baseId: baseId
  };
  return { index: index, compiling: false };
}


/**
 * Removes the schema from the currently compiled list
 * @this   Ajv
 * @param  {Object} schema schema to compile
 * @param  {Object} root root object
 * @param  {String} baseId base schema ID
 */
function endCompiling(schema, root, baseId) {
  /* jshint validthis: true */
  var i = compIndex.call(this, schema, root, baseId);
  if (i >= 0) this._compilations.splice(i, 1);
}


/**
 * Index of schema compilation in the currently compiled list
 * @this   Ajv
 * @param  {Object} schema schema to compile
 * @param  {Object} root root object
 * @param  {String} baseId base schema ID
 * @return {Integer} compilation index
 */
function compIndex(schema, root, baseId) {
  /* jshint validthis: true */
  for (var i=0; i<this._compilations.length; i++) {
    var c = this._compilations[i];
    if (c.schema == schema && c.root == root && c.baseId == baseId) return i;
  }
  return -1;
}


function patternCode(i, patterns) {
  return 'var pattern' + i + ' = new RegExp(' + util.toQuotedString(patterns[i]) + ');';
}


function defaultCode(i) {
  return 'var default' + i + ' = defaults[' + i + '];';
}


function refValCode(i, refVal) {
  return refVal[i] === undefined ? '' : 'var refVal' + i + ' = refVal[' + i + '];';
}


function customRuleCode(i) {
  return 'var customRule' + i + ' = customRules[' + i + '];';
}


function vars(arr, statement) {
  if (!arr.length) return '';
  var code = '';
  for (var i=0; i<arr.length; i++)
    code += statement(i, arr);
  return code;
}


/***/ }),

/***/ "../node_modules/ajv/lib/compile/resolve.js":
/*!**************************************************!*\
  !*** ../node_modules/ajv/lib/compile/resolve.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var URI = __webpack_require__(/*! uri-js */ "../node_modules/uri-js/dist/es5/uri.all.js")
  , equal = __webpack_require__(/*! fast-deep-equal */ "../node_modules/fast-deep-equal/index.js")
  , util = __webpack_require__(/*! ./util */ "../node_modules/ajv/lib/compile/util.js")
  , SchemaObject = __webpack_require__(/*! ./schema_obj */ "../node_modules/ajv/lib/compile/schema_obj.js")
  , traverse = __webpack_require__(/*! json-schema-traverse */ "../node_modules/json-schema-traverse/index.js");

module.exports = resolve;

resolve.normalizeId = normalizeId;
resolve.fullPath = getFullPath;
resolve.url = resolveUrl;
resolve.ids = resolveIds;
resolve.inlineRef = inlineRef;
resolve.schema = resolveSchema;

/**
 * [resolve and compile the references ($ref)]
 * @this   Ajv
 * @param  {Function} compile reference to schema compilation funciton (localCompile)
 * @param  {Object} root object with information about the root schema for the current schema
 * @param  {String} ref reference to resolve
 * @return {Object|Function} schema object (if the schema can be inlined) or validation function
 */
function resolve(compile, root, ref) {
  /* jshint validthis: true */
  var refVal = this._refs[ref];
  if (typeof refVal == 'string') {
    if (this._refs[refVal]) refVal = this._refs[refVal];
    else return resolve.call(this, compile, root, refVal);
  }

  refVal = refVal || this._schemas[ref];
  if (refVal instanceof SchemaObject) {
    return inlineRef(refVal.schema, this._opts.inlineRefs)
            ? refVal.schema
            : refVal.validate || this._compile(refVal);
  }

  var res = resolveSchema.call(this, root, ref);
  var schema, v, baseId;
  if (res) {
    schema = res.schema;
    root = res.root;
    baseId = res.baseId;
  }

  if (schema instanceof SchemaObject) {
    v = schema.validate || compile.call(this, schema.schema, root, undefined, baseId);
  } else if (schema !== undefined) {
    v = inlineRef(schema, this._opts.inlineRefs)
        ? schema
        : compile.call(this, schema, root, undefined, baseId);
  }

  return v;
}


/**
 * Resolve schema, its root and baseId
 * @this Ajv
 * @param  {Object} root root object with properties schema, refVal, refs
 * @param  {String} ref  reference to resolve
 * @return {Object} object with properties schema, root, baseId
 */
function resolveSchema(root, ref) {
  /* jshint validthis: true */
  var p = URI.parse(ref)
    , refPath = _getFullPath(p)
    , baseId = getFullPath(this._getId(root.schema));
  if (Object.keys(root.schema).length === 0 || refPath !== baseId) {
    var id = normalizeId(refPath);
    var refVal = this._refs[id];
    if (typeof refVal == 'string') {
      return resolveRecursive.call(this, root, refVal, p);
    } else if (refVal instanceof SchemaObject) {
      if (!refVal.validate) this._compile(refVal);
      root = refVal;
    } else {
      refVal = this._schemas[id];
      if (refVal instanceof SchemaObject) {
        if (!refVal.validate) this._compile(refVal);
        if (id == normalizeId(ref))
          return { schema: refVal, root: root, baseId: baseId };
        root = refVal;
      } else {
        return;
      }
    }
    if (!root.schema) return;
    baseId = getFullPath(this._getId(root.schema));
  }
  return getJsonPointer.call(this, p, baseId, root.schema, root);
}


/* @this Ajv */
function resolveRecursive(root, ref, parsedRef) {
  /* jshint validthis: true */
  var res = resolveSchema.call(this, root, ref);
  if (res) {
    var schema = res.schema;
    var baseId = res.baseId;
    root = res.root;
    var id = this._getId(schema);
    if (id) baseId = resolveUrl(baseId, id);
    return getJsonPointer.call(this, parsedRef, baseId, schema, root);
  }
}


var PREVENT_SCOPE_CHANGE = util.toHash(['properties', 'patternProperties', 'enum', 'dependencies', 'definitions']);
/* @this Ajv */
function getJsonPointer(parsedRef, baseId, schema, root) {
  /* jshint validthis: true */
  parsedRef.fragment = parsedRef.fragment || '';
  if (parsedRef.fragment.slice(0,1) != '/') return;
  var parts = parsedRef.fragment.split('/');

  for (var i = 1; i < parts.length; i++) {
    var part = parts[i];
    if (part) {
      part = util.unescapeFragment(part);
      schema = schema[part];
      if (schema === undefined) break;
      var id;
      if (!PREVENT_SCOPE_CHANGE[part]) {
        id = this._getId(schema);
        if (id) baseId = resolveUrl(baseId, id);
        if (schema.$ref) {
          var $ref = resolveUrl(baseId, schema.$ref);
          var res = resolveSchema.call(this, root, $ref);
          if (res) {
            schema = res.schema;
            root = res.root;
            baseId = res.baseId;
          }
        }
      }
    }
  }
  if (schema !== undefined && schema !== root.schema)
    return { schema: schema, root: root, baseId: baseId };
}


var SIMPLE_INLINED = util.toHash([
  'type', 'format', 'pattern',
  'maxLength', 'minLength',
  'maxProperties', 'minProperties',
  'maxItems', 'minItems',
  'maximum', 'minimum',
  'uniqueItems', 'multipleOf',
  'required', 'enum'
]);
function inlineRef(schema, limit) {
  if (limit === false) return false;
  if (limit === undefined || limit === true) return checkNoRef(schema);
  else if (limit) return countKeys(schema) <= limit;
}


function checkNoRef(schema) {
  var item;
  if (Array.isArray(schema)) {
    for (var i=0; i<schema.length; i++) {
      item = schema[i];
      if (typeof item == 'object' && !checkNoRef(item)) return false;
    }
  } else {
    for (var key in schema) {
      if (key == '$ref') return false;
      item = schema[key];
      if (typeof item == 'object' && !checkNoRef(item)) return false;
    }
  }
  return true;
}


function countKeys(schema) {
  var count = 0, item;
  if (Array.isArray(schema)) {
    for (var i=0; i<schema.length; i++) {
      item = schema[i];
      if (typeof item == 'object') count += countKeys(item);
      if (count == Infinity) return Infinity;
    }
  } else {
    for (var key in schema) {
      if (key == '$ref') return Infinity;
      if (SIMPLE_INLINED[key]) {
        count++;
      } else {
        item = schema[key];
        if (typeof item == 'object') count += countKeys(item) + 1;
        if (count == Infinity) return Infinity;
      }
    }
  }
  return count;
}


function getFullPath(id, normalize) {
  if (normalize !== false) id = normalizeId(id);
  var p = URI.parse(id);
  return _getFullPath(p);
}


function _getFullPath(p) {
  return URI.serialize(p).split('#')[0] + '#';
}


var TRAILING_SLASH_HASH = /#\/?$/;
function normalizeId(id) {
  return id ? id.replace(TRAILING_SLASH_HASH, '') : '';
}


function resolveUrl(baseId, id) {
  id = normalizeId(id);
  return URI.resolve(baseId, id);
}


/* @this Ajv */
function resolveIds(schema) {
  var schemaId = normalizeId(this._getId(schema));
  var baseIds = {'': schemaId};
  var fullPaths = {'': getFullPath(schemaId, false)};
  var localRefs = {};
  var self = this;

  traverse(schema, {allKeys: true}, function(sch, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {
    if (jsonPtr === '') return;
    var id = self._getId(sch);
    var baseId = baseIds[parentJsonPtr];
    var fullPath = fullPaths[parentJsonPtr] + '/' + parentKeyword;
    if (keyIndex !== undefined)
      fullPath += '/' + (typeof keyIndex == 'number' ? keyIndex : util.escapeFragment(keyIndex));

    if (typeof id == 'string') {
      id = baseId = normalizeId(baseId ? URI.resolve(baseId, id) : id);

      var refVal = self._refs[id];
      if (typeof refVal == 'string') refVal = self._refs[refVal];
      if (refVal && refVal.schema) {
        if (!equal(sch, refVal.schema))
          throw new Error('id "' + id + '" resolves to more than one schema');
      } else if (id != normalizeId(fullPath)) {
        if (id[0] == '#') {
          if (localRefs[id] && !equal(sch, localRefs[id]))
            throw new Error('id "' + id + '" resolves to more than one schema');
          localRefs[id] = sch;
        } else {
          self._refs[id] = fullPath;
        }
      }
    }
    baseIds[jsonPtr] = baseId;
    fullPaths[jsonPtr] = fullPath;
  });

  return localRefs;
}


/***/ }),

/***/ "../node_modules/ajv/lib/compile/rules.js":
/*!************************************************!*\
  !*** ../node_modules/ajv/lib/compile/rules.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ruleModules = __webpack_require__(/*! ../dotjs */ "../node_modules/ajv/lib/dotjs/index.js")
  , toHash = __webpack_require__(/*! ./util */ "../node_modules/ajv/lib/compile/util.js").toHash;

module.exports = function rules() {
  var RULES = [
    { type: 'number',
      rules: [ { 'maximum': ['exclusiveMaximum'] },
               { 'minimum': ['exclusiveMinimum'] }, 'multipleOf', 'format'] },
    { type: 'string',
      rules: [ 'maxLength', 'minLength', 'pattern', 'format' ] },
    { type: 'array',
      rules: [ 'maxItems', 'minItems', 'items', 'contains', 'uniqueItems' ] },
    { type: 'object',
      rules: [ 'maxProperties', 'minProperties', 'required', 'dependencies', 'propertyNames',
               { 'properties': ['additionalProperties', 'patternProperties'] } ] },
    { rules: [ '$ref', 'const', 'enum', 'not', 'anyOf', 'oneOf', 'allOf', 'if' ] }
  ];

  var ALL = [ 'type', '$comment' ];
  var KEYWORDS = [
    '$schema', '$id', 'id', '$data', '$async', 'title',
    'description', 'default', 'definitions',
    'examples', 'readOnly', 'writeOnly',
    'contentMediaType', 'contentEncoding',
    'additionalItems', 'then', 'else'
  ];
  var TYPES = [ 'number', 'integer', 'string', 'array', 'object', 'boolean', 'null' ];
  RULES.all = toHash(ALL);
  RULES.types = toHash(TYPES);

  RULES.forEach(function (group) {
    group.rules = group.rules.map(function (keyword) {
      var implKeywords;
      if (typeof keyword == 'object') {
        var key = Object.keys(keyword)[0];
        implKeywords = keyword[key];
        keyword = key;
        implKeywords.forEach(function (k) {
          ALL.push(k);
          RULES.all[k] = true;
        });
      }
      ALL.push(keyword);
      var rule = RULES.all[keyword] = {
        keyword: keyword,
        code: ruleModules[keyword],
        implements: implKeywords
      };
      return rule;
    });

    RULES.all.$comment = {
      keyword: '$comment',
      code: ruleModules.$comment
    };

    if (group.type) RULES.types[group.type] = group;
  });

  RULES.keywords = toHash(ALL.concat(KEYWORDS));
  RULES.custom = {};

  return RULES;
};


/***/ }),

/***/ "../node_modules/ajv/lib/compile/schema_obj.js":
/*!*****************************************************!*\
  !*** ../node_modules/ajv/lib/compile/schema_obj.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var util = __webpack_require__(/*! ./util */ "../node_modules/ajv/lib/compile/util.js");

module.exports = SchemaObject;

function SchemaObject(obj) {
  util.copy(obj, this);
}


/***/ }),

/***/ "../node_modules/ajv/lib/compile/ucs2length.js":
/*!*****************************************************!*\
  !*** ../node_modules/ajv/lib/compile/ucs2length.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// https://mathiasbynens.be/notes/javascript-encoding
// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode
module.exports = function ucs2length(str) {
  var length = 0
    , len = str.length
    , pos = 0
    , value;
  while (pos < len) {
    length++;
    value = str.charCodeAt(pos++);
    if (value >= 0xD800 && value <= 0xDBFF && pos < len) {
      // high surrogate, and there is a next character
      value = str.charCodeAt(pos);
      if ((value & 0xFC00) == 0xDC00) pos++; // low surrogate
    }
  }
  return length;
};


/***/ }),

/***/ "../node_modules/ajv/lib/compile/util.js":
/*!***********************************************!*\
  !*** ../node_modules/ajv/lib/compile/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";



module.exports = {
  copy: copy,
  checkDataType: checkDataType,
  checkDataTypes: checkDataTypes,
  coerceToTypes: coerceToTypes,
  toHash: toHash,
  getProperty: getProperty,
  escapeQuotes: escapeQuotes,
  equal: __webpack_require__(/*! fast-deep-equal */ "../node_modules/fast-deep-equal/index.js"),
  ucs2length: __webpack_require__(/*! ./ucs2length */ "../node_modules/ajv/lib/compile/ucs2length.js"),
  varOccurences: varOccurences,
  varReplace: varReplace,
  cleanUpCode: cleanUpCode,
  finalCleanUpCode: finalCleanUpCode,
  schemaHasRules: schemaHasRules,
  schemaHasRulesExcept: schemaHasRulesExcept,
  schemaUnknownRules: schemaUnknownRules,
  toQuotedString: toQuotedString,
  getPathExpr: getPathExpr,
  getPath: getPath,
  getData: getData,
  unescapeFragment: unescapeFragment,
  unescapeJsonPointer: unescapeJsonPointer,
  escapeFragment: escapeFragment,
  escapeJsonPointer: escapeJsonPointer
};


function copy(o, to) {
  to = to || {};
  for (var key in o) to[key] = o[key];
  return to;
}


function checkDataType(dataType, data, negate) {
  var EQUAL = negate ? ' !== ' : ' === '
    , AND = negate ? ' || ' : ' && '
    , OK = negate ? '!' : ''
    , NOT = negate ? '' : '!';
  switch (dataType) {
    case 'null': return data + EQUAL + 'null';
    case 'array': return OK + 'Array.isArray(' + data + ')';
    case 'object': return '(' + OK + data + AND +
                          'typeof ' + data + EQUAL + '"object"' + AND +
                          NOT + 'Array.isArray(' + data + '))';
    case 'integer': return '(typeof ' + data + EQUAL + '"number"' + AND +
                           NOT + '(' + data + ' % 1)' +
                           AND + data + EQUAL + data + ')';
    default: return 'typeof ' + data + EQUAL + '"' + dataType + '"';
  }
}


function checkDataTypes(dataTypes, data) {
  switch (dataTypes.length) {
    case 1: return checkDataType(dataTypes[0], data, true);
    default:
      var code = '';
      var types = toHash(dataTypes);
      if (types.array && types.object) {
        code = types.null ? '(': '(!' + data + ' || ';
        code += 'typeof ' + data + ' !== "object")';
        delete types.null;
        delete types.array;
        delete types.object;
      }
      if (types.number) delete types.integer;
      for (var t in types)
        code += (code ? ' && ' : '' ) + checkDataType(t, data, true);

      return code;
  }
}


var COERCE_TO_TYPES = toHash([ 'string', 'number', 'integer', 'boolean', 'null' ]);
function coerceToTypes(optionCoerceTypes, dataTypes) {
  if (Array.isArray(dataTypes)) {
    var types = [];
    for (var i=0; i<dataTypes.length; i++) {
      var t = dataTypes[i];
      if (COERCE_TO_TYPES[t]) types[types.length] = t;
      else if (optionCoerceTypes === 'array' && t === 'array') types[types.length] = t;
    }
    if (types.length) return types;
  } else if (COERCE_TO_TYPES[dataTypes]) {
    return [dataTypes];
  } else if (optionCoerceTypes === 'array' && dataTypes === 'array') {
    return ['array'];
  }
}


function toHash(arr) {
  var hash = {};
  for (var i=0; i<arr.length; i++) hash[arr[i]] = true;
  return hash;
}


var IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i;
var SINGLE_QUOTE = /'|\\/g;
function getProperty(key) {
  return typeof key == 'number'
          ? '[' + key + ']'
          : IDENTIFIER.test(key)
            ? '.' + key
            : "['" + escapeQuotes(key) + "']";
}


function escapeQuotes(str) {
  return str.replace(SINGLE_QUOTE, '\\$&')
            .replace(/\n/g, '\\n')
            .replace(/\r/g, '\\r')
            .replace(/\f/g, '\\f')
            .replace(/\t/g, '\\t');
}


function varOccurences(str, dataVar) {
  dataVar += '[^0-9]';
  var matches = str.match(new RegExp(dataVar, 'g'));
  return matches ? matches.length : 0;
}


function varReplace(str, dataVar, expr) {
  dataVar += '([^0-9])';
  expr = expr.replace(/\$/g, '$$$$');
  return str.replace(new RegExp(dataVar, 'g'), expr + '$1');
}


var EMPTY_ELSE = /else\s*{\s*}/g
  , EMPTY_IF_NO_ELSE = /if\s*\([^)]+\)\s*\{\s*\}(?!\s*else)/g
  , EMPTY_IF_WITH_ELSE = /if\s*\(([^)]+)\)\s*\{\s*\}\s*else(?!\s*if)/g;
function cleanUpCode(out) {
  return out.replace(EMPTY_ELSE, '')
            .replace(EMPTY_IF_NO_ELSE, '')
            .replace(EMPTY_IF_WITH_ELSE, 'if (!($1))');
}


var ERRORS_REGEXP = /[^v.]errors/g
  , REMOVE_ERRORS = /var errors = 0;|var vErrors = null;|validate.errors = vErrors;/g
  , REMOVE_ERRORS_ASYNC = /var errors = 0;|var vErrors = null;/g
  , RETURN_VALID = 'return errors === 0;'
  , RETURN_TRUE = 'validate.errors = null; return true;'
  , RETURN_ASYNC = /if \(errors === 0\) return data;\s*else throw new ValidationError\(vErrors\);/
  , RETURN_DATA_ASYNC = 'return data;'
  , ROOTDATA_REGEXP = /[^A-Za-z_$]rootData[^A-Za-z0-9_$]/g
  , REMOVE_ROOTDATA = /if \(rootData === undefined\) rootData = data;/;

function finalCleanUpCode(out, async) {
  var matches = out.match(ERRORS_REGEXP);
  if (matches && matches.length == 2) {
    out = async
          ? out.replace(REMOVE_ERRORS_ASYNC, '')
               .replace(RETURN_ASYNC, RETURN_DATA_ASYNC)
          : out.replace(REMOVE_ERRORS, '')
               .replace(RETURN_VALID, RETURN_TRUE);
  }

  matches = out.match(ROOTDATA_REGEXP);
  if (!matches || matches.length !== 3) return out;
  return out.replace(REMOVE_ROOTDATA, '');
}


function schemaHasRules(schema, rules) {
  if (typeof schema == 'boolean') return !schema;
  for (var key in schema) if (rules[key]) return true;
}


function schemaHasRulesExcept(schema, rules, exceptKeyword) {
  if (typeof schema == 'boolean') return !schema && exceptKeyword != 'not';
  for (var key in schema) if (key != exceptKeyword && rules[key]) return true;
}


function schemaUnknownRules(schema, rules) {
  if (typeof schema == 'boolean') return;
  for (var key in schema) if (!rules[key]) return key;
}


function toQuotedString(str) {
  return '\'' + escapeQuotes(str) + '\'';
}


function getPathExpr(currentPath, expr, jsonPointers, isNumber) {
  var path = jsonPointers // false by default
              ? '\'/\' + ' + expr + (isNumber ? '' : '.replace(/~/g, \'~0\').replace(/\\//g, \'~1\')')
              : (isNumber ? '\'[\' + ' + expr + ' + \']\'' : '\'[\\\'\' + ' + expr + ' + \'\\\']\'');
  return joinPaths(currentPath, path);
}


function getPath(currentPath, prop, jsonPointers) {
  var path = jsonPointers // false by default
              ? toQuotedString('/' + escapeJsonPointer(prop))
              : toQuotedString(getProperty(prop));
  return joinPaths(currentPath, path);
}


var JSON_POINTER = /^\/(?:[^~]|~0|~1)*$/;
var RELATIVE_JSON_POINTER = /^([0-9]+)(#|\/(?:[^~]|~0|~1)*)?$/;
function getData($data, lvl, paths) {
  var up, jsonPointer, data, matches;
  if ($data === '') return 'rootData';
  if ($data[0] == '/') {
    if (!JSON_POINTER.test($data)) throw new Error('Invalid JSON-pointer: ' + $data);
    jsonPointer = $data;
    data = 'rootData';
  } else {
    matches = $data.match(RELATIVE_JSON_POINTER);
    if (!matches) throw new Error('Invalid JSON-pointer: ' + $data);
    up = +matches[1];
    jsonPointer = matches[2];
    if (jsonPointer == '#') {
      if (up >= lvl) throw new Error('Cannot access property/index ' + up + ' levels up, current level is ' + lvl);
      return paths[lvl - up];
    }

    if (up > lvl) throw new Error('Cannot access data ' + up + ' levels up, current level is ' + lvl);
    data = 'data' + ((lvl - up) || '');
    if (!jsonPointer) return data;
  }

  var expr = data;
  var segments = jsonPointer.split('/');
  for (var i=0; i<segments.length; i++) {
    var segment = segments[i];
    if (segment) {
      data += getProperty(unescapeJsonPointer(segment));
      expr += ' && ' + data;
    }
  }
  return expr;
}


function joinPaths (a, b) {
  if (a == '""') return b;
  return (a + ' + ' + b).replace(/' \+ '/g, '');
}


function unescapeFragment(str) {
  return unescapeJsonPointer(decodeURIComponent(str));
}


function escapeFragment(str) {
  return encodeURIComponent(escapeJsonPointer(str));
}


function escapeJsonPointer(str) {
  return str.replace(/~/g, '~0').replace(/\//g, '~1');
}


function unescapeJsonPointer(str) {
  return str.replace(/~1/g, '/').replace(/~0/g, '~');
}


/***/ }),

/***/ "../node_modules/ajv/lib/data.js":
/*!***************************************!*\
  !*** ../node_modules/ajv/lib/data.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var KEYWORDS = [
  'multipleOf',
  'maximum',
  'exclusiveMaximum',
  'minimum',
  'exclusiveMinimum',
  'maxLength',
  'minLength',
  'pattern',
  'additionalItems',
  'maxItems',
  'minItems',
  'uniqueItems',
  'maxProperties',
  'minProperties',
  'required',
  'additionalProperties',
  'enum',
  'format',
  'const'
];

module.exports = function (metaSchema, keywordsJsonPointers) {
  for (var i=0; i<keywordsJsonPointers.length; i++) {
    metaSchema = JSON.parse(JSON.stringify(metaSchema));
    var segments = keywordsJsonPointers[i].split('/');
    var keywords = metaSchema;
    var j;
    for (j=1; j<segments.length; j++)
      keywords = keywords[segments[j]];

    for (j=0; j<KEYWORDS.length; j++) {
      var key = KEYWORDS[j];
      var schema = keywords[key];
      if (schema) {
        keywords[key] = {
          anyOf: [
            schema,
            { $ref: 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }
          ]
        };
      }
    }
  }

  return metaSchema;
};


/***/ }),

/***/ "../node_modules/ajv/lib/definition_schema.js":
/*!****************************************************!*\
  !*** ../node_modules/ajv/lib/definition_schema.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var metaSchema = __webpack_require__(/*! ./refs/json-schema-draft-07.json */ "../node_modules/ajv/lib/refs/json-schema-draft-07.json");

module.exports = {
  $id: 'https://github.com/epoberezkin/ajv/blob/master/lib/definition_schema.js',
  definitions: {
    simpleTypes: metaSchema.definitions.simpleTypes
  },
  type: 'object',
  dependencies: {
    schema: ['validate'],
    $data: ['validate'],
    statements: ['inline'],
    valid: {not: {required: ['macro']}}
  },
  properties: {
    type: metaSchema.properties.type,
    schema: {type: 'boolean'},
    statements: {type: 'boolean'},
    dependencies: {
      type: 'array',
      items: {type: 'string'}
    },
    metaSchema: {type: 'object'},
    modifying: {type: 'boolean'},
    valid: {type: 'boolean'},
    $data: {type: 'boolean'},
    async: {type: 'boolean'},
    errors: {
      anyOf: [
        {type: 'boolean'},
        {const: 'full'}
      ]
    }
  }
};


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/_limit.js":
/*!***********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/_limit.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limit(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $isMax = $keyword == 'maximum',
    $exclusiveKeyword = $isMax ? 'exclusiveMaximum' : 'exclusiveMinimum',
    $schemaExcl = it.schema[$exclusiveKeyword],
    $isDataExcl = it.opts.$data && $schemaExcl && $schemaExcl.$data,
    $op = $isMax ? '<' : '>',
    $notOp = $isMax ? '>' : '<',
    $errorKeyword = undefined;
  if ($isDataExcl) {
    var $schemaValueExcl = it.util.getData($schemaExcl.$data, $dataLvl, it.dataPathArr),
      $exclusive = 'exclusive' + $lvl,
      $exclType = 'exclType' + $lvl,
      $exclIsNumber = 'exclIsNumber' + $lvl,
      $opExpr = 'op' + $lvl,
      $opStr = '\' + ' + $opExpr + ' + \'';
    out += ' var schemaExcl' + ($lvl) + ' = ' + ($schemaValueExcl) + '; ';
    $schemaValueExcl = 'schemaExcl' + $lvl;
    out += ' var ' + ($exclusive) + '; var ' + ($exclType) + ' = typeof ' + ($schemaValueExcl) + '; if (' + ($exclType) + ' != \'boolean\' && ' + ($exclType) + ' != \'undefined\' && ' + ($exclType) + ' != \'number\') { ';
    var $errorKeyword = $exclusiveKeyword;
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || '_exclusiveLimit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'' + ($exclusiveKeyword) + ' should be boolean\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) {
      /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' } else if ( ';
    if ($isData) {
      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
    }
    out += ' ' + ($exclType) + ' == \'number\' ? ( (' + ($exclusive) + ' = ' + ($schemaValue) + ' === undefined || ' + ($schemaValueExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ') ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValueExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) : ( (' + ($exclusive) + ' = ' + ($schemaValueExcl) + ' === true) ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaValue) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { var op' + ($lvl) + ' = ' + ($exclusive) + ' ? \'' + ($op) + '\' : \'' + ($op) + '=\'; ';
    if ($schema === undefined) {
      $errorKeyword = $exclusiveKeyword;
      $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;
      $schemaValue = $schemaValueExcl;
      $isData = $isDataExcl;
    }
  } else {
    var $exclIsNumber = typeof $schemaExcl == 'number',
      $opStr = $op;
    if ($exclIsNumber && $isData) {
      var $opExpr = '\'' + $opStr + '\'';
      out += ' if ( ';
      if ($isData) {
        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
      }
      out += ' ( ' + ($schemaValue) + ' === undefined || ' + ($schemaExcl) + ' ' + ($op) + '= ' + ($schemaValue) + ' ? ' + ($data) + ' ' + ($notOp) + '= ' + ($schemaExcl) + ' : ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' ) || ' + ($data) + ' !== ' + ($data) + ') { ';
    } else {
      if ($exclIsNumber && $schema === undefined) {
        $exclusive = true;
        $errorKeyword = $exclusiveKeyword;
        $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;
        $schemaValue = $schemaExcl;
        $notOp += '=';
      } else {
        if ($exclIsNumber) $schemaValue = Math[$isMax ? 'min' : 'max']($schemaExcl, $schema);
        if ($schemaExcl === ($exclIsNumber ? $schemaValue : true)) {
          $exclusive = true;
          $errorKeyword = $exclusiveKeyword;
          $errSchemaPath = it.errSchemaPath + '/' + $exclusiveKeyword;
          $notOp += '=';
        } else {
          $exclusive = false;
          $opStr += '=';
        }
      }
      var $opExpr = '\'' + $opStr + '\'';
      out += ' if ( ';
      if ($isData) {
        out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
      }
      out += ' ' + ($data) + ' ' + ($notOp) + ' ' + ($schemaValue) + ' || ' + ($data) + ' !== ' + ($data) + ') { ';
    }
  }
  $errorKeyword = $errorKeyword || $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limit') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { comparison: ' + ($opExpr) + ', limit: ' + ($schemaValue) + ', exclusive: ' + ($exclusive) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be ' + ($opStr) + ' ';
      if ($isData) {
        out += '\' + ' + ($schemaValue);
      } else {
        out += '' + ($schemaValue) + '\'';
      }
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' } ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/_limitItems.js":
/*!****************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/_limitItems.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limitItems(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $op = $keyword == 'maxItems' ? '>' : '<';
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
  }
  out += ' ' + ($data) + '.length ' + ($op) + ' ' + ($schemaValue) + ') { ';
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limitItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should NOT have ';
      if ($keyword == 'maxItems') {
        out += 'more';
      } else {
        out += 'fewer';
      }
      out += ' than ';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + ($schema);
      }
      out += ' items\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/_limitLength.js":
/*!*****************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/_limitLength.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limitLength(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $op = $keyword == 'maxLength' ? '>' : '<';
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
  }
  if (it.opts.unicode === false) {
    out += ' ' + ($data) + '.length ';
  } else {
    out += ' ucs2length(' + ($data) + ') ';
  }
  out += ' ' + ($op) + ' ' + ($schemaValue) + ') { ';
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limitLength') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should NOT be ';
      if ($keyword == 'maxLength') {
        out += 'longer';
      } else {
        out += 'shorter';
      }
      out += ' than ';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + ($schema);
      }
      out += ' characters\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/_limitProperties.js":
/*!*********************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/_limitProperties.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate__limitProperties(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $op = $keyword == 'maxProperties' ? '>' : '<';
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'number\') || ';
  }
  out += ' Object.keys(' + ($data) + ').length ' + ($op) + ' ' + ($schemaValue) + ') { ';
  var $errorKeyword = $keyword;
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ($errorKeyword || '_limitProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should NOT have ';
      if ($keyword == 'maxProperties') {
        out += 'more';
      } else {
        out += 'fewer';
      }
      out += ' than ';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + ($schema);
      }
      out += ' properties\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/allOf.js":
/*!**********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/allOf.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_allOf(it, $keyword, $ruleType) {
  var out = ' ';
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $currentBaseId = $it.baseId,
    $allSchemasEmpty = true;
  var arr1 = $schema;
  if (arr1) {
    var $sch, $i = -1,
      l1 = arr1.length - 1;
    while ($i < l1) {
      $sch = arr1[$i += 1];
      if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {
        $allSchemasEmpty = false;
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + '[' + $i + ']';
        $it.errSchemaPath = $errSchemaPath + '/' + $i;
        out += '  ' + (it.validate($it)) + ' ';
        $it.baseId = $currentBaseId;
        if ($breakOnError) {
          out += ' if (' + ($nextValid) + ') { ';
          $closingBraces += '}';
        }
      }
    }
  }
  if ($breakOnError) {
    if ($allSchemasEmpty) {
      out += ' if (true) { ';
    } else {
      out += ' ' + ($closingBraces.slice(0, -1)) + ' ';
    }
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/anyOf.js":
/*!**********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/anyOf.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_anyOf(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $noEmptySchema = $schema.every(function($sch) {
    return (it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all));
  });
  if ($noEmptySchema) {
    var $currentBaseId = $it.baseId;
    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = false;  ';
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    var arr1 = $schema;
    if (arr1) {
      var $sch, $i = -1,
        l1 = arr1.length - 1;
      while ($i < l1) {
        $sch = arr1[$i += 1];
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + '[' + $i + ']';
        $it.errSchemaPath = $errSchemaPath + '/' + $i;
        out += '  ' + (it.validate($it)) + ' ';
        $it.baseId = $currentBaseId;
        out += ' ' + ($valid) + ' = ' + ($valid) + ' || ' + ($nextValid) + '; if (!' + ($valid) + ') { ';
        $closingBraces += '}';
      }
    }
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' ' + ($closingBraces) + ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ('anyOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should match some schema in anyOf\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    if (!it.compositeRule && $breakOnError) {
      /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError(vErrors); ';
      } else {
        out += ' validate.errors = vErrors; return false; ';
      }
    }
    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
    if (it.opts.allErrors) {
      out += ' } ';
    }
    out = it.util.cleanUpCode(out);
  } else {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/comment.js":
/*!************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/comment.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_comment(it, $keyword, $ruleType) {
  var out = ' ';
  var $schema = it.schema[$keyword];
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $comment = it.util.toQuotedString($schema);
  if (it.opts.$comment === true) {
    out += ' console.log(' + ($comment) + ');';
  } else if (typeof it.opts.$comment == 'function') {
    out += ' self._opts.$comment(' + ($comment) + ', ' + (it.util.toQuotedString($errSchemaPath)) + ', validate.root.schema);';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/const.js":
/*!**********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/const.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_const(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  if (!$isData) {
    out += ' var schema' + ($lvl) + ' = validate.schema' + ($schemaPath) + ';';
  }
  out += 'var ' + ($valid) + ' = equal(' + ($data) + ', schema' + ($lvl) + '); if (!' + ($valid) + ') {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ('const') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValue: schema' + ($lvl) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be equal to constant\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' }';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/contains.js":
/*!*************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/contains.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_contains(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $idx = 'i' + $lvl,
    $dataNxt = $it.dataLevel = it.dataLevel + 1,
    $nextData = 'data' + $dataNxt,
    $currentBaseId = it.baseId,
    $nonEmptySchema = (it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all));
  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
  if ($nonEmptySchema) {
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
    out += ' var ' + ($nextValid) + ' = false; for (var ' + ($idx) + ' = 0; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';
    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
    var $passData = $data + '[' + $idx + ']';
    $it.dataPathArr[$dataNxt] = $idx;
    var $code = it.validate($it);
    $it.baseId = $currentBaseId;
    if (it.util.varOccurences($code, $nextData) < 2) {
      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
    } else {
      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
    }
    out += ' if (' + ($nextValid) + ') break; }  ';
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' ' + ($closingBraces) + ' if (!' + ($nextValid) + ') {';
  } else {
    out += ' if (' + ($data) + '.length == 0) {';
  }
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ('contains') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should contain a valid item\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' } else { ';
  if ($nonEmptySchema) {
    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
  }
  if (it.opts.allErrors) {
    out += ' } ';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/custom.js":
/*!***********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/custom.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_custom(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $errorKeyword;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $rule = this,
    $definition = 'definition' + $lvl,
    $rDef = $rule.definition,
    $closingBraces = '';
  var $compile, $inline, $macro, $ruleValidate, $validateCode;
  if ($isData && $rDef.$data) {
    $validateCode = 'keywordValidate' + $lvl;
    var $validateSchema = $rDef.validateSchema;
    out += ' var ' + ($definition) + ' = RULES.custom[\'' + ($keyword) + '\'].definition; var ' + ($validateCode) + ' = ' + ($definition) + '.validate;';
  } else {
    $ruleValidate = it.useCustomRule($rule, $schema, it.schema, it);
    if (!$ruleValidate) return;
    $schemaValue = 'validate.schema' + $schemaPath;
    $validateCode = $ruleValidate.code;
    $compile = $rDef.compile;
    $inline = $rDef.inline;
    $macro = $rDef.macro;
  }
  var $ruleErrs = $validateCode + '.errors',
    $i = 'i' + $lvl,
    $ruleErr = 'ruleErr' + $lvl,
    $asyncKeyword = $rDef.async;
  if ($asyncKeyword && !it.async) throw new Error('async keyword in sync schema');
  if (!($inline || $macro)) {
    out += '' + ($ruleErrs) + ' = null;';
  }
  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
  if ($isData && $rDef.$data) {
    $closingBraces += '}';
    out += ' if (' + ($schemaValue) + ' === undefined) { ' + ($valid) + ' = true; } else { ';
    if ($validateSchema) {
      $closingBraces += '}';
      out += ' ' + ($valid) + ' = ' + ($definition) + '.validateSchema(' + ($schemaValue) + '); if (' + ($valid) + ') { ';
    }
  }
  if ($inline) {
    if ($rDef.statements) {
      out += ' ' + ($ruleValidate.validate) + ' ';
    } else {
      out += ' ' + ($valid) + ' = ' + ($ruleValidate.validate) + '; ';
    }
  } else if ($macro) {
    var $it = it.util.copy(it);
    var $closingBraces = '';
    $it.level++;
    var $nextValid = 'valid' + $it.level;
    $it.schema = $ruleValidate.validate;
    $it.schemaPath = '';
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    var $code = it.validate($it).replace(/validate\.schema/g, $validateCode);
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' ' + ($code);
  } else {
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = '';
    out += '  ' + ($validateCode) + '.call( ';
    if (it.opts.passContext) {
      out += 'this';
    } else {
      out += 'self';
    }
    if ($compile || $rDef.schema === false) {
      out += ' , ' + ($data) + ' ';
    } else {
      out += ' , ' + ($schemaValue) + ' , ' + ($data) + ' , validate.schema' + (it.schemaPath) + ' ';
    }
    out += ' , (dataPath || \'\')';
    if (it.errorPath != '""') {
      out += ' + ' + (it.errorPath);
    }
    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ' , rootData )  ';
    var def_callRuleValidate = out;
    out = $$outStack.pop();
    if ($rDef.errors === false) {
      out += ' ' + ($valid) + ' = ';
      if ($asyncKeyword) {
        out += 'await ';
      }
      out += '' + (def_callRuleValidate) + '; ';
    } else {
      if ($asyncKeyword) {
        $ruleErrs = 'customErrors' + $lvl;
        out += ' var ' + ($ruleErrs) + ' = null; try { ' + ($valid) + ' = await ' + (def_callRuleValidate) + '; } catch (e) { ' + ($valid) + ' = false; if (e instanceof ValidationError) ' + ($ruleErrs) + ' = e.errors; else throw e; } ';
      } else {
        out += ' ' + ($ruleErrs) + ' = null; ' + ($valid) + ' = ' + (def_callRuleValidate) + '; ';
      }
    }
  }
  if ($rDef.modifying) {
    out += ' if (' + ($parentData) + ') ' + ($data) + ' = ' + ($parentData) + '[' + ($parentDataProperty) + '];';
  }
  out += '' + ($closingBraces);
  if ($rDef.valid) {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
  } else {
    out += ' if ( ';
    if ($rDef.valid === undefined) {
      out += ' !';
      if ($macro) {
        out += '' + ($nextValid);
      } else {
        out += '' + ($valid);
      }
    } else {
      out += ' ' + (!$rDef.valid) + ' ';
    }
    out += ') { ';
    $errorKeyword = $rule.keyword;
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = '';
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ($errorKeyword || 'custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \'' + ($rule.keyword) + '\' } ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) {
      /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    var def_customError = out;
    out = $$outStack.pop();
    if ($inline) {
      if ($rDef.errors) {
        if ($rDef.errors != 'full') {
          out += '  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '"; } ';
          if (it.opts.verbose) {
            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
          }
          out += ' } ';
        }
      } else {
        if ($rDef.errors === false) {
          out += ' ' + (def_customError) + ' ';
        } else {
          out += ' if (' + ($errs) + ' == errors) { ' + (def_customError) + ' } else {  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + '; if (' + ($ruleErr) + '.schemaPath === undefined) { ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '"; } ';
          if (it.opts.verbose) {
            out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
          }
          out += ' } } ';
        }
      }
    } else if ($macro) {
      out += '   var err =   '; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ($errorKeyword || 'custom') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { keyword: \'' + ($rule.keyword) + '\' } ';
        if (it.opts.messages !== false) {
          out += ' , message: \'should pass "' + ($rule.keyword) + '" keyword validation\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
      if (!it.compositeRule && $breakOnError) {
        /* istanbul ignore if */
        if (it.async) {
          out += ' throw new ValidationError(vErrors); ';
        } else {
          out += ' validate.errors = vErrors; return false; ';
        }
      }
    } else {
      if ($rDef.errors === false) {
        out += ' ' + (def_customError) + ' ';
      } else {
        out += ' if (Array.isArray(' + ($ruleErrs) + ')) { if (vErrors === null) vErrors = ' + ($ruleErrs) + '; else vErrors = vErrors.concat(' + ($ruleErrs) + '); errors = vErrors.length;  for (var ' + ($i) + '=' + ($errs) + '; ' + ($i) + '<errors; ' + ($i) + '++) { var ' + ($ruleErr) + ' = vErrors[' + ($i) + ']; if (' + ($ruleErr) + '.dataPath === undefined) ' + ($ruleErr) + '.dataPath = (dataPath || \'\') + ' + (it.errorPath) + ';  ' + ($ruleErr) + '.schemaPath = "' + ($errSchemaPath) + '";  ';
        if (it.opts.verbose) {
          out += ' ' + ($ruleErr) + '.schema = ' + ($schemaValue) + '; ' + ($ruleErr) + '.data = ' + ($data) + '; ';
        }
        out += ' } } else { ' + (def_customError) + ' } ';
      }
    }
    out += ' } ';
    if ($breakOnError) {
      out += ' else { ';
    }
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/dependencies.js":
/*!*****************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/dependencies.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_dependencies(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $schemaDeps = {},
    $propertyDeps = {},
    $ownProperties = it.opts.ownProperties;
  for ($property in $schema) {
    var $sch = $schema[$property];
    var $deps = Array.isArray($sch) ? $propertyDeps : $schemaDeps;
    $deps[$property] = $sch;
  }
  out += 'var ' + ($errs) + ' = errors;';
  var $currentErrorPath = it.errorPath;
  out += 'var missing' + ($lvl) + ';';
  for (var $property in $propertyDeps) {
    $deps = $propertyDeps[$property];
    if ($deps.length) {
      out += ' if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';
      if ($ownProperties) {
        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($property)) + '\') ';
      }
      if ($breakOnError) {
        out += ' && ( ';
        var arr1 = $deps;
        if (arr1) {
          var $propertyKey, $i = -1,
            l1 = arr1.length - 1;
          while ($i < l1) {
            $propertyKey = arr1[$i += 1];
            if ($i) {
              out += ' || ';
            }
            var $prop = it.util.getProperty($propertyKey),
              $useData = $data + $prop;
            out += ' ( ( ' + ($useData) + ' === undefined ';
            if ($ownProperties) {
              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($propertyKey)) + '\') ';
            }
            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';
          }
        }
        out += ')) {  ';
        var $propertyPath = 'missing' + $lvl,
          $missingProperty = '\' + ' + $propertyPath + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
        }
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ('dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(", "))) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'should have ';
            if ($deps.length == 1) {
              out += 'property ' + (it.util.escapeQuotes($deps[0]));
            } else {
              out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
            }
            out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) {
          /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
      } else {
        out += ' ) { ';
        var arr2 = $deps;
        if (arr2) {
          var $propertyKey, i2 = -1,
            l2 = arr2.length - 1;
          while (i2 < l2) {
            $propertyKey = arr2[i2 += 1];
            var $prop = it.util.getProperty($propertyKey),
              $missingProperty = it.util.escapeQuotes($propertyKey),
              $useData = $data + $prop;
            if (it.opts._errorDataPathProperty) {
              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
            }
            out += ' if ( ' + ($useData) + ' === undefined ';
            if ($ownProperties) {
              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($propertyKey)) + '\') ';
            }
            out += ') {  var err =   '; /* istanbul ignore else */
            if (it.createErrors !== false) {
              out += ' { keyword: \'' + ('dependencies') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { property: \'' + (it.util.escapeQuotes($property)) + '\', missingProperty: \'' + ($missingProperty) + '\', depsCount: ' + ($deps.length) + ', deps: \'' + (it.util.escapeQuotes($deps.length == 1 ? $deps[0] : $deps.join(", "))) + '\' } ';
              if (it.opts.messages !== false) {
                out += ' , message: \'should have ';
                if ($deps.length == 1) {
                  out += 'property ' + (it.util.escapeQuotes($deps[0]));
                } else {
                  out += 'properties ' + (it.util.escapeQuotes($deps.join(", ")));
                }
                out += ' when property ' + (it.util.escapeQuotes($property)) + ' is present\' ';
              }
              if (it.opts.verbose) {
                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
              }
              out += ' } ';
            } else {
              out += ' {} ';
            }
            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';
          }
        }
      }
      out += ' }   ';
      if ($breakOnError) {
        $closingBraces += '}';
        out += ' else { ';
      }
    }
  }
  it.errorPath = $currentErrorPath;
  var $currentBaseId = $it.baseId;
  for (var $property in $schemaDeps) {
    var $sch = $schemaDeps[$property];
    if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {
      out += ' ' + ($nextValid) + ' = true; if ( ' + ($data) + (it.util.getProperty($property)) + ' !== undefined ';
      if ($ownProperties) {
        out += ' && Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($property)) + '\') ';
      }
      out += ') { ';
      $it.schema = $sch;
      $it.schemaPath = $schemaPath + it.util.getProperty($property);
      $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($property);
      out += '  ' + (it.validate($it)) + ' ';
      $it.baseId = $currentBaseId;
      out += ' }  ';
      if ($breakOnError) {
        out += ' if (' + ($nextValid) + ') { ';
        $closingBraces += '}';
      }
    }
  }
  if ($breakOnError) {
    out += '   ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/enum.js":
/*!*********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/enum.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_enum(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $i = 'i' + $lvl,
    $vSchema = 'schema' + $lvl;
  if (!$isData) {
    out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + ';';
  }
  out += 'var ' + ($valid) + ';';
  if ($isData) {
    out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';
  }
  out += '' + ($valid) + ' = false;for (var ' + ($i) + '=0; ' + ($i) + '<' + ($vSchema) + '.length; ' + ($i) + '++) if (equal(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + '])) { ' + ($valid) + ' = true; break; }';
  if ($isData) {
    out += '  }  ';
  }
  out += ' if (!' + ($valid) + ') {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ('enum') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { allowedValues: schema' + ($lvl) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be equal to one of the allowed values\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' }';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/format.js":
/*!***********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/format.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_format(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  if (it.opts.format === false) {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
    return out;
  }
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $unknownFormats = it.opts.unknownFormats,
    $allowUnknown = Array.isArray($unknownFormats);
  if ($isData) {
    var $format = 'format' + $lvl,
      $isObject = 'isObject' + $lvl,
      $formatType = 'formatType' + $lvl;
    out += ' var ' + ($format) + ' = formats[' + ($schemaValue) + ']; var ' + ($isObject) + ' = typeof ' + ($format) + ' == \'object\' && !(' + ($format) + ' instanceof RegExp) && ' + ($format) + '.validate; var ' + ($formatType) + ' = ' + ($isObject) + ' && ' + ($format) + '.type || \'string\'; if (' + ($isObject) + ') { ';
    if (it.async) {
      out += ' var async' + ($lvl) + ' = ' + ($format) + '.async; ';
    }
    out += ' ' + ($format) + ' = ' + ($format) + '.validate; } if (  ';
    if ($isData) {
      out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'string\') || ';
    }
    out += ' (';
    if ($unknownFormats != 'ignore') {
      out += ' (' + ($schemaValue) + ' && !' + ($format) + ' ';
      if ($allowUnknown) {
        out += ' && self._opts.unknownFormats.indexOf(' + ($schemaValue) + ') == -1 ';
      }
      out += ') || ';
    }
    out += ' (' + ($format) + ' && ' + ($formatType) + ' == \'' + ($ruleType) + '\' && !(typeof ' + ($format) + ' == \'function\' ? ';
    if (it.async) {
      out += ' (async' + ($lvl) + ' ? await ' + ($format) + '(' + ($data) + ') : ' + ($format) + '(' + ($data) + ')) ';
    } else {
      out += ' ' + ($format) + '(' + ($data) + ') ';
    }
    out += ' : ' + ($format) + '.test(' + ($data) + '))))) {';
  } else {
    var $format = it.formats[$schema];
    if (!$format) {
      if ($unknownFormats == 'ignore') {
        it.logger.warn('unknown format "' + $schema + '" ignored in schema at path "' + it.errSchemaPath + '"');
        if ($breakOnError) {
          out += ' if (true) { ';
        }
        return out;
      } else if ($allowUnknown && $unknownFormats.indexOf($schema) >= 0) {
        if ($breakOnError) {
          out += ' if (true) { ';
        }
        return out;
      } else {
        throw new Error('unknown format "' + $schema + '" is used in schema at path "' + it.errSchemaPath + '"');
      }
    }
    var $isObject = typeof $format == 'object' && !($format instanceof RegExp) && $format.validate;
    var $formatType = $isObject && $format.type || 'string';
    if ($isObject) {
      var $async = $format.async === true;
      $format = $format.validate;
    }
    if ($formatType != $ruleType) {
      if ($breakOnError) {
        out += ' if (true) { ';
      }
      return out;
    }
    if ($async) {
      if (!it.async) throw new Error('async format in sync schema');
      var $formatRef = 'formats' + it.util.getProperty($schema) + '.validate';
      out += ' if (!(await ' + ($formatRef) + '(' + ($data) + '))) { ';
    } else {
      out += ' if (! ';
      var $formatRef = 'formats' + it.util.getProperty($schema);
      if ($isObject) $formatRef += '.validate';
      if (typeof $format == 'function') {
        out += ' ' + ($formatRef) + '(' + ($data) + ') ';
      } else {
        out += ' ' + ($formatRef) + '.test(' + ($data) + ') ';
      }
      out += ') { ';
    }
  }
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ('format') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { format:  ';
    if ($isData) {
      out += '' + ($schemaValue);
    } else {
      out += '' + (it.util.toQuotedString($schema));
    }
    out += '  } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should match format "';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + (it.util.escapeQuotes($schema));
      }
      out += '"\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + (it.util.toQuotedString($schema));
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += ' } ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/if.js":
/*!*******************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/if.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_if(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $thenSch = it.schema['then'],
    $elseSch = it.schema['else'],
    $thenPresent = $thenSch !== undefined && (it.opts.strictKeywords ? typeof $thenSch == 'object' && Object.keys($thenSch).length > 0 : it.util.schemaHasRules($thenSch, it.RULES.all)),
    $elsePresent = $elseSch !== undefined && (it.opts.strictKeywords ? typeof $elseSch == 'object' && Object.keys($elseSch).length > 0 : it.util.schemaHasRules($elseSch, it.RULES.all)),
    $currentBaseId = $it.baseId;
  if ($thenPresent || $elsePresent) {
    var $ifClause;
    $it.createErrors = false;
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
    out += ' var ' + ($errs) + ' = errors; var ' + ($valid) + ' = true;  ';
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    out += '  ' + (it.validate($it)) + ' ';
    $it.baseId = $currentBaseId;
    $it.createErrors = true;
    out += '  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }  ';
    it.compositeRule = $it.compositeRule = $wasComposite;
    if ($thenPresent) {
      out += ' if (' + ($nextValid) + ') {  ';
      $it.schema = it.schema['then'];
      $it.schemaPath = it.schemaPath + '.then';
      $it.errSchemaPath = it.errSchemaPath + '/then';
      out += '  ' + (it.validate($it)) + ' ';
      $it.baseId = $currentBaseId;
      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';
      if ($thenPresent && $elsePresent) {
        $ifClause = 'ifClause' + $lvl;
        out += ' var ' + ($ifClause) + ' = \'then\'; ';
      } else {
        $ifClause = '\'then\'';
      }
      out += ' } ';
      if ($elsePresent) {
        out += ' else { ';
      }
    } else {
      out += ' if (!' + ($nextValid) + ') { ';
    }
    if ($elsePresent) {
      $it.schema = it.schema['else'];
      $it.schemaPath = it.schemaPath + '.else';
      $it.errSchemaPath = it.errSchemaPath + '/else';
      out += '  ' + (it.validate($it)) + ' ';
      $it.baseId = $currentBaseId;
      out += ' ' + ($valid) + ' = ' + ($nextValid) + '; ';
      if ($thenPresent && $elsePresent) {
        $ifClause = 'ifClause' + $lvl;
        out += ' var ' + ($ifClause) + ' = \'else\'; ';
      } else {
        $ifClause = '\'else\'';
      }
      out += ' } ';
    }
    out += ' if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ('if') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { failingKeyword: ' + ($ifClause) + ' } ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should match "\' + ' + ($ifClause) + ' + \'" schema\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    if (!it.compositeRule && $breakOnError) {
      /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError(vErrors); ';
      } else {
        out += ' validate.errors = vErrors; return false; ';
      }
    }
    out += ' }   ';
    if ($breakOnError) {
      out += ' else { ';
    }
    out = it.util.cleanUpCode(out);
  } else {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/index.js":
/*!**********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


//all requires must be explicit because browserify won't work with dynamic requires
module.exports = {
  '$ref': __webpack_require__(/*! ./ref */ "../node_modules/ajv/lib/dotjs/ref.js"),
  allOf: __webpack_require__(/*! ./allOf */ "../node_modules/ajv/lib/dotjs/allOf.js"),
  anyOf: __webpack_require__(/*! ./anyOf */ "../node_modules/ajv/lib/dotjs/anyOf.js"),
  '$comment': __webpack_require__(/*! ./comment */ "../node_modules/ajv/lib/dotjs/comment.js"),
  const: __webpack_require__(/*! ./const */ "../node_modules/ajv/lib/dotjs/const.js"),
  contains: __webpack_require__(/*! ./contains */ "../node_modules/ajv/lib/dotjs/contains.js"),
  dependencies: __webpack_require__(/*! ./dependencies */ "../node_modules/ajv/lib/dotjs/dependencies.js"),
  'enum': __webpack_require__(/*! ./enum */ "../node_modules/ajv/lib/dotjs/enum.js"),
  format: __webpack_require__(/*! ./format */ "../node_modules/ajv/lib/dotjs/format.js"),
  'if': __webpack_require__(/*! ./if */ "../node_modules/ajv/lib/dotjs/if.js"),
  items: __webpack_require__(/*! ./items */ "../node_modules/ajv/lib/dotjs/items.js"),
  maximum: __webpack_require__(/*! ./_limit */ "../node_modules/ajv/lib/dotjs/_limit.js"),
  minimum: __webpack_require__(/*! ./_limit */ "../node_modules/ajv/lib/dotjs/_limit.js"),
  maxItems: __webpack_require__(/*! ./_limitItems */ "../node_modules/ajv/lib/dotjs/_limitItems.js"),
  minItems: __webpack_require__(/*! ./_limitItems */ "../node_modules/ajv/lib/dotjs/_limitItems.js"),
  maxLength: __webpack_require__(/*! ./_limitLength */ "../node_modules/ajv/lib/dotjs/_limitLength.js"),
  minLength: __webpack_require__(/*! ./_limitLength */ "../node_modules/ajv/lib/dotjs/_limitLength.js"),
  maxProperties: __webpack_require__(/*! ./_limitProperties */ "../node_modules/ajv/lib/dotjs/_limitProperties.js"),
  minProperties: __webpack_require__(/*! ./_limitProperties */ "../node_modules/ajv/lib/dotjs/_limitProperties.js"),
  multipleOf: __webpack_require__(/*! ./multipleOf */ "../node_modules/ajv/lib/dotjs/multipleOf.js"),
  not: __webpack_require__(/*! ./not */ "../node_modules/ajv/lib/dotjs/not.js"),
  oneOf: __webpack_require__(/*! ./oneOf */ "../node_modules/ajv/lib/dotjs/oneOf.js"),
  pattern: __webpack_require__(/*! ./pattern */ "../node_modules/ajv/lib/dotjs/pattern.js"),
  properties: __webpack_require__(/*! ./properties */ "../node_modules/ajv/lib/dotjs/properties.js"),
  propertyNames: __webpack_require__(/*! ./propertyNames */ "../node_modules/ajv/lib/dotjs/propertyNames.js"),
  required: __webpack_require__(/*! ./required */ "../node_modules/ajv/lib/dotjs/required.js"),
  uniqueItems: __webpack_require__(/*! ./uniqueItems */ "../node_modules/ajv/lib/dotjs/uniqueItems.js"),
  validate: __webpack_require__(/*! ./validate */ "../node_modules/ajv/lib/dotjs/validate.js")
};


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/items.js":
/*!**********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/items.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_items(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $idx = 'i' + $lvl,
    $dataNxt = $it.dataLevel = it.dataLevel + 1,
    $nextData = 'data' + $dataNxt,
    $currentBaseId = it.baseId;
  out += 'var ' + ($errs) + ' = errors;var ' + ($valid) + ';';
  if (Array.isArray($schema)) {
    var $additionalItems = it.schema.additionalItems;
    if ($additionalItems === false) {
      out += ' ' + ($valid) + ' = ' + ($data) + '.length <= ' + ($schema.length) + '; ';
      var $currErrSchemaPath = $errSchemaPath;
      $errSchemaPath = it.errSchemaPath + '/additionalItems';
      out += '  if (!' + ($valid) + ') {   ';
      var $$outStack = $$outStack || [];
      $$outStack.push(out);
      out = ''; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ('additionalItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { limit: ' + ($schema.length) + ' } ';
        if (it.opts.messages !== false) {
          out += ' , message: \'should NOT have more than ' + ($schema.length) + ' items\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      var __err = out;
      out = $$outStack.pop();
      if (!it.compositeRule && $breakOnError) {
        /* istanbul ignore if */
        if (it.async) {
          out += ' throw new ValidationError([' + (__err) + ']); ';
        } else {
          out += ' validate.errors = [' + (__err) + ']; return false; ';
        }
      } else {
        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
      }
      out += ' } ';
      $errSchemaPath = $currErrSchemaPath;
      if ($breakOnError) {
        $closingBraces += '}';
        out += ' else { ';
      }
    }
    var arr1 = $schema;
    if (arr1) {
      var $sch, $i = -1,
        l1 = arr1.length - 1;
      while ($i < l1) {
        $sch = arr1[$i += 1];
        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {
          out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($i) + ') { ';
          var $passData = $data + '[' + $i + ']';
          $it.schema = $sch;
          $it.schemaPath = $schemaPath + '[' + $i + ']';
          $it.errSchemaPath = $errSchemaPath + '/' + $i;
          $it.errorPath = it.util.getPathExpr(it.errorPath, $i, it.opts.jsonPointers, true);
          $it.dataPathArr[$dataNxt] = $i;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          out += ' }  ';
          if ($breakOnError) {
            out += ' if (' + ($nextValid) + ') { ';
            $closingBraces += '}';
          }
        }
      }
    }
    if (typeof $additionalItems == 'object' && (it.opts.strictKeywords ? typeof $additionalItems == 'object' && Object.keys($additionalItems).length > 0 : it.util.schemaHasRules($additionalItems, it.RULES.all))) {
      $it.schema = $additionalItems;
      $it.schemaPath = it.schemaPath + '.additionalItems';
      $it.errSchemaPath = it.errSchemaPath + '/additionalItems';
      out += ' ' + ($nextValid) + ' = true; if (' + ($data) + '.length > ' + ($schema.length) + ') {  for (var ' + ($idx) + ' = ' + ($schema.length) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';
      $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
      var $passData = $data + '[' + $idx + ']';
      $it.dataPathArr[$dataNxt] = $idx;
      var $code = it.validate($it);
      $it.baseId = $currentBaseId;
      if (it.util.varOccurences($code, $nextData) < 2) {
        out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
      } else {
        out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
      }
      if ($breakOnError) {
        out += ' if (!' + ($nextValid) + ') break; ';
      }
      out += ' } }  ';
      if ($breakOnError) {
        out += ' if (' + ($nextValid) + ') { ';
        $closingBraces += '}';
      }
    }
  } else if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
    out += '  for (var ' + ($idx) + ' = ' + (0) + '; ' + ($idx) + ' < ' + ($data) + '.length; ' + ($idx) + '++) { ';
    $it.errorPath = it.util.getPathExpr(it.errorPath, $idx, it.opts.jsonPointers, true);
    var $passData = $data + '[' + $idx + ']';
    $it.dataPathArr[$dataNxt] = $idx;
    var $code = it.validate($it);
    $it.baseId = $currentBaseId;
    if (it.util.varOccurences($code, $nextData) < 2) {
      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
    } else {
      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
    }
    if ($breakOnError) {
      out += ' if (!' + ($nextValid) + ') break; ';
    }
    out += ' }';
  }
  if ($breakOnError) {
    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/multipleOf.js":
/*!***************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/multipleOf.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_multipleOf(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  out += 'var division' + ($lvl) + ';if (';
  if ($isData) {
    out += ' ' + ($schemaValue) + ' !== undefined && ( typeof ' + ($schemaValue) + ' != \'number\' || ';
  }
  out += ' (division' + ($lvl) + ' = ' + ($data) + ' / ' + ($schemaValue) + ', ';
  if (it.opts.multipleOfPrecision) {
    out += ' Math.abs(Math.round(division' + ($lvl) + ') - division' + ($lvl) + ') > 1e-' + (it.opts.multipleOfPrecision) + ' ';
  } else {
    out += ' division' + ($lvl) + ' !== parseInt(division' + ($lvl) + ') ';
  }
  out += ' ) ';
  if ($isData) {
    out += '  )  ';
  }
  out += ' ) {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ('multipleOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { multipleOf: ' + ($schemaValue) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should be multiple of ';
      if ($isData) {
        out += '\' + ' + ($schemaValue);
      } else {
        out += '' + ($schemaValue) + '\'';
      }
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + ($schema);
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/not.js":
/*!********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/not.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_not(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
    out += ' var ' + ($errs) + ' = errors;  ';
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    $it.createErrors = false;
    var $allErrorsOption;
    if ($it.opts.allErrors) {
      $allErrorsOption = $it.opts.allErrors;
      $it.opts.allErrors = false;
    }
    out += ' ' + (it.validate($it)) + ' ';
    $it.createErrors = true;
    if ($allErrorsOption) $it.opts.allErrors = $allErrorsOption;
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' if (' + ($nextValid) + ') {   ';
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ('not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should NOT be valid\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) {
      /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } ';
    if (it.opts.allErrors) {
      out += ' } ';
    }
  } else {
    out += '  var err =   '; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ('not') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should NOT be valid\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    if ($breakOnError) {
      out += ' if (false) { ';
    }
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/oneOf.js":
/*!**********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/oneOf.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_oneOf(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $currentBaseId = $it.baseId,
    $prevValid = 'prevValid' + $lvl,
    $passingSchemas = 'passingSchemas' + $lvl;
  out += 'var ' + ($errs) + ' = errors , ' + ($prevValid) + ' = false , ' + ($valid) + ' = false , ' + ($passingSchemas) + ' = null; ';
  var $wasComposite = it.compositeRule;
  it.compositeRule = $it.compositeRule = true;
  var arr1 = $schema;
  if (arr1) {
    var $sch, $i = -1,
      l1 = arr1.length - 1;
    while ($i < l1) {
      $sch = arr1[$i += 1];
      if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {
        $it.schema = $sch;
        $it.schemaPath = $schemaPath + '[' + $i + ']';
        $it.errSchemaPath = $errSchemaPath + '/' + $i;
        out += '  ' + (it.validate($it)) + ' ';
        $it.baseId = $currentBaseId;
      } else {
        out += ' var ' + ($nextValid) + ' = true; ';
      }
      if ($i) {
        out += ' if (' + ($nextValid) + ' && ' + ($prevValid) + ') { ' + ($valid) + ' = false; ' + ($passingSchemas) + ' = [' + ($passingSchemas) + ', ' + ($i) + ']; } else { ';
        $closingBraces += '}';
      }
      out += ' if (' + ($nextValid) + ') { ' + ($valid) + ' = ' + ($prevValid) + ' = true; ' + ($passingSchemas) + ' = ' + ($i) + '; }';
    }
  }
  it.compositeRule = $it.compositeRule = $wasComposite;
  out += '' + ($closingBraces) + 'if (!' + ($valid) + ') {   var err =   '; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ('oneOf') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { passingSchemas: ' + ($passingSchemas) + ' } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should match exactly one schema in oneOf\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError(vErrors); ';
    } else {
      out += ' validate.errors = vErrors; return false; ';
    }
  }
  out += '} else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; }';
  if (it.opts.allErrors) {
    out += ' } ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/pattern.js":
/*!************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/pattern.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_pattern(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $regexp = $isData ? '(new RegExp(' + $schemaValue + '))' : it.usePattern($schema);
  out += 'if ( ';
  if ($isData) {
    out += ' (' + ($schemaValue) + ' !== undefined && typeof ' + ($schemaValue) + ' != \'string\') || ';
  }
  out += ' !' + ($regexp) + '.test(' + ($data) + ') ) {   ';
  var $$outStack = $$outStack || [];
  $$outStack.push(out);
  out = ''; /* istanbul ignore else */
  if (it.createErrors !== false) {
    out += ' { keyword: \'' + ('pattern') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { pattern:  ';
    if ($isData) {
      out += '' + ($schemaValue);
    } else {
      out += '' + (it.util.toQuotedString($schema));
    }
    out += '  } ';
    if (it.opts.messages !== false) {
      out += ' , message: \'should match pattern "';
      if ($isData) {
        out += '\' + ' + ($schemaValue) + ' + \'';
      } else {
        out += '' + (it.util.escapeQuotes($schema));
      }
      out += '"\' ';
    }
    if (it.opts.verbose) {
      out += ' , schema:  ';
      if ($isData) {
        out += 'validate.schema' + ($schemaPath);
      } else {
        out += '' + (it.util.toQuotedString($schema));
      }
      out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
    }
    out += ' } ';
  } else {
    out += ' {} ';
  }
  var __err = out;
  out = $$outStack.pop();
  if (!it.compositeRule && $breakOnError) {
    /* istanbul ignore if */
    if (it.async) {
      out += ' throw new ValidationError([' + (__err) + ']); ';
    } else {
      out += ' validate.errors = [' + (__err) + ']; return false; ';
    }
  } else {
    out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
  }
  out += '} ';
  if ($breakOnError) {
    out += ' else { ';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/properties.js":
/*!***************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/properties.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_properties(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  var $key = 'key' + $lvl,
    $idx = 'idx' + $lvl,
    $dataNxt = $it.dataLevel = it.dataLevel + 1,
    $nextData = 'data' + $dataNxt,
    $dataProperties = 'dataProperties' + $lvl;
  var $schemaKeys = Object.keys($schema || {}),
    $pProperties = it.schema.patternProperties || {},
    $pPropertyKeys = Object.keys($pProperties),
    $aProperties = it.schema.additionalProperties,
    $someProperties = $schemaKeys.length || $pPropertyKeys.length,
    $noAdditional = $aProperties === false,
    $additionalIsSchema = typeof $aProperties == 'object' && Object.keys($aProperties).length,
    $removeAdditional = it.opts.removeAdditional,
    $checkAdditional = $noAdditional || $additionalIsSchema || $removeAdditional,
    $ownProperties = it.opts.ownProperties,
    $currentBaseId = it.baseId;
  var $required = it.schema.required;
  if ($required && !(it.opts.$data && $required.$data) && $required.length < it.opts.loopRequired) var $requiredHash = it.util.toHash($required);
  out += 'var ' + ($errs) + ' = errors;var ' + ($nextValid) + ' = true;';
  if ($ownProperties) {
    out += ' var ' + ($dataProperties) + ' = undefined;';
  }
  if ($checkAdditional) {
    if ($ownProperties) {
      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';
    } else {
      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';
    }
    if ($someProperties) {
      out += ' var isAdditional' + ($lvl) + ' = !(false ';
      if ($schemaKeys.length) {
        if ($schemaKeys.length > 8) {
          out += ' || validate.schema' + ($schemaPath) + '.hasOwnProperty(' + ($key) + ') ';
        } else {
          var arr1 = $schemaKeys;
          if (arr1) {
            var $propertyKey, i1 = -1,
              l1 = arr1.length - 1;
            while (i1 < l1) {
              $propertyKey = arr1[i1 += 1];
              out += ' || ' + ($key) + ' == ' + (it.util.toQuotedString($propertyKey)) + ' ';
            }
          }
        }
      }
      if ($pPropertyKeys.length) {
        var arr2 = $pPropertyKeys;
        if (arr2) {
          var $pProperty, $i = -1,
            l2 = arr2.length - 1;
          while ($i < l2) {
            $pProperty = arr2[$i += 1];
            out += ' || ' + (it.usePattern($pProperty)) + '.test(' + ($key) + ') ';
          }
        }
      }
      out += ' ); if (isAdditional' + ($lvl) + ') { ';
    }
    if ($removeAdditional == 'all') {
      out += ' delete ' + ($data) + '[' + ($key) + ']; ';
    } else {
      var $currentErrorPath = it.errorPath;
      var $additionalProperty = '\' + ' + $key + ' + \'';
      if (it.opts._errorDataPathProperty) {
        it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
      }
      if ($noAdditional) {
        if ($removeAdditional) {
          out += ' delete ' + ($data) + '[' + ($key) + ']; ';
        } else {
          out += ' ' + ($nextValid) + ' = false; ';
          var $currErrSchemaPath = $errSchemaPath;
          $errSchemaPath = it.errSchemaPath + '/additionalProperties';
          var $$outStack = $$outStack || [];
          $$outStack.push(out);
          out = ''; /* istanbul ignore else */
          if (it.createErrors !== false) {
            out += ' { keyword: \'' + ('additionalProperties') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { additionalProperty: \'' + ($additionalProperty) + '\' } ';
            if (it.opts.messages !== false) {
              out += ' , message: \'';
              if (it.opts._errorDataPathProperty) {
                out += 'is an invalid additional property';
              } else {
                out += 'should NOT have additional properties';
              }
              out += '\' ';
            }
            if (it.opts.verbose) {
              out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
            }
            out += ' } ';
          } else {
            out += ' {} ';
          }
          var __err = out;
          out = $$outStack.pop();
          if (!it.compositeRule && $breakOnError) {
            /* istanbul ignore if */
            if (it.async) {
              out += ' throw new ValidationError([' + (__err) + ']); ';
            } else {
              out += ' validate.errors = [' + (__err) + ']; return false; ';
            }
          } else {
            out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
          }
          $errSchemaPath = $currErrSchemaPath;
          if ($breakOnError) {
            out += ' break; ';
          }
        }
      } else if ($additionalIsSchema) {
        if ($removeAdditional == 'failing') {
          out += ' var ' + ($errs) + ' = errors;  ';
          var $wasComposite = it.compositeRule;
          it.compositeRule = $it.compositeRule = true;
          $it.schema = $aProperties;
          $it.schemaPath = it.schemaPath + '.additionalProperties';
          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
          var $passData = $data + '[' + $key + ']';
          $it.dataPathArr[$dataNxt] = $key;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          out += ' if (!' + ($nextValid) + ') { errors = ' + ($errs) + '; if (validate.errors !== null) { if (errors) validate.errors.length = errors; else validate.errors = null; } delete ' + ($data) + '[' + ($key) + ']; }  ';
          it.compositeRule = $it.compositeRule = $wasComposite;
        } else {
          $it.schema = $aProperties;
          $it.schemaPath = it.schemaPath + '.additionalProperties';
          $it.errSchemaPath = it.errSchemaPath + '/additionalProperties';
          $it.errorPath = it.opts._errorDataPathProperty ? it.errorPath : it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
          var $passData = $data + '[' + $key + ']';
          $it.dataPathArr[$dataNxt] = $key;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          if ($breakOnError) {
            out += ' if (!' + ($nextValid) + ') break; ';
          }
        }
      }
      it.errorPath = $currentErrorPath;
    }
    if ($someProperties) {
      out += ' } ';
    }
    out += ' }  ';
    if ($breakOnError) {
      out += ' if (' + ($nextValid) + ') { ';
      $closingBraces += '}';
    }
  }
  var $useDefaults = it.opts.useDefaults && !it.compositeRule;
  if ($schemaKeys.length) {
    var arr3 = $schemaKeys;
    if (arr3) {
      var $propertyKey, i3 = -1,
        l3 = arr3.length - 1;
      while (i3 < l3) {
        $propertyKey = arr3[i3 += 1];
        var $sch = $schema[$propertyKey];
        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {
          var $prop = it.util.getProperty($propertyKey),
            $passData = $data + $prop,
            $hasDefault = $useDefaults && $sch.default !== undefined;
          $it.schema = $sch;
          $it.schemaPath = $schemaPath + $prop;
          $it.errSchemaPath = $errSchemaPath + '/' + it.util.escapeFragment($propertyKey);
          $it.errorPath = it.util.getPath(it.errorPath, $propertyKey, it.opts.jsonPointers);
          $it.dataPathArr[$dataNxt] = it.util.toQuotedString($propertyKey);
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            $code = it.util.varReplace($code, $nextData, $passData);
            var $useData = $passData;
          } else {
            var $useData = $nextData;
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ';
          }
          if ($hasDefault) {
            out += ' ' + ($code) + ' ';
          } else {
            if ($requiredHash && $requiredHash[$propertyKey]) {
              out += ' if ( ' + ($useData) + ' === undefined ';
              if ($ownProperties) {
                out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($propertyKey)) + '\') ';
              }
              out += ') { ' + ($nextValid) + ' = false; ';
              var $currentErrorPath = it.errorPath,
                $currErrSchemaPath = $errSchemaPath,
                $missingProperty = it.util.escapeQuotes($propertyKey);
              if (it.opts._errorDataPathProperty) {
                it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
              }
              $errSchemaPath = it.errSchemaPath + '/required';
              var $$outStack = $$outStack || [];
              $$outStack.push(out);
              out = ''; /* istanbul ignore else */
              if (it.createErrors !== false) {
                out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
                if (it.opts.messages !== false) {
                  out += ' , message: \'';
                  if (it.opts._errorDataPathProperty) {
                    out += 'is a required property';
                  } else {
                    out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
                  }
                  out += '\' ';
                }
                if (it.opts.verbose) {
                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
                }
                out += ' } ';
              } else {
                out += ' {} ';
              }
              var __err = out;
              out = $$outStack.pop();
              if (!it.compositeRule && $breakOnError) {
                /* istanbul ignore if */
                if (it.async) {
                  out += ' throw new ValidationError([' + (__err) + ']); ';
                } else {
                  out += ' validate.errors = [' + (__err) + ']; return false; ';
                }
              } else {
                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
              }
              $errSchemaPath = $currErrSchemaPath;
              it.errorPath = $currentErrorPath;
              out += ' } else { ';
            } else {
              if ($breakOnError) {
                out += ' if ( ' + ($useData) + ' === undefined ';
                if ($ownProperties) {
                  out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($propertyKey)) + '\') ';
                }
                out += ') { ' + ($nextValid) + ' = true; } else { ';
              } else {
                out += ' if (' + ($useData) + ' !== undefined ';
                if ($ownProperties) {
                  out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($propertyKey)) + '\') ';
                }
                out += ' ) { ';
              }
            }
            out += ' ' + ($code) + ' } ';
          }
        }
        if ($breakOnError) {
          out += ' if (' + ($nextValid) + ') { ';
          $closingBraces += '}';
        }
      }
    }
  }
  if ($pPropertyKeys.length) {
    var arr4 = $pPropertyKeys;
    if (arr4) {
      var $pProperty, i4 = -1,
        l4 = arr4.length - 1;
      while (i4 < l4) {
        $pProperty = arr4[i4 += 1];
        var $sch = $pProperties[$pProperty];
        if ((it.opts.strictKeywords ? typeof $sch == 'object' && Object.keys($sch).length > 0 : it.util.schemaHasRules($sch, it.RULES.all))) {
          $it.schema = $sch;
          $it.schemaPath = it.schemaPath + '.patternProperties' + it.util.getProperty($pProperty);
          $it.errSchemaPath = it.errSchemaPath + '/patternProperties/' + it.util.escapeFragment($pProperty);
          if ($ownProperties) {
            out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';
          } else {
            out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';
          }
          out += ' if (' + (it.usePattern($pProperty)) + '.test(' + ($key) + ')) { ';
          $it.errorPath = it.util.getPathExpr(it.errorPath, $key, it.opts.jsonPointers);
          var $passData = $data + '[' + $key + ']';
          $it.dataPathArr[$dataNxt] = $key;
          var $code = it.validate($it);
          $it.baseId = $currentBaseId;
          if (it.util.varOccurences($code, $nextData) < 2) {
            out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
          } else {
            out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
          }
          if ($breakOnError) {
            out += ' if (!' + ($nextValid) + ') break; ';
          }
          out += ' } ';
          if ($breakOnError) {
            out += ' else ' + ($nextValid) + ' = true; ';
          }
          out += ' }  ';
          if ($breakOnError) {
            out += ' if (' + ($nextValid) + ') { ';
            $closingBraces += '}';
          }
        }
      }
    }
  }
  if ($breakOnError) {
    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/propertyNames.js":
/*!******************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/propertyNames.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_propertyNames(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $errs = 'errs__' + $lvl;
  var $it = it.util.copy(it);
  var $closingBraces = '';
  $it.level++;
  var $nextValid = 'valid' + $it.level;
  out += 'var ' + ($errs) + ' = errors;';
  if ((it.opts.strictKeywords ? typeof $schema == 'object' && Object.keys($schema).length > 0 : it.util.schemaHasRules($schema, it.RULES.all))) {
    $it.schema = $schema;
    $it.schemaPath = $schemaPath;
    $it.errSchemaPath = $errSchemaPath;
    var $key = 'key' + $lvl,
      $idx = 'idx' + $lvl,
      $i = 'i' + $lvl,
      $invalidName = '\' + ' + $key + ' + \'',
      $dataNxt = $it.dataLevel = it.dataLevel + 1,
      $nextData = 'data' + $dataNxt,
      $dataProperties = 'dataProperties' + $lvl,
      $ownProperties = it.opts.ownProperties,
      $currentBaseId = it.baseId;
    if ($ownProperties) {
      out += ' var ' + ($dataProperties) + ' = undefined; ';
    }
    if ($ownProperties) {
      out += ' ' + ($dataProperties) + ' = ' + ($dataProperties) + ' || Object.keys(' + ($data) + '); for (var ' + ($idx) + '=0; ' + ($idx) + '<' + ($dataProperties) + '.length; ' + ($idx) + '++) { var ' + ($key) + ' = ' + ($dataProperties) + '[' + ($idx) + ']; ';
    } else {
      out += ' for (var ' + ($key) + ' in ' + ($data) + ') { ';
    }
    out += ' var startErrs' + ($lvl) + ' = errors; ';
    var $passData = $key;
    var $wasComposite = it.compositeRule;
    it.compositeRule = $it.compositeRule = true;
    var $code = it.validate($it);
    $it.baseId = $currentBaseId;
    if (it.util.varOccurences($code, $nextData) < 2) {
      out += ' ' + (it.util.varReplace($code, $nextData, $passData)) + ' ';
    } else {
      out += ' var ' + ($nextData) + ' = ' + ($passData) + '; ' + ($code) + ' ';
    }
    it.compositeRule = $it.compositeRule = $wasComposite;
    out += ' if (!' + ($nextValid) + ') { for (var ' + ($i) + '=startErrs' + ($lvl) + '; ' + ($i) + '<errors; ' + ($i) + '++) { vErrors[' + ($i) + '].propertyName = ' + ($key) + '; }   var err =   '; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ('propertyNames') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { propertyName: \'' + ($invalidName) + '\' } ';
      if (it.opts.messages !== false) {
        out += ' , message: \'property name \\\'' + ($invalidName) + '\\\' is invalid\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    if (!it.compositeRule && $breakOnError) {
      /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError(vErrors); ';
      } else {
        out += ' validate.errors = vErrors; return false; ';
      }
    }
    if ($breakOnError) {
      out += ' break; ';
    }
    out += ' } }';
  }
  if ($breakOnError) {
    out += ' ' + ($closingBraces) + ' if (' + ($errs) + ' == errors) {';
  }
  out = it.util.cleanUpCode(out);
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/ref.js":
/*!********************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/ref.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_ref(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $async, $refCode;
  if ($schema == '#' || $schema == '#/') {
    if (it.isRoot) {
      $async = it.async;
      $refCode = 'validate';
    } else {
      $async = it.root.schema.$async === true;
      $refCode = 'root.refVal[0]';
    }
  } else {
    var $refVal = it.resolveRef(it.baseId, $schema, it.isRoot);
    if ($refVal === undefined) {
      var $message = it.MissingRefError.message(it.baseId, $schema);
      if (it.opts.missingRefs == 'fail') {
        it.logger.error($message);
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ('$ref') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { ref: \'' + (it.util.escapeQuotes($schema)) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'can\\\'t resolve reference ' + (it.util.escapeQuotes($schema)) + '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: ' + (it.util.toQuotedString($schema)) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) {
          /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
        if ($breakOnError) {
          out += ' if (false) { ';
        }
      } else if (it.opts.missingRefs == 'ignore') {
        it.logger.warn($message);
        if ($breakOnError) {
          out += ' if (true) { ';
        }
      } else {
        throw new it.MissingRefError(it.baseId, $schema, $message);
      }
    } else if ($refVal.inline) {
      var $it = it.util.copy(it);
      $it.level++;
      var $nextValid = 'valid' + $it.level;
      $it.schema = $refVal.schema;
      $it.schemaPath = '';
      $it.errSchemaPath = $schema;
      var $code = it.validate($it).replace(/validate\.schema/g, $refVal.code);
      out += ' ' + ($code) + ' ';
      if ($breakOnError) {
        out += ' if (' + ($nextValid) + ') { ';
      }
    } else {
      $async = $refVal.$async === true || (it.async && $refVal.$async !== false);
      $refCode = $refVal.code;
    }
  }
  if ($refCode) {
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = '';
    if (it.opts.passContext) {
      out += ' ' + ($refCode) + '.call(this, ';
    } else {
      out += ' ' + ($refCode) + '( ';
    }
    out += ' ' + ($data) + ', (dataPath || \'\')';
    if (it.errorPath != '""') {
      out += ' + ' + (it.errorPath);
    }
    var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
      $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
    out += ' , ' + ($parentData) + ' , ' + ($parentDataProperty) + ', rootData)  ';
    var __callValidate = out;
    out = $$outStack.pop();
    if ($async) {
      if (!it.async) throw new Error('async schema referenced by sync schema');
      if ($breakOnError) {
        out += ' var ' + ($valid) + '; ';
      }
      out += ' try { await ' + (__callValidate) + '; ';
      if ($breakOnError) {
        out += ' ' + ($valid) + ' = true; ';
      }
      out += ' } catch (e) { if (!(e instanceof ValidationError)) throw e; if (vErrors === null) vErrors = e.errors; else vErrors = vErrors.concat(e.errors); errors = vErrors.length; ';
      if ($breakOnError) {
        out += ' ' + ($valid) + ' = false; ';
      }
      out += ' } ';
      if ($breakOnError) {
        out += ' if (' + ($valid) + ') { ';
      }
    } else {
      out += ' if (!' + (__callValidate) + ') { if (vErrors === null) vErrors = ' + ($refCode) + '.errors; else vErrors = vErrors.concat(' + ($refCode) + '.errors); errors = vErrors.length; } ';
      if ($breakOnError) {
        out += ' else { ';
      }
    }
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/required.js":
/*!*************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/required.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_required(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  var $vSchema = 'schema' + $lvl;
  if (!$isData) {
    if ($schema.length < it.opts.loopRequired && it.schema.properties && Object.keys(it.schema.properties).length) {
      var $required = [];
      var arr1 = $schema;
      if (arr1) {
        var $property, i1 = -1,
          l1 = arr1.length - 1;
        while (i1 < l1) {
          $property = arr1[i1 += 1];
          var $propertySch = it.schema.properties[$property];
          if (!($propertySch && (it.opts.strictKeywords ? typeof $propertySch == 'object' && Object.keys($propertySch).length > 0 : it.util.schemaHasRules($propertySch, it.RULES.all)))) {
            $required[$required.length] = $property;
          }
        }
      }
    } else {
      var $required = $schema;
    }
  }
  if ($isData || $required.length) {
    var $currentErrorPath = it.errorPath,
      $loopRequired = $isData || $required.length >= it.opts.loopRequired,
      $ownProperties = it.opts.ownProperties;
    if ($breakOnError) {
      out += ' var missing' + ($lvl) + '; ';
      if ($loopRequired) {
        if (!$isData) {
          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';
        }
        var $i = 'i' + $lvl,
          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
          $missingProperty = '\' + ' + $propertyPath + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
        }
        out += ' var ' + ($valid) + ' = true; ';
        if ($isData) {
          out += ' if (schema' + ($lvl) + ' === undefined) ' + ($valid) + ' = true; else if (!Array.isArray(schema' + ($lvl) + ')) ' + ($valid) + ' = false; else {';
        }
        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { ' + ($valid) + ' = ' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] !== undefined ';
        if ($ownProperties) {
          out += ' &&   Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';
        }
        out += '; if (!' + ($valid) + ') break; } ';
        if ($isData) {
          out += '  }  ';
        }
        out += '  if (!' + ($valid) + ') {   ';
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'';
            if (it.opts._errorDataPathProperty) {
              out += 'is a required property';
            } else {
              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) {
          /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
        out += ' } else { ';
      } else {
        out += ' if ( ';
        var arr2 = $required;
        if (arr2) {
          var $propertyKey, $i = -1,
            l2 = arr2.length - 1;
          while ($i < l2) {
            $propertyKey = arr2[$i += 1];
            if ($i) {
              out += ' || ';
            }
            var $prop = it.util.getProperty($propertyKey),
              $useData = $data + $prop;
            out += ' ( ( ' + ($useData) + ' === undefined ';
            if ($ownProperties) {
              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($propertyKey)) + '\') ';
            }
            out += ') && (missing' + ($lvl) + ' = ' + (it.util.toQuotedString(it.opts.jsonPointers ? $propertyKey : $prop)) + ') ) ';
          }
        }
        out += ') {  ';
        var $propertyPath = 'missing' + $lvl,
          $missingProperty = '\' + ' + $propertyPath + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.opts.jsonPointers ? it.util.getPathExpr($currentErrorPath, $propertyPath, true) : $currentErrorPath + ' + ' + $propertyPath;
        }
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'';
            if (it.opts._errorDataPathProperty) {
              out += 'is a required property';
            } else {
              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) {
          /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
        out += ' } else { ';
      }
    } else {
      if ($loopRequired) {
        if (!$isData) {
          out += ' var ' + ($vSchema) + ' = validate.schema' + ($schemaPath) + '; ';
        }
        var $i = 'i' + $lvl,
          $propertyPath = 'schema' + $lvl + '[' + $i + ']',
          $missingProperty = '\' + ' + $propertyPath + ' + \'';
        if (it.opts._errorDataPathProperty) {
          it.errorPath = it.util.getPathExpr($currentErrorPath, $propertyPath, it.opts.jsonPointers);
        }
        if ($isData) {
          out += ' if (' + ($vSchema) + ' && !Array.isArray(' + ($vSchema) + ')) {  var err =   '; /* istanbul ignore else */
          if (it.createErrors !== false) {
            out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
            if (it.opts.messages !== false) {
              out += ' , message: \'';
              if (it.opts._errorDataPathProperty) {
                out += 'is a required property';
              } else {
                out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
              }
              out += '\' ';
            }
            if (it.opts.verbose) {
              out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
            }
            out += ' } ';
          } else {
            out += ' {} ';
          }
          out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } else if (' + ($vSchema) + ' !== undefined) { ';
        }
        out += ' for (var ' + ($i) + ' = 0; ' + ($i) + ' < ' + ($vSchema) + '.length; ' + ($i) + '++) { if (' + ($data) + '[' + ($vSchema) + '[' + ($i) + ']] === undefined ';
        if ($ownProperties) {
          out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', ' + ($vSchema) + '[' + ($i) + ']) ';
        }
        out += ') {  var err =   '; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'';
            if (it.opts._errorDataPathProperty) {
              out += 'is a required property';
            } else {
              out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } } ';
        if ($isData) {
          out += '  }  ';
        }
      } else {
        var arr3 = $required;
        if (arr3) {
          var $propertyKey, i3 = -1,
            l3 = arr3.length - 1;
          while (i3 < l3) {
            $propertyKey = arr3[i3 += 1];
            var $prop = it.util.getProperty($propertyKey),
              $missingProperty = it.util.escapeQuotes($propertyKey),
              $useData = $data + $prop;
            if (it.opts._errorDataPathProperty) {
              it.errorPath = it.util.getPath($currentErrorPath, $propertyKey, it.opts.jsonPointers);
            }
            out += ' if ( ' + ($useData) + ' === undefined ';
            if ($ownProperties) {
              out += ' || ! Object.prototype.hasOwnProperty.call(' + ($data) + ', \'' + (it.util.escapeQuotes($propertyKey)) + '\') ';
            }
            out += ') {  var err =   '; /* istanbul ignore else */
            if (it.createErrors !== false) {
              out += ' { keyword: \'' + ('required') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { missingProperty: \'' + ($missingProperty) + '\' } ';
              if (it.opts.messages !== false) {
                out += ' , message: \'';
                if (it.opts._errorDataPathProperty) {
                  out += 'is a required property';
                } else {
                  out += 'should have required property \\\'' + ($missingProperty) + '\\\'';
                }
                out += '\' ';
              }
              if (it.opts.verbose) {
                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
              }
              out += ' } ';
            } else {
              out += ' {} ';
            }
            out += ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; } ';
          }
        }
      }
    }
    it.errorPath = $currentErrorPath;
  } else if ($breakOnError) {
    out += ' if (true) {';
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/uniqueItems.js":
/*!****************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/uniqueItems.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_uniqueItems(it, $keyword, $ruleType) {
  var out = ' ';
  var $lvl = it.level;
  var $dataLvl = it.dataLevel;
  var $schema = it.schema[$keyword];
  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
  var $breakOnError = !it.opts.allErrors;
  var $data = 'data' + ($dataLvl || '');
  var $valid = 'valid' + $lvl;
  var $isData = it.opts.$data && $schema && $schema.$data,
    $schemaValue;
  if ($isData) {
    out += ' var schema' + ($lvl) + ' = ' + (it.util.getData($schema.$data, $dataLvl, it.dataPathArr)) + '; ';
    $schemaValue = 'schema' + $lvl;
  } else {
    $schemaValue = $schema;
  }
  if (($schema || $isData) && it.opts.uniqueItems !== false) {
    if ($isData) {
      out += ' var ' + ($valid) + '; if (' + ($schemaValue) + ' === false || ' + ($schemaValue) + ' === undefined) ' + ($valid) + ' = true; else if (typeof ' + ($schemaValue) + ' != \'boolean\') ' + ($valid) + ' = false; else { ';
    }
    out += ' var i = ' + ($data) + '.length , ' + ($valid) + ' = true , j; if (i > 1) { ';
    var $itemType = it.schema.items && it.schema.items.type,
      $typeIsArray = Array.isArray($itemType);
    if (!$itemType || $itemType == 'object' || $itemType == 'array' || ($typeIsArray && ($itemType.indexOf('object') >= 0 || $itemType.indexOf('array') >= 0))) {
      out += ' outer: for (;i--;) { for (j = i; j--;) { if (equal(' + ($data) + '[i], ' + ($data) + '[j])) { ' + ($valid) + ' = false; break outer; } } } ';
    } else {
      out += ' var itemIndices = {}, item; for (;i--;) { var item = ' + ($data) + '[i]; ';
      var $method = 'checkDataType' + ($typeIsArray ? 's' : '');
      out += ' if (' + (it.util[$method]($itemType, 'item', true)) + ') continue; ';
      if ($typeIsArray) {
        out += ' if (typeof item == \'string\') item = \'"\' + item; ';
      }
      out += ' if (typeof itemIndices[item] == \'number\') { ' + ($valid) + ' = false; j = itemIndices[item]; break; } itemIndices[item] = i; } ';
    }
    out += ' } ';
    if ($isData) {
      out += '  }  ';
    }
    out += ' if (!' + ($valid) + ') {   ';
    var $$outStack = $$outStack || [];
    $$outStack.push(out);
    out = ''; /* istanbul ignore else */
    if (it.createErrors !== false) {
      out += ' { keyword: \'' + ('uniqueItems') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { i: i, j: j } ';
      if (it.opts.messages !== false) {
        out += ' , message: \'should NOT have duplicate items (items ## \' + j + \' and \' + i + \' are identical)\' ';
      }
      if (it.opts.verbose) {
        out += ' , schema:  ';
        if ($isData) {
          out += 'validate.schema' + ($schemaPath);
        } else {
          out += '' + ($schema);
        }
        out += '         , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
      }
      out += ' } ';
    } else {
      out += ' {} ';
    }
    var __err = out;
    out = $$outStack.pop();
    if (!it.compositeRule && $breakOnError) {
      /* istanbul ignore if */
      if (it.async) {
        out += ' throw new ValidationError([' + (__err) + ']); ';
      } else {
        out += ' validate.errors = [' + (__err) + ']; return false; ';
      }
    } else {
      out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
    }
    out += ' } ';
    if ($breakOnError) {
      out += ' else { ';
    }
  } else {
    if ($breakOnError) {
      out += ' if (true) { ';
    }
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/dotjs/validate.js":
/*!*************************************************!*\
  !*** ../node_modules/ajv/lib/dotjs/validate.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function generate_validate(it, $keyword, $ruleType) {
  var out = '';
  var $async = it.schema.$async === true,
    $refKeywords = it.util.schemaHasRulesExcept(it.schema, it.RULES.all, '$ref'),
    $id = it.self._getId(it.schema);
  if (it.opts.strictKeywords) {
    var $unknownKwd = it.util.schemaUnknownRules(it.schema, it.RULES.keywords);
    if ($unknownKwd) {
      var $keywordsMsg = 'unknown keyword: ' + $unknownKwd;
      if (it.opts.strictKeywords === 'log') it.logger.warn($keywordsMsg);
      else throw new Error($keywordsMsg);
    }
  }
  if (it.isTop) {
    out += ' var validate = ';
    if ($async) {
      it.async = true;
      out += 'async ';
    }
    out += 'function(data, dataPath, parentData, parentDataProperty, rootData) { \'use strict\'; ';
    if ($id && (it.opts.sourceCode || it.opts.processCode)) {
      out += ' ' + ('/\*# sourceURL=' + $id + ' */') + ' ';
    }
  }
  if (typeof it.schema == 'boolean' || !($refKeywords || it.schema.$ref)) {
    var $keyword = 'false schema';
    var $lvl = it.level;
    var $dataLvl = it.dataLevel;
    var $schema = it.schema[$keyword];
    var $schemaPath = it.schemaPath + it.util.getProperty($keyword);
    var $errSchemaPath = it.errSchemaPath + '/' + $keyword;
    var $breakOnError = !it.opts.allErrors;
    var $errorKeyword;
    var $data = 'data' + ($dataLvl || '');
    var $valid = 'valid' + $lvl;
    if (it.schema === false) {
      if (it.isTop) {
        $breakOnError = true;
      } else {
        out += ' var ' + ($valid) + ' = false; ';
      }
      var $$outStack = $$outStack || [];
      $$outStack.push(out);
      out = ''; /* istanbul ignore else */
      if (it.createErrors !== false) {
        out += ' { keyword: \'' + ($errorKeyword || 'false schema') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: {} ';
        if (it.opts.messages !== false) {
          out += ' , message: \'boolean schema is false\' ';
        }
        if (it.opts.verbose) {
          out += ' , schema: false , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
        }
        out += ' } ';
      } else {
        out += ' {} ';
      }
      var __err = out;
      out = $$outStack.pop();
      if (!it.compositeRule && $breakOnError) {
        /* istanbul ignore if */
        if (it.async) {
          out += ' throw new ValidationError([' + (__err) + ']); ';
        } else {
          out += ' validate.errors = [' + (__err) + ']; return false; ';
        }
      } else {
        out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
      }
    } else {
      if (it.isTop) {
        if ($async) {
          out += ' return data; ';
        } else {
          out += ' validate.errors = null; return true; ';
        }
      } else {
        out += ' var ' + ($valid) + ' = true; ';
      }
    }
    if (it.isTop) {
      out += ' }; return validate; ';
    }
    return out;
  }
  if (it.isTop) {
    var $top = it.isTop,
      $lvl = it.level = 0,
      $dataLvl = it.dataLevel = 0,
      $data = 'data';
    it.rootId = it.resolve.fullPath(it.self._getId(it.root.schema));
    it.baseId = it.baseId || it.rootId;
    delete it.isTop;
    it.dataPathArr = [undefined];
    if (it.schema.default !== undefined && it.opts.useDefaults && it.opts.strictDefaults) {
      var $defaultMsg = 'default is ignored in the schema root';
      if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);
      else throw new Error($defaultMsg);
    }
    out += ' var vErrors = null; ';
    out += ' var errors = 0;     ';
    out += ' if (rootData === undefined) rootData = data; ';
  } else {
    var $lvl = it.level,
      $dataLvl = it.dataLevel,
      $data = 'data' + ($dataLvl || '');
    if ($id) it.baseId = it.resolve.url(it.baseId, $id);
    if ($async && !it.async) throw new Error('async schema in sync schema');
    out += ' var errs_' + ($lvl) + ' = errors;';
  }
  var $valid = 'valid' + $lvl,
    $breakOnError = !it.opts.allErrors,
    $closingBraces1 = '',
    $closingBraces2 = '';
  var $errorKeyword;
  var $typeSchema = it.schema.type,
    $typeIsArray = Array.isArray($typeSchema);
  if ($typeSchema && it.opts.nullable && it.schema.nullable === true) {
    if ($typeIsArray) {
      if ($typeSchema.indexOf('null') == -1) $typeSchema = $typeSchema.concat('null');
    } else if ($typeSchema != 'null') {
      $typeSchema = [$typeSchema, 'null'];
      $typeIsArray = true;
    }
  }
  if ($typeIsArray && $typeSchema.length == 1) {
    $typeSchema = $typeSchema[0];
    $typeIsArray = false;
  }
  if (it.schema.$ref && $refKeywords) {
    if (it.opts.extendRefs == 'fail') {
      throw new Error('$ref: validation keywords used in schema at path "' + it.errSchemaPath + '" (see option extendRefs)');
    } else if (it.opts.extendRefs !== true) {
      $refKeywords = false;
      it.logger.warn('$ref: keywords ignored in schema at path "' + it.errSchemaPath + '"');
    }
  }
  if (it.schema.$comment && it.opts.$comment) {
    out += ' ' + (it.RULES.all.$comment.code(it, '$comment'));
  }
  if ($typeSchema) {
    if (it.opts.coerceTypes) {
      var $coerceToTypes = it.util.coerceToTypes(it.opts.coerceTypes, $typeSchema);
    }
    var $rulesGroup = it.RULES.types[$typeSchema];
    if ($coerceToTypes || $typeIsArray || $rulesGroup === true || ($rulesGroup && !$shouldUseGroup($rulesGroup))) {
      var $schemaPath = it.schemaPath + '.type',
        $errSchemaPath = it.errSchemaPath + '/type';
      var $schemaPath = it.schemaPath + '.type',
        $errSchemaPath = it.errSchemaPath + '/type',
        $method = $typeIsArray ? 'checkDataTypes' : 'checkDataType';
      out += ' if (' + (it.util[$method]($typeSchema, $data, true)) + ') { ';
      if ($coerceToTypes) {
        var $dataType = 'dataType' + $lvl,
          $coerced = 'coerced' + $lvl;
        out += ' var ' + ($dataType) + ' = typeof ' + ($data) + '; ';
        if (it.opts.coerceTypes == 'array') {
          out += ' if (' + ($dataType) + ' == \'object\' && Array.isArray(' + ($data) + ')) ' + ($dataType) + ' = \'array\'; ';
        }
        out += ' var ' + ($coerced) + ' = undefined; ';
        var $bracesCoercion = '';
        var arr1 = $coerceToTypes;
        if (arr1) {
          var $type, $i = -1,
            l1 = arr1.length - 1;
          while ($i < l1) {
            $type = arr1[$i += 1];
            if ($i) {
              out += ' if (' + ($coerced) + ' === undefined) { ';
              $bracesCoercion += '}';
            }
            if (it.opts.coerceTypes == 'array' && $type != 'array') {
              out += ' if (' + ($dataType) + ' == \'array\' && ' + ($data) + '.length == 1) { ' + ($coerced) + ' = ' + ($data) + ' = ' + ($data) + '[0]; ' + ($dataType) + ' = typeof ' + ($data) + ';  } ';
            }
            if ($type == 'string') {
              out += ' if (' + ($dataType) + ' == \'number\' || ' + ($dataType) + ' == \'boolean\') ' + ($coerced) + ' = \'\' + ' + ($data) + '; else if (' + ($data) + ' === null) ' + ($coerced) + ' = \'\'; ';
            } else if ($type == 'number' || $type == 'integer') {
              out += ' if (' + ($dataType) + ' == \'boolean\' || ' + ($data) + ' === null || (' + ($dataType) + ' == \'string\' && ' + ($data) + ' && ' + ($data) + ' == +' + ($data) + ' ';
              if ($type == 'integer') {
                out += ' && !(' + ($data) + ' % 1)';
              }
              out += ')) ' + ($coerced) + ' = +' + ($data) + '; ';
            } else if ($type == 'boolean') {
              out += ' if (' + ($data) + ' === \'false\' || ' + ($data) + ' === 0 || ' + ($data) + ' === null) ' + ($coerced) + ' = false; else if (' + ($data) + ' === \'true\' || ' + ($data) + ' === 1) ' + ($coerced) + ' = true; ';
            } else if ($type == 'null') {
              out += ' if (' + ($data) + ' === \'\' || ' + ($data) + ' === 0 || ' + ($data) + ' === false) ' + ($coerced) + ' = null; ';
            } else if (it.opts.coerceTypes == 'array' && $type == 'array') {
              out += ' if (' + ($dataType) + ' == \'string\' || ' + ($dataType) + ' == \'number\' || ' + ($dataType) + ' == \'boolean\' || ' + ($data) + ' == null) ' + ($coerced) + ' = [' + ($data) + ']; ';
            }
          }
        }
        out += ' ' + ($bracesCoercion) + ' if (' + ($coerced) + ' === undefined) {   ';
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ($errorKeyword || 'type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
          if ($typeIsArray) {
            out += '' + ($typeSchema.join(","));
          } else {
            out += '' + ($typeSchema);
          }
          out += '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'should be ';
            if ($typeIsArray) {
              out += '' + ($typeSchema.join(","));
            } else {
              out += '' + ($typeSchema);
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) {
          /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
        out += ' } else {  ';
        var $parentData = $dataLvl ? 'data' + (($dataLvl - 1) || '') : 'parentData',
          $parentDataProperty = $dataLvl ? it.dataPathArr[$dataLvl] : 'parentDataProperty';
        out += ' ' + ($data) + ' = ' + ($coerced) + '; ';
        if (!$dataLvl) {
          out += 'if (' + ($parentData) + ' !== undefined)';
        }
        out += ' ' + ($parentData) + '[' + ($parentDataProperty) + '] = ' + ($coerced) + '; } ';
      } else {
        var $$outStack = $$outStack || [];
        $$outStack.push(out);
        out = ''; /* istanbul ignore else */
        if (it.createErrors !== false) {
          out += ' { keyword: \'' + ($errorKeyword || 'type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
          if ($typeIsArray) {
            out += '' + ($typeSchema.join(","));
          } else {
            out += '' + ($typeSchema);
          }
          out += '\' } ';
          if (it.opts.messages !== false) {
            out += ' , message: \'should be ';
            if ($typeIsArray) {
              out += '' + ($typeSchema.join(","));
            } else {
              out += '' + ($typeSchema);
            }
            out += '\' ';
          }
          if (it.opts.verbose) {
            out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
          }
          out += ' } ';
        } else {
          out += ' {} ';
        }
        var __err = out;
        out = $$outStack.pop();
        if (!it.compositeRule && $breakOnError) {
          /* istanbul ignore if */
          if (it.async) {
            out += ' throw new ValidationError([' + (__err) + ']); ';
          } else {
            out += ' validate.errors = [' + (__err) + ']; return false; ';
          }
        } else {
          out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
        }
      }
      out += ' } ';
    }
  }
  if (it.schema.$ref && !$refKeywords) {
    out += ' ' + (it.RULES.all.$ref.code(it, '$ref')) + ' ';
    if ($breakOnError) {
      out += ' } if (errors === ';
      if ($top) {
        out += '0';
      } else {
        out += 'errs_' + ($lvl);
      }
      out += ') { ';
      $closingBraces2 += '}';
    }
  } else {
    var arr2 = it.RULES;
    if (arr2) {
      var $rulesGroup, i2 = -1,
        l2 = arr2.length - 1;
      while (i2 < l2) {
        $rulesGroup = arr2[i2 += 1];
        if ($shouldUseGroup($rulesGroup)) {
          if ($rulesGroup.type) {
            out += ' if (' + (it.util.checkDataType($rulesGroup.type, $data)) + ') { ';
          }
          if (it.opts.useDefaults) {
            if ($rulesGroup.type == 'object' && it.schema.properties) {
              var $schema = it.schema.properties,
                $schemaKeys = Object.keys($schema);
              var arr3 = $schemaKeys;
              if (arr3) {
                var $propertyKey, i3 = -1,
                  l3 = arr3.length - 1;
                while (i3 < l3) {
                  $propertyKey = arr3[i3 += 1];
                  var $sch = $schema[$propertyKey];
                  if ($sch.default !== undefined) {
                    var $passData = $data + it.util.getProperty($propertyKey);
                    if (it.compositeRule) {
                      if (it.opts.strictDefaults) {
                        var $defaultMsg = 'default is ignored for: ' + $passData;
                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);
                        else throw new Error($defaultMsg);
                      }
                    } else {
                      out += ' if (' + ($passData) + ' === undefined ';
                      if (it.opts.useDefaults == 'empty') {
                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \'\' ';
                      }
                      out += ' ) ' + ($passData) + ' = ';
                      if (it.opts.useDefaults == 'shared') {
                        out += ' ' + (it.useDefault($sch.default)) + ' ';
                      } else {
                        out += ' ' + (JSON.stringify($sch.default)) + ' ';
                      }
                      out += '; ';
                    }
                  }
                }
              }
            } else if ($rulesGroup.type == 'array' && Array.isArray(it.schema.items)) {
              var arr4 = it.schema.items;
              if (arr4) {
                var $sch, $i = -1,
                  l4 = arr4.length - 1;
                while ($i < l4) {
                  $sch = arr4[$i += 1];
                  if ($sch.default !== undefined) {
                    var $passData = $data + '[' + $i + ']';
                    if (it.compositeRule) {
                      if (it.opts.strictDefaults) {
                        var $defaultMsg = 'default is ignored for: ' + $passData;
                        if (it.opts.strictDefaults === 'log') it.logger.warn($defaultMsg);
                        else throw new Error($defaultMsg);
                      }
                    } else {
                      out += ' if (' + ($passData) + ' === undefined ';
                      if (it.opts.useDefaults == 'empty') {
                        out += ' || ' + ($passData) + ' === null || ' + ($passData) + ' === \'\' ';
                      }
                      out += ' ) ' + ($passData) + ' = ';
                      if (it.opts.useDefaults == 'shared') {
                        out += ' ' + (it.useDefault($sch.default)) + ' ';
                      } else {
                        out += ' ' + (JSON.stringify($sch.default)) + ' ';
                      }
                      out += '; ';
                    }
                  }
                }
              }
            }
          }
          var arr5 = $rulesGroup.rules;
          if (arr5) {
            var $rule, i5 = -1,
              l5 = arr5.length - 1;
            while (i5 < l5) {
              $rule = arr5[i5 += 1];
              if ($shouldUseRule($rule)) {
                var $code = $rule.code(it, $rule.keyword, $rulesGroup.type);
                if ($code) {
                  out += ' ' + ($code) + ' ';
                  if ($breakOnError) {
                    $closingBraces1 += '}';
                  }
                }
              }
            }
          }
          if ($breakOnError) {
            out += ' ' + ($closingBraces1) + ' ';
            $closingBraces1 = '';
          }
          if ($rulesGroup.type) {
            out += ' } ';
            if ($typeSchema && $typeSchema === $rulesGroup.type && !$coerceToTypes) {
              out += ' else { ';
              var $schemaPath = it.schemaPath + '.type',
                $errSchemaPath = it.errSchemaPath + '/type';
              var $$outStack = $$outStack || [];
              $$outStack.push(out);
              out = ''; /* istanbul ignore else */
              if (it.createErrors !== false) {
                out += ' { keyword: \'' + ($errorKeyword || 'type') + '\' , dataPath: (dataPath || \'\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { type: \'';
                if ($typeIsArray) {
                  out += '' + ($typeSchema.join(","));
                } else {
                  out += '' + ($typeSchema);
                }
                out += '\' } ';
                if (it.opts.messages !== false) {
                  out += ' , message: \'should be ';
                  if ($typeIsArray) {
                    out += '' + ($typeSchema.join(","));
                  } else {
                    out += '' + ($typeSchema);
                  }
                  out += '\' ';
                }
                if (it.opts.verbose) {
                  out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';
                }
                out += ' } ';
              } else {
                out += ' {} ';
              }
              var __err = out;
              out = $$outStack.pop();
              if (!it.compositeRule && $breakOnError) {
                /* istanbul ignore if */
                if (it.async) {
                  out += ' throw new ValidationError([' + (__err) + ']); ';
                } else {
                  out += ' validate.errors = [' + (__err) + ']; return false; ';
                }
              } else {
                out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';
              }
              out += ' } ';
            }
          }
          if ($breakOnError) {
            out += ' if (errors === ';
            if ($top) {
              out += '0';
            } else {
              out += 'errs_' + ($lvl);
            }
            out += ') { ';
            $closingBraces2 += '}';
          }
        }
      }
    }
  }
  if ($breakOnError) {
    out += ' ' + ($closingBraces2) + ' ';
  }
  if ($top) {
    if ($async) {
      out += ' if (errors === 0) return data;           ';
      out += ' else throw new ValidationError(vErrors); ';
    } else {
      out += ' validate.errors = vErrors; ';
      out += ' return errors === 0;       ';
    }
    out += ' }; return validate;';
  } else {
    out += ' var ' + ($valid) + ' = errors === errs_' + ($lvl) + ';';
  }
  out = it.util.cleanUpCode(out);
  if ($top) {
    out = it.util.finalCleanUpCode(out, $async);
  }

  function $shouldUseGroup($rulesGroup) {
    var rules = $rulesGroup.rules;
    for (var i = 0; i < rules.length; i++)
      if ($shouldUseRule(rules[i])) return true;
  }

  function $shouldUseRule($rule) {
    return it.schema[$rule.keyword] !== undefined || ($rule.implements && $ruleImplementsSomeKeyword($rule));
  }

  function $ruleImplementsSomeKeyword($rule) {
    var impl = $rule.implements;
    for (var i = 0; i < impl.length; i++)
      if (it.schema[impl[i]] !== undefined) return true;
  }
  return out;
}


/***/ }),

/***/ "../node_modules/ajv/lib/keyword.js":
/*!******************************************!*\
  !*** ../node_modules/ajv/lib/keyword.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var IDENTIFIER = /^[a-z_$][a-z0-9_$-]*$/i;
var customRuleCode = __webpack_require__(/*! ./dotjs/custom */ "../node_modules/ajv/lib/dotjs/custom.js");
var definitionSchema = __webpack_require__(/*! ./definition_schema */ "../node_modules/ajv/lib/definition_schema.js");

module.exports = {
  add: addKeyword,
  get: getKeyword,
  remove: removeKeyword,
  validate: validateKeyword
};


/**
 * Define custom keyword
 * @this  Ajv
 * @param {String} keyword custom keyword, should be unique (including different from all standard, custom and macro keywords).
 * @param {Object} definition keyword definition object with properties `type` (type(s) which the keyword applies to), `validate` or `compile`.
 * @return {Ajv} this for method chaining
 */
function addKeyword(keyword, definition) {
  /* jshint validthis: true */
  /* eslint no-shadow: 0 */
  var RULES = this.RULES;
  if (RULES.keywords[keyword])
    throw new Error('Keyword ' + keyword + ' is already defined');

  if (!IDENTIFIER.test(keyword))
    throw new Error('Keyword ' + keyword + ' is not a valid identifier');

  if (definition) {
    this.validateKeyword(definition, true);

    var dataType = definition.type;
    if (Array.isArray(dataType)) {
      for (var i=0; i<dataType.length; i++)
        _addRule(keyword, dataType[i], definition);
    } else {
      _addRule(keyword, dataType, definition);
    }

    var metaSchema = definition.metaSchema;
    if (metaSchema) {
      if (definition.$data && this._opts.$data) {
        metaSchema = {
          anyOf: [
            metaSchema,
            { '$ref': 'https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#' }
          ]
        };
      }
      definition.validateSchema = this.compile(metaSchema, true);
    }
  }

  RULES.keywords[keyword] = RULES.all[keyword] = true;


  function _addRule(keyword, dataType, definition) {
    var ruleGroup;
    for (var i=0; i<RULES.length; i++) {
      var rg = RULES[i];
      if (rg.type == dataType) {
        ruleGroup = rg;
        break;
      }
    }

    if (!ruleGroup) {
      ruleGroup = { type: dataType, rules: [] };
      RULES.push(ruleGroup);
    }

    var rule = {
      keyword: keyword,
      definition: definition,
      custom: true,
      code: customRuleCode,
      implements: definition.implements
    };
    ruleGroup.rules.push(rule);
    RULES.custom[keyword] = rule;
  }

  return this;
}


/**
 * Get keyword
 * @this  Ajv
 * @param {String} keyword pre-defined or custom keyword.
 * @return {Object|Boolean} custom keyword definition, `true` if it is a predefined keyword, `false` otherwise.
 */
function getKeyword(keyword) {
  /* jshint validthis: true */
  var rule = this.RULES.custom[keyword];
  return rule ? rule.definition : this.RULES.keywords[keyword] || false;
}


/**
 * Remove keyword
 * @this  Ajv
 * @param {String} keyword pre-defined or custom keyword.
 * @return {Ajv} this for method chaining
 */
function removeKeyword(keyword) {
  /* jshint validthis: true */
  var RULES = this.RULES;
  delete RULES.keywords[keyword];
  delete RULES.all[keyword];
  delete RULES.custom[keyword];
  for (var i=0; i<RULES.length; i++) {
    var rules = RULES[i].rules;
    for (var j=0; j<rules.length; j++) {
      if (rules[j].keyword == keyword) {
        rules.splice(j, 1);
        break;
      }
    }
  }
  return this;
}


/**
 * Validate keyword definition
 * @this  Ajv
 * @param {Object} definition keyword definition object.
 * @param {Boolean} throwError true to throw exception if definition is invalid
 * @return {boolean} validation result
 */
function validateKeyword(definition, throwError) {
  validateKeyword.errors = null;
  var v = this._validateKeyword = this._validateKeyword
                                  || this.compile(definitionSchema, true);

  if (v(definition)) return true;
  validateKeyword.errors = v.errors;
  if (throwError)
    throw new Error('custom keyword definition is invalid: '  + this.errorsText(v.errors));
  else
    return false;
}


/***/ }),

/***/ "../node_modules/ajv/lib/refs/data.json":
/*!**********************************************!*\
  !*** ../node_modules/ajv/lib/refs/data.json ***!
  \**********************************************/
/*! exports provided: $schema, $id, description, type, required, properties, additionalProperties, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"$id\":\"https://raw.githubusercontent.com/epoberezkin/ajv/master/lib/refs/data.json#\",\"description\":\"Meta-schema for $data reference (JSON Schema extension proposal)\",\"type\":\"object\",\"required\":[\"$data\"],\"properties\":{\"$data\":{\"type\":\"string\",\"anyOf\":[{\"format\":\"relative-json-pointer\"},{\"format\":\"json-pointer\"}]}},\"additionalProperties\":false}");

/***/ }),

/***/ "../node_modules/ajv/lib/refs/json-schema-draft-07.json":
/*!**************************************************************!*\
  !*** ../node_modules/ajv/lib/refs/json-schema-draft-07.json ***!
  \**************************************************************/
/*! exports provided: $schema, $id, title, definitions, type, properties, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"$schema\":\"http://json-schema.org/draft-07/schema#\",\"$id\":\"http://json-schema.org/draft-07/schema#\",\"title\":\"Core schema meta-schema\",\"definitions\":{\"schemaArray\":{\"type\":\"array\",\"minItems\":1,\"items\":{\"$ref\":\"#\"}},\"nonNegativeInteger\":{\"type\":\"integer\",\"minimum\":0},\"nonNegativeIntegerDefault0\":{\"allOf\":[{\"$ref\":\"#/definitions/nonNegativeInteger\"},{\"default\":0}]},\"simpleTypes\":{\"enum\":[\"array\",\"boolean\",\"integer\",\"null\",\"number\",\"object\",\"string\"]},\"stringArray\":{\"type\":\"array\",\"items\":{\"type\":\"string\"},\"uniqueItems\":true,\"default\":[]}},\"type\":[\"object\",\"boolean\"],\"properties\":{\"$id\":{\"type\":\"string\",\"format\":\"uri-reference\"},\"$schema\":{\"type\":\"string\",\"format\":\"uri\"},\"$ref\":{\"type\":\"string\",\"format\":\"uri-reference\"},\"$comment\":{\"type\":\"string\"},\"title\":{\"type\":\"string\"},\"description\":{\"type\":\"string\"},\"default\":true,\"readOnly\":{\"type\":\"boolean\",\"default\":false},\"examples\":{\"type\":\"array\",\"items\":true},\"multipleOf\":{\"type\":\"number\",\"exclusiveMinimum\":0},\"maximum\":{\"type\":\"number\"},\"exclusiveMaximum\":{\"type\":\"number\"},\"minimum\":{\"type\":\"number\"},\"exclusiveMinimum\":{\"type\":\"number\"},\"maxLength\":{\"$ref\":\"#/definitions/nonNegativeInteger\"},\"minLength\":{\"$ref\":\"#/definitions/nonNegativeIntegerDefault0\"},\"pattern\":{\"type\":\"string\",\"format\":\"regex\"},\"additionalItems\":{\"$ref\":\"#\"},\"items\":{\"anyOf\":[{\"$ref\":\"#\"},{\"$ref\":\"#/definitions/schemaArray\"}],\"default\":true},\"maxItems\":{\"$ref\":\"#/definitions/nonNegativeInteger\"},\"minItems\":{\"$ref\":\"#/definitions/nonNegativeIntegerDefault0\"},\"uniqueItems\":{\"type\":\"boolean\",\"default\":false},\"contains\":{\"$ref\":\"#\"},\"maxProperties\":{\"$ref\":\"#/definitions/nonNegativeInteger\"},\"minProperties\":{\"$ref\":\"#/definitions/nonNegativeIntegerDefault0\"},\"required\":{\"$ref\":\"#/definitions/stringArray\"},\"additionalProperties\":{\"$ref\":\"#\"},\"definitions\":{\"type\":\"object\",\"additionalProperties\":{\"$ref\":\"#\"},\"default\":{}},\"properties\":{\"type\":\"object\",\"additionalProperties\":{\"$ref\":\"#\"},\"default\":{}},\"patternProperties\":{\"type\":\"object\",\"additionalProperties\":{\"$ref\":\"#\"},\"propertyNames\":{\"format\":\"regex\"},\"default\":{}},\"dependencies\":{\"type\":\"object\",\"additionalProperties\":{\"anyOf\":[{\"$ref\":\"#\"},{\"$ref\":\"#/definitions/stringArray\"}]}},\"propertyNames\":{\"$ref\":\"#\"},\"const\":true,\"enum\":{\"type\":\"array\",\"items\":true,\"minItems\":1,\"uniqueItems\":true},\"type\":{\"anyOf\":[{\"$ref\":\"#/definitions/simpleTypes\"},{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/simpleTypes\"},\"minItems\":1,\"uniqueItems\":true}]},\"format\":{\"type\":\"string\"},\"contentMediaType\":{\"type\":\"string\"},\"contentEncoding\":{\"type\":\"string\"},\"if\":{\"$ref\":\"#\"},\"then\":{\"$ref\":\"#\"},\"else\":{\"$ref\":\"#\"},\"allOf\":{\"$ref\":\"#/definitions/schemaArray\"},\"anyOf\":{\"$ref\":\"#/definitions/schemaArray\"},\"oneOf\":{\"$ref\":\"#/definitions/schemaArray\"},\"not\":{\"$ref\":\"#\"}},\"default\":true}");

/***/ }),

/***/ "../node_modules/decode-uri-component/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/decode-uri-component/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var token = '%[a-f0-9]{2}';
var singleMatcher = new RegExp(token, 'gi');
var multiMatcher = new RegExp('(' + token + ')+', 'gi');

function decodeComponents(components, split) {
	try {
		// Try to decode the entire string first
		return decodeURIComponent(components.join(''));
	} catch (err) {
		// Do nothing
	}

	if (components.length === 1) {
		return components;
	}

	split = split || 1;

	// Split the array in 2 parts
	var left = components.slice(0, split);
	var right = components.slice(split);

	return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
}

function decode(input) {
	try {
		return decodeURIComponent(input);
	} catch (err) {
		var tokens = input.match(singleMatcher);

		for (var i = 1; i < tokens.length; i++) {
			input = decodeComponents(tokens, i).join('');

			tokens = input.match(singleMatcher);
		}

		return input;
	}
}

function customDecodeURIComponent(input) {
	// Keep track of all the replacements and prefill the map with the `BOM`
	var replaceMap = {
		'%FE%FF': '\uFFFD\uFFFD',
		'%FF%FE': '\uFFFD\uFFFD'
	};

	var match = multiMatcher.exec(input);
	while (match) {
		try {
			// Decode as big chunks as possible
			replaceMap[match[0]] = decodeURIComponent(match[0]);
		} catch (err) {
			var result = decode(match[0]);

			if (result !== match[0]) {
				replaceMap[match[0]] = result;
			}
		}

		match = multiMatcher.exec(input);
	}

	// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else
	replaceMap['%C2'] = '\uFFFD';

	var entries = Object.keys(replaceMap);

	for (var i = 0; i < entries.length; i++) {
		// Replace all decoded components
		var key = entries[i];
		input = input.replace(new RegExp(key, 'g'), replaceMap[key]);
	}

	return input;
}

module.exports = function (encodedURI) {
	if (typeof encodedURI !== 'string') {
		throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');
	}

	try {
		encodedURI = encodedURI.replace(/\+/g, ' ');

		// Try the built in decoder first
		return decodeURIComponent(encodedURI);
	} catch (err) {
		// Fallback to a more advanced decoder
		return customDecodeURIComponent(encodedURI);
	}
};


/***/ }),

/***/ "../node_modules/dicomweb-client/build/dicomweb-client.es.js":
/*!*******************************************************************!*\
  !*** ../node_modules/dicomweb-client/build/dicomweb-client.es.js ***!
  \*******************************************************************/
/*! exports provided: api, utils, version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "api", function() { return api; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utils", function() { return utils; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/**
 * Converts a Uint8Array to a String.
 * @param {Uint8Array} array that should be converted
 * @param {Number} offset array offset in case only subset of array items should
                   be extracted (default: 0)
 * @param {Number} limit maximum number of array items that should be extracted
                   (defaults to length of array)
 * @returns {String}
 */
function uint8ArrayToString(arr) {
  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var limit = arguments.length > 2 ? arguments[2] : undefined;
  var itemLimit = limit || arr.length - offset;
  var str = "";

  for (var i = offset; i < offset + itemLimit; i++) {
    str += String.fromCharCode(arr[i]);
  }

  return str;
}
/**
 * Converts a String to a Uint8Array.
 * @param {String} str string that should be converted
 * @returns {Uint8Array}
 */


function stringToUint8Array(str) {
  var arr = new Uint8Array(str.length);

  for (var i = 0, j = str.length; i < j; i++) {
    arr[i] = str.charCodeAt(i);
  }

  return arr;
}
/**
 * Identifies the boundary in a multipart/related message header.
 * @param {String} header message header
 * @returns {String} boundary
 */


function identifyBoundary(header) {
  var parts = header.split("\r\n");

  for (var i = 0; i < parts.length; i++) {
    if (parts[i].substr(0, 2) === "--") {
      return parts[i];
    }
  }

  return null;
}
/**
 * Checks whether a given token is contained by a message at a given offset.
 * @param {Uint8Array} message message content
 * @param {Uint8Array} token substring that should be present
 * @param {Number} offset offset in message content from where search should start
 * @returns {Boolean} whether message contains token at offset
 */


function containsToken(message, token) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

  if (offset + token.length > message.length) {
    return false;
  }

  var index = offset;

  for (var i = 0; i < token.length; i++) {
    if (token[i] !== message[index]) {
      return false;
    }

    index += 1;
  }

  return true;
}
/**
 * Finds a given token in a message at a given offset.
 * @param {Uint8Array} message message content
 * @param {Uint8Array} token substring that should be found
 * @param {String} offset message body offset from where search should start
 * @returns {Boolean} whether message has a part at given offset or not
 */


function findToken(message, token) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
  var maxSearchLength = arguments.length > 3 ? arguments[3] : undefined;
  var searchLength = message.length;

  if (maxSearchLength) {
    searchLength = Math.min(offset + maxSearchLength, message.length);
  }

  for (var i = offset; i < searchLength; i++) {
    // If the first value of the message matches
    // the first value of the token, check if
    // this is the full token.
    if (message[i] === token[0]) {
      if (containsToken(message, token, i)) {
        return i;
      }
    }
  }

  return -1;
}
/**
 * Create a random GUID
 *
 * @return {string}
 */


function guid() {
  function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  }

  return "".concat(s4() + s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4()).concat(s4()).concat(s4());
}
/**
 * @typedef {Object} MultipartEncodedData
 * @property {ArrayBuffer} data The encoded Multipart Data
 * @property {String} boundary The boundary used to divide pieces of the encoded data
 */

/**
 * Encode one or more DICOM datasets into a single body so it can be
 * sent using the Multipart Content-Type.
 *
 * @param {ArrayBuffer[]} datasets Array containing each file to be encoded in the
                          multipart body, passed as ArrayBuffers.
 * @param {String} [boundary] Optional string to define a boundary between each part
                              of the multipart body. If this is not specified, a random
                              GUID will be generated.
 * @return {MultipartEncodedData} The Multipart encoded data returned as an Object. This
                                  contains both the data itself, and the boundary string
                                  used to divide it.
 */


function multipartEncode(datasets) {
  var boundary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : guid();
  var contentType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "application/dicom";
  var contentTypeString = "Content-Type: ".concat(contentType);
  var header = "\r\n--".concat(boundary, "\r\n").concat(contentTypeString, "\r\n\r\n");
  var footer = "\r\n--".concat(boundary, "--");
  var headerArray = stringToUint8Array(header);
  var footerArray = stringToUint8Array(footer);
  var headerLength = headerArray.length;
  var footerLength = footerArray.length;
  var length = 0; // Calculate the total length for the final array

  var contentArrays = datasets.map(function (datasetBuffer) {
    var contentArray = new Uint8Array(datasetBuffer);
    var contentLength = contentArray.length;
    length += headerLength + contentLength + footerLength;
    return contentArray;
  }); // Allocate the array

  var multipartArray = new Uint8Array(length); // Set the initial header

  multipartArray.set(headerArray, 0); // Write each dataset into the multipart array

  var position = 0;
  contentArrays.forEach(function (contentArray) {
    multipartArray.set(headerArray, position);
    multipartArray.set(contentArray, position + headerLength);
    position += headerLength + contentArray.length;
  });
  multipartArray.set(footerArray, position);
  return {
    data: multipartArray.buffer,
    boundary: boundary
  };
}
/**
 * Decode a Multipart encoded ArrayBuffer and return the components as an Array.
 *
 * @param {ArrayBuffer} response Data encoded as a 'multipart/related' message
 * @returns {Array} The content
 */


function multipartDecode(response) {
  var message = new Uint8Array(response);
  /* Set a maximum length to search for the header boundaries, otherwise
       findToken can run for a long time
    */

  var maxSearchLength = 1000; // First look for the multipart mime header

  var separator = stringToUint8Array("\r\n\r\n");
  var headerIndex = findToken(message, separator, 0, maxSearchLength);

  if (headerIndex === -1) {
    throw new Error("Response message has no multipart mime header");
  }

  var header = uint8ArrayToString(message, 0, headerIndex);
  var boundaryString = identifyBoundary(header);

  if (!boundaryString) {
    throw new Error("Header of response message does not specify boundary");
  }

  var boundary = stringToUint8Array(boundaryString);
  var boundaryLength = boundary.length;
  var components = [];
  var offset = boundaryLength; // Loop until we cannot find any more boundaries

  var boundaryIndex;

  while (boundaryIndex !== -1) {
    // Search for the next boundary in the message, starting
    // from the current offset position
    boundaryIndex = findToken(message, boundary, offset); // If no further boundaries are found, stop here.

    if (boundaryIndex === -1) {
      break;
    }

    var headerTokenIndex = findToken(message, separator, offset, maxSearchLength);

    if (headerTokenIndex === -1) {
      throw new Error("Response message part has no mime header");
    }

    offset = headerTokenIndex + separator.length; // Extract data from response message, excluding "\r\n"

    var spacingLength = 2;
    var data = response.slice(offset, boundaryIndex - spacingLength); // Add the data to the array of results

    components.push(data); // Move the offset to the end of the current section,
    // plus the identified boundary

    offset = boundaryIndex + boundaryLength;
  }

  return components;
}

function isObject(obj) {
  return _typeof(obj) === "object" && obj !== null;
}

function isEmptyObject(obj) {
  return Object.keys(obj).length === 0 && obj.constructor === Object;
}

var getFirstResult = function getFirstResult(result) {
  return result[0];
};

var getFirstResultIfLengthGtOne = function getFirstResultIfLengthGtOne(result) {
  if (result.length > 1) {
    return result;
  }

  return result[0];
};

var MEDIATYPES = {
  DICOM: "application/dicom",
  DICOM_JSON: "application/dicom+json",
  OCTET_STREAM: "application/octet-stream",
  PDF: "application/pdf",
  JPEG: "image/jpeg",
  PNG: "image/png"
};
/**
 * Class for interacting with DICOMweb RESTful services.
 */

var DICOMwebClient =
/*#__PURE__*/
function () {
  /**
   * @constructor
   * @param {Object} options (choices: "url", "username", "password", "headers")
   */
  function DICOMwebClient(options) {
    _classCallCheck(this, DICOMwebClient);

    this.baseURL = options.url;

    if (!this.baseURL) {
      console.error("no DICOMweb base url provided - calls will fail");
    }

    if ("username" in options) {
      this.username = options.username;

      if (!("password" in options)) {
        console.error("no password provided to authenticate with DICOMweb service");
      }

      this.password = options.password;
    }

    if ("qidoURLPrefix" in options) {
      console.log("use URL prefix for QIDO-RS: ".concat(options.qidoURLPrefix));
      this.qidoURL = "".concat(this.baseURL, "/").concat(options.qidoURLPrefix);
    } else {
      this.qidoURL = this.baseURL;
    }

    if ("wadoURLPrefix" in options) {
      console.log("use URL prefix for WADO-RS: ".concat(options.wadoURLPrefix));
      this.wadoURL = "".concat(this.baseURL, "/").concat(options.wadoURLPrefix);
    } else {
      this.wadoURL = this.baseURL;
    }

    if ("stowURLPrefix" in options) {
      console.log("use URL prefix for STOW-RS: ".concat(options.stowURLPrefix));
      this.stowURL = "".concat(this.baseURL, "/").concat(options.stowURLPrefix);
    } else {
      this.stowURL = this.baseURL;
    }

    this.headers = options.headers || {};
  }

  _createClass(DICOMwebClient, [{
    key: "_httpRequest",
    value: function _httpRequest(url, method, headers) {
      var _this = this;

      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      return new Promise(function (resolve, reject) {
        var request = new XMLHttpRequest();
        request.open(method, url, true);

        if ("responseType" in options) {
          request.responseType = options.responseType;
        }

        if (_typeof(headers) === "object") {
          Object.keys(headers).forEach(function (key) {
            request.setRequestHeader(key, headers[key]);
          });
        } // now add custom headers from the user
        // (e.g. access tokens)


        var userHeaders = _this.headers;
        Object.keys(userHeaders).forEach(function (key) {
          request.setRequestHeader(key, userHeaders[key]);
        }); // Event triggered when upload starts

        request.onloadstart = function onloadstart() {// console.log('upload started: ', url)
        }; // Event triggered when upload ends


        request.onloadend = function onloadend() {// console.log('upload finished')
        }; // Handle response message


        request.onreadystatechange = function onreadystatechange() {
          if (request.readyState === 4) {
            if (request.status === 200) {
              resolve(request.response);
            } else if (request.status === 202) {
              console.warn("some resources already existed: ", request);
              resolve(request.response);
            } else if (request.status === 204) {
              console.warn("empty response for request: ", request);
              resolve([]);
            } else {
              console.error("request failed: ", request);
              var error = new Error("request failed");
              error.request = request;
              error.response = request.response;
              error.status = request.status;
              console.error(error);
              console.error(error.response);
              reject(error);
            }
          }
        }; // Event triggered while download progresses


        if ("progressCallback" in options) {
          if (typeof options.progressCallback === "function") {
            request.onprogress = options.progressCallback;
          }
        } // request.onprogress = function (event) {
        //   const loaded = progress.loaded;
        //   let total;
        //   let percentComplete;
        //   if (progress.lengthComputable) {
        //     total = progress.total;
        //     percentComplete = Math.round((loaded / total) * 100);
        //   j
        //   // console.log('download progress: ', percentComplete, ' %');
        //   return(percentComplete);
        // };


        if ("data" in options) {
          request.send(options.data);
        } else {
          request.send();
        }
      });
    }
  }, {
    key: "_httpGet",
    value: function _httpGet(url, headers, responseType, progressCallback) {
      return this._httpRequest(url, "get", headers, {
        responseType: responseType,
        progressCallback: progressCallback
      });
    }
  }, {
    key: "_httpGetApplicationJson",
    value: function _httpGetApplicationJson(url) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var progressCallback = arguments.length > 2 ? arguments[2] : undefined;
      var urlWithQueryParams = url;

      if (_typeof(params) === "object") {
        if (!isEmptyObject(params)) {
          urlWithQueryParams += DICOMwebClient._parseQueryParameters(params);
        }
      }

      var headers = {
        Accept: MEDIATYPES.DICOM_JSON
      };
      var responseType = "json";
      return this._httpGet(urlWithQueryParams, headers, responseType, progressCallback);
    }
    /**
     * Performs an HTTP GET request that accepts a message with
     "application/pdf" media type.
     * @param {String} url
     * @param {Object[]} mediaTypes
     * @param {Object} params
     * @param {Function} progressCallback
     * @return {*}
     * @private
     */

  }, {
    key: "_httpGetApplicationPdf",
    value: function _httpGetApplicationPdf(url) {
      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var progressCallback = arguments.length > 2 ? arguments[2] : undefined;
      var urlWithQueryParams = url;

      if (_typeof(params) === "object") {
        if (!isEmptyObject(params)) {
          urlWithQueryParams += DICOMwebClient._parseQueryParameters(params);
        }
      }

      var headers = {
        Accept: MEDIATYPES.PDF
      };
      var responseType = "json";
      return this._httpGet(urlWithQueryParams, headers, responseType, progressCallback);
    }
    /**
     * Performs an HTTP GET request that accepts a message with an image
     media type.
     *
     * @param {String} url
     * @param {Object[]} mediaTypes
     * @param {Object} params
     * @param {Function} progressCallback
     * @return {*}
     * @private
     */

  }, {
    key: "_httpGetImage",
    value: function _httpGetImage(url, mediaTypes) {
      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var progressCallback = arguments.length > 3 ? arguments[3] : undefined;
      var urlWithQueryParams = url;

      if (_typeof(params) === "object") {
        if (!isEmptyObject(params)) {
          urlWithQueryParams += DICOMwebClient._parseQueryParameters(params);
        }
      }

      var supportedMediaTypes = ["image/", "image/*", "image/jpeg", "image/jp2", "image/gif", "image/png"];

      var acceptHeaderFieldValue = DICOMwebClient._buildAcceptHeaderFieldValue(mediaTypes, supportedMediaTypes);

      var headers = {
        Accept: acceptHeaderFieldValue
      };
      var responseType = "arraybuffer";
      return this._httpGet(urlWithQueryParams, headers, responseType, progressCallback);
    }
    /**
     * Performs an HTTP GET request that accepts a message with a text
     media type.
     *
     * @param {String} url
     * @param {Object[]} mediaTypes
     * @param {Object} params
     * @param {Function} progressCallback
     * @return {*}
     * @private
     */

  }, {
    key: "_httpGetText",
    value: function _httpGetText(url, mediaTypes) {
      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var progressCallback = arguments.length > 3 ? arguments[3] : undefined;
      var urlWithQueryParams = url;

      if (_typeof(params) === "object") {
        if (!isEmptyObject(params)) {
          urlWithQueryParams += DICOMwebClient._parseQueryParameters(params);
        }
      }

      var supportedMediaTypes = ["text/", "text/*", "text/html", "text/plain", "text/rtf", "text/xml"];

      var acceptHeaderFieldValue = DICOMwebClient._buildAcceptHeaderFieldValue(mediaTypes, supportedMediaTypes);

      var headers = {
        Accept: acceptHeaderFieldValue
      };
      var responseType = "arraybuffer";
      return this._httpGet(urlWithQueryParams, headers, responseType, progressCallback);
    }
    /**
     * Performs an HTTP GET request that accepts a message with a video
     media type.
     *
     * @param {String} url
     * @param {Object[]} mediaTypes
     * @param {Object} params
     * @param {Function} progressCallback
     * @return {*}
     * @private
     */

  }, {
    key: "_httpGetVideo",
    value: function _httpGetVideo(url, mediaTypes) {
      var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var progressCallback = arguments.length > 3 ? arguments[3] : undefined;
      var urlWithQueryParams = url;

      if (_typeof(params) === "object") {
        if (!isEmptyObject(params)) {
          urlWithQueryParams += DICOMwebClient._parseQueryParameters(params);
        }
      }

      var supportedMediaTypes = ["video/", "video/*", "video/mpeg", "video/mp4", "video/H265"];

      var acceptHeaderFieldValue = DICOMwebClient._buildAcceptHeaderFieldValue(mediaTypes, supportedMediaTypes);

      var headers = {
        Accept: acceptHeaderFieldValue
      };
      var responseType = "arraybuffer";
      return this._httpGet(urlWithQueryParams, headers, responseType, progressCallback);
    }
    /**
     * Asserts that a given media type is valid.
     *
     * @params {String} mediaType media type
     */

  }, {
    key: "_httpGetMultipartImage",

    /**
     * Performs an HTTP GET request that accepts a multipart message with an image media type.
     *
     * @param {String} url unique resource locator
     * @param {Object[]} mediaTypes acceptable media types and optionally the UIDs of the
     corresponding transfer syntaxes
     * @param {Array} byteRange start and end of byte range
     * @param {Object} params additional HTTP GET query parameters
     * @param {Boolean} rendered whether resource should be requested using rendered media types
     * @param {Function} progressCallback
     * @private
     * @returns {Array} content of HTTP message body parts
     */
    value: function _httpGetMultipartImage(url, mediaTypes, byteRange, params) {
      var rendered = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
      var progressCallback = arguments.length > 5 ? arguments[5] : undefined;
      var headers = {};
      var supportedMediaTypes;

      if (rendered) {
        supportedMediaTypes = ["image/jpeg", "image/gif", "image/png", "image/jp2"];
      } else {
        supportedMediaTypes = {
          "1.2.840.10008.1.2.5": ["image/x-dicom-rle"],
          "1.2.840.10008.1.2.4.50": ["image/jpeg"],
          "1.2.840.10008.1.2.4.51": ["image/jpeg"],
          "1.2.840.10008.1.2.4.57": ["image/jpeg"],
          "1.2.840.10008.1.2.4.70": ["image/jpeg"],
          "1.2.840.10008.1.2.4.80": ["image/x-jls", "image/jls"],
          "1.2.840.10008.1.2.4.81": ["image/x-jls", "image/jls"],
          "1.2.840.10008.1.2.4.90": ["image/jp2"],
          "1.2.840.10008.1.2.4.91": ["image/jp2"],
          "1.2.840.10008.1.2.4.92": ["image/jpx"],
          "1.2.840.10008.1.2.4.93": ["image/jpx"]
        };

        if (byteRange) {
          headers.Range = DICOMwebClient._buildRangeHeaderFieldValue(byteRange);
        }
      }

      headers.Accept = DICOMwebClient._buildMultipartAcceptHeaderFieldValue(mediaTypes, supportedMediaTypes);
      return this._httpGet(url, headers, "arraybuffer", progressCallback).then(multipartDecode);
    }
    /**
     * Performs an HTTP GET request that accepts a multipart message with a video media type.
     *
     * @param {String} url unique resource locator
     * @param {Object[]} mediaTypes acceptable media types and optionally the UIDs of the
     corresponding transfer syntaxes
     * @param {Array} byteRange start and end of byte range
     * @param {Object} params additional HTTP GET query parameters
     * @param {Boolean} rendered whether resource should be requested using rendered media types
     * @param {Function} progressCallback
     * @private
     * @returns {Array} content of HTTP message body parts
     */

  }, {
    key: "_httpGetMultipartVideo",
    value: function _httpGetMultipartVideo(url, mediaTypes, byteRange, params) {
      var rendered = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
      var progressCallback = arguments.length > 5 ? arguments[5] : undefined;
      var headers = {};
      var supportedMediaTypes;

      if (rendered) {
        supportedMediaTypes = ["video/", "video/*", "video/mpeg2", "video/mp4", "video/H265"];
      } else {
        supportedMediaTypes = {
          "1.2.840.10008.1.2.4.100": ["video/mpeg2"],
          "1.2.840.10008.1.2.4.101": ["video/mpeg2"],
          "1.2.840.10008.1.2.4.102": ["video/mp4"],
          "1.2.840.10008.1.2.4.103": ["video/mp4"],
          "1.2.840.10008.1.2.4.104": ["video/mp4"],
          "1.2.840.10008.1.2.4.105": ["video/mp4"],
          "1.2.840.10008.1.2.4.106": ["video/mp4"]
        };

        if (byteRange) {
          headers.Range = DICOMwebClient._buildRangeHeaderFieldValue(byteRange);
        }
      }

      headers.Accept = DICOMwebClient._buildMultipartAcceptHeaderFieldValue(mediaTypes, supportedMediaTypes);
      return this._httpGet(url, headers, "arraybuffer", progressCallback).then(multipartDecode);
    }
    /**
     * Performs a HTTP GET request that accepts a multipart message with "application/dicom" media type
     *
     * @param {String} url unique resource locator
     * @param {Object[]} mediaTypes acceptable media types and optionally the UIDs of the
     corresponding transfer syntaxes
     * @param {Object} params additional HTTP GET query parameters
     * @param {Function} progressCallback
     * @private
     * @returns {Array} content of HTTP message body parts
     */

  }, {
    key: "_httpGetMultipartApplicationDicom",
    value: function _httpGetMultipartApplicationDicom(url, mediaTypes, params, progressCallback) {
      var headers = {};
      var defaultMediaType = "application/dicom";
      var supportedMediaTypes = {
        "1.2.840.10008.1.2.1": [defaultMediaType],
        "1.2.840.10008.1.2.5": [defaultMediaType],
        "1.2.840.10008.1.2.4.50": [defaultMediaType],
        "1.2.840.10008.1.2.4.51": [defaultMediaType],
        "1.2.840.10008.1.2.4.57": [defaultMediaType],
        "1.2.840.10008.1.2.4.70": [defaultMediaType],
        "1.2.840.10008.1.2.4.80": [defaultMediaType],
        "1.2.840.10008.1.2.4.81": [defaultMediaType],
        "1.2.840.10008.1.2.4.90": [defaultMediaType],
        "1.2.840.10008.1.2.4.91": [defaultMediaType],
        "1.2.840.10008.1.2.4.92": [defaultMediaType],
        "1.2.840.10008.1.2.4.93": [defaultMediaType],
        "1.2.840.10008.1.2.4.100": [defaultMediaType],
        "1.2.840.10008.1.2.4.101": [defaultMediaType],
        "1.2.840.10008.1.2.4.102": [defaultMediaType],
        "1.2.840.10008.1.2.4.103": [defaultMediaType],
        "1.2.840.10008.1.2.4.104": [defaultMediaType],
        "1.2.840.10008.1.2.4.105": [defaultMediaType],
        "1.2.840.10008.1.2.4.106": [defaultMediaType]
      };
      var acceptableMediaTypes = mediaTypes;

      if (!mediaTypes) {
        acceptableMediaTypes = [{
          mediaType: defaultMediaType
        }];
      }

      headers.Accept = DICOMwebClient._buildMultipartAcceptHeaderFieldValue(acceptableMediaTypes, supportedMediaTypes);
      return this._httpGet(url, headers, "arraybuffer", progressCallback).then(multipartDecode);
    }
    /**
     * Performs a HTTP GET request that accepts a multipart message with "application/octet-stream" media type
     *
     * @param {String} url unique resource locator
     * @param {Object[]} mediaTypes acceptable media types and optionally the UIDs of the
     corresponding transfer syntaxes
     * @param {Array} byteRange start and end of byte range
     * @param {Object} params additional HTTP GET query parameters
     * @param {Function} progressCallback
     * @private
     * @returns {Array} content of HTTP message body parts
     */

  }, {
    key: "_httpGetMultipartApplicationOctetStream",
    value: function _httpGetMultipartApplicationOctetStream(url, mediaTypes, byteRange, params, progressCallback) {
      var headers = {};
      var defaultMediaType = "application/octet-stream";
      var supportedMediaTypes = {
        "1.2.840.10008.1.2.1": [defaultMediaType]
      };
      var acceptableMediaTypes = mediaTypes;

      if (!mediaTypes) {
        acceptableMediaTypes = [{
          mediaType: defaultMediaType
        }];
      }

      if (byteRange) {
        headers.Range = DICOMwebClient._buildRangeHeaderFieldValue(byteRange);
      }

      headers.Accept = DICOMwebClient._buildMultipartAcceptHeaderFieldValue(acceptableMediaTypes, supportedMediaTypes);
      return this._httpGet(url, headers, "arraybuffer", progressCallback).then(multipartDecode);
    }
  }, {
    key: "_httpPost",
    value: function _httpPost(url, headers, data, progressCallback) {
      return this._httpRequest(url, "post", headers, {
        data: data,
        progressCallback: progressCallback
      });
    }
  }, {
    key: "_httpPostApplicationJson",
    value: function _httpPostApplicationJson(url, data, progressCallback) {
      var headers = {
        "Content-Type": MEDIATYPES.DICOM_JSON
      };
      return this._httpPost(url, headers, data, progressCallback);
    }
    /**
     * Parses media type and extracts its type and subtype.
     *
     * @param mediaType e.g. image/jpeg
     * @private
     */

  }, {
    key: "searchForStudies",

    /**
     * Searches for DICOM studies.
     * @param {Object} options options object
     * @return {Array} study representations (http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html#table_6.7.1-2)
     */
    value: function searchForStudies() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      console.log("search for studies");
      var url = "".concat(this.qidoURL, "/studies");

      if ("queryParams" in options) {
        url += DICOMwebClient._parseQueryParameters(options.queryParams);
      }

      return this._httpGetApplicationJson(url);
    }
    /**
     * Retrieves metadata for a DICOM study.
     * @param {Object} options options object
     * @returns {Array} metadata elements in DICOM JSON format for each instance
                        belonging to the study
     */

  }, {
    key: "retrieveStudyMetadata",
    value: function retrieveStudyMetadata(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required for retrieval of study metadata");
      }

      console.log("retrieve metadata of study ".concat(options.studyInstanceUID));
      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/metadata");
      return this._httpGetApplicationJson(url);
    }
    /**
     * Searches for DICOM series.
     * @param {Object} options options object
     * @returns {Array} series representations (http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html#table_6.7.1-2a)
     */

  }, {
    key: "searchForSeries",
    value: function searchForSeries() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var url = this.qidoURL;

      if ("studyInstanceUID" in options) {
        console.log("search series of study ".concat(options.studyInstanceUID));
        url += "/studies/".concat(options.studyInstanceUID);
      }

      url += "/series";

      if ("queryParams" in options) {
        url += DICOMwebClient._parseQueryParameters(options.queryParams);
      }

      return this._httpGetApplicationJson(url);
    }
    /**
     * Retrieves metadata for a DICOM series.
     * @param {Object} options options object
     * @returns {Array} metadata elements in DICOM JSON format for each instance
                        belonging to the series
     */

  }, {
    key: "retrieveSeriesMetadata",
    value: function retrieveSeriesMetadata(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required for retrieval of series metadata");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required for retrieval of series metadata");
      }

      console.log("retrieve metadata of series ".concat(options.seriesInstanceUID));
      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/series/").concat(options.seriesInstanceUID, "/metadata");
      return this._httpGetApplicationJson(url);
    }
    /**
     * Searches for DICOM instances.
     * @param {Object} options options object
     * @returns {Array} instance representations (http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.7.html#table_6.7.1-2b)
     */

  }, {
    key: "searchForInstances",
    value: function searchForInstances() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var url = this.qidoURL;

      if ("studyInstanceUID" in options) {
        url += "/studies/".concat(options.studyInstanceUID);

        if ("seriesInstanceUID" in options) {
          console.log("search for instances of series ".concat(options.seriesInstanceUID));
          url += "/series/".concat(options.seriesInstanceUID);
        } else {
          console.log("search for instances of study ".concat(options.studyInstanceUID));
        }
      } else {
        console.log("search for instances");
      }

      url += "/instances";

      if ("queryParams" in options) {
        url += DICOMwebClient._parseQueryParameters(options.queryParams);
      }

      return this._httpGetApplicationJson(url);
    }
    /** Returns a WADO-URI URL for an instance
     * @param {Object} options options object
     * @returns {String} WADO-URI URL
     */

  }, {
    key: "buildInstanceWadoURIUrl",
    value: function buildInstanceWadoURIUrl(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required.");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required.");
      }

      if (!("sopInstanceUID" in options)) {
        throw new Error("SOP Instance UID is required.");
      }

      var contentType = options.contentType || MEDIATYPES.DICOM;
      var transferSyntax = options.transferSyntax || "*";
      var params = [];
      params.push("requestType=WADO");
      params.push("studyUID=".concat(options.studyInstanceUID));
      params.push("seriesUID=".concat(options.seriesInstanceUID));
      params.push("objectUID=".concat(options.sopInstanceUID));
      params.push("contentType=".concat(contentType));
      params.push("transferSyntax=".concat(transferSyntax));
      var paramString = params.join("&");
      return "".concat(this.wadoURL, "?").concat(paramString);
    }
    /**
     * Retrieves metadata for a DICOM instance.
     *
     * @param {Object} options object
     * @returns {Object} metadata elements in DICOM JSON format
     */

  }, {
    key: "retrieveInstanceMetadata",
    value: function retrieveInstanceMetadata(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required for retrieval of instance metadata");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required for retrieval of instance metadata");
      }

      if (!("sopInstanceUID" in options)) {
        throw new Error("SOP Instance UID is required for retrieval of instance metadata");
      }

      console.log("retrieve metadata of instance ".concat(options.sopInstanceUID));
      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/series/").concat(options.seriesInstanceUID, "/instances/").concat(options.sopInstanceUID, "/metadata");
      return this._httpGetApplicationJson(url);
    }
    /**
     * Retrieves frames for a DICOM instance.
     * @param {Object} options options object
     * @returns {Array} frame items as byte arrays of the pixel data element
     */

  }, {
    key: "retrieveInstanceFrames",
    value: function retrieveInstanceFrames(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required for retrieval of instance frames");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required for retrieval of instance frames");
      }

      if (!("sopInstanceUID" in options)) {
        throw new Error("SOP Instance UID is required for retrieval of instance frames");
      }

      if (!("frameNumbers" in options)) {
        throw new Error("frame numbers are required for retrieval of instance frames");
      }

      console.log("retrieve frames ".concat(options.frameNumbers.toString(), " of instance ").concat(options.sopInstanceUID));
      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/series/").concat(options.seriesInstanceUID, "/instances/").concat(options.sopInstanceUID, "/frames/").concat(options.frameNumbers.toString());
      var mediaTypes = options.mediaTypes;

      if (!mediaTypes) {
        return this._httpGetMultipartApplicationOctetStream(url);
      }

      var commonMediaType = DICOMwebClient._getCommonMediaType(mediaTypes);

      if (commonMediaType === MEDIATYPES.OCTET_STREAM) {
        return this._httpGetMultipartApplicationOctetStream(url, mediaTypes);
      } else if (commonMediaType.startsWith("image")) {
        return this._httpGetMultipartImage(url, mediaTypes);
      } else if (commonMediaType.startsWith("video")) {
        return this._httpGetMultipartVideo(url, mediaTypes);
      }

      throw new Error("Media type ".concat(commonMediaType, " is not supported for retrieval of frames."));
    }
    /**
     * Retrieves an individual, server-side rendered DICOM instance.
     *
     * @param {Object} options options object
     * @returns {Array} frame items as byte arrays of the pixel data element
     */

  }, {
    key: "retrieveInstanceRendered",
    value: function retrieveInstanceRendered(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required for retrieval of rendered instance");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required for retrieval of rendered instance");
      }

      if (!("sopInstanceUID" in options)) {
        throw new Error("SOP Instance UID is required for retrieval of rendered instance");
      }

      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/series/").concat(options.seriesInstanceUID, "/instances/").concat(options.sopInstanceUID, "/rendered");
      var mediaTypes = options.mediaTypes,
          params = options.params;
      var headers = {};

      if (!mediaTypes) {
        var responseType = "arraybuffer";
        return this._httpGet(url, headers, responseType);
      }

      var commonMediaType = DICOMwebClient._getCommonMediaType(mediaTypes);

      if (commonMediaType.startsWith("image")) {
        return this._httpGetImage(url, mediaTypes, params);
      } else if (commonMediaType.startsWith("video")) {
        return this._httpGetVideo(url, mediaTypes, params);
      } else if (commonMediaType.startsWith("text")) {
        return this._httpGetText(url, mediaTypes, params);
      } else if (commonMediaType === MEDIATYPES.PDF) {
        return this._httpGetApplicationPdf(url, params);
      }

      throw new Error("Media type ".concat(commonMediaType, " is not supported for retrieval of rendered instance."));
    }
    /**
     * Retrieves rendered frames for a DICOM instance.
     * @param {Object} options options object
     * @returns {Array} frame items as byte arrays of the pixel data element
     */

  }, {
    key: "retrieveInstanceFramesRendered",
    value: function retrieveInstanceFramesRendered(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required for retrieval of rendered instance frames");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required for retrieval of rendered instance frames");
      }

      if (!("sopInstanceUID" in options)) {
        throw new Error("SOP Instance UID is required for retrieval of rendered instance frames");
      }

      if (!("frameNumbers" in options)) {
        throw new Error("frame numbers are required for retrieval of rendered instance frames");
      }

      console.debug("retrieve rendered frames ".concat(options.frameNumbers.toString(), " of instance ").concat(options.sopInstanceUID));
      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/series/").concat(options.seriesInstanceUID, "/instances/").concat(options.sopInstanceUID, "/frames/").concat(options.frameNumbers.toString(), "/rendered");
      var mediaTypes = options.mediaTypes;
      var headers = {};

      if (!mediaTypes) {
        var responseType = "arraybuffer";
        return this._httpGet(url, headers, responseType);
      }

      var commonMediaType = DICOMwebClient._getCommonMediaType(mediaTypes);

      if (commonMediaType.startsWith("image")) {
        return this._httpGetImage(url, mediaTypes);
      } else if (commonMediaType.startsWith("video")) {
        return this._httpGetVideo(url, mediaTypes);
      }

      throw new Error("Media type ".concat(commonMediaType, " is not supported for retrieval of rendered frame."));
    }
    /**
     * Retrieves a DICOM instance.
     * @param {Object} options options object
     * @returns {ArrayBuffer} DICOM Part 10 file as Arraybuffer
     */

  }, {
    key: "retrieveInstance",
    value: function retrieveInstance(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required");
      }

      if (!("sopInstanceUID" in options)) {
        throw new Error("SOP Instance UID is required");
      }

      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/series/").concat(options.seriesInstanceUID, "/instances/").concat(options.sopInstanceUID);
      var mediaTypes = options.mediaTypes;

      if (!mediaTypes) {
        return this._httpGetMultipartApplicationDicom(url).then(getFirstResult);
      }

      var commonMediaType = DICOMwebClient._getCommonMediaType(mediaTypes);

      if (commonMediaType === MEDIATYPES.DICOM) {
        return this._httpGetMultipartApplicationDicom(url, mediaTypes).then(getFirstResult);
      } else if (commonMediaType === MEDIATYPES.OCTET_STREAM) {
        return this._httpGetMultipartApplicationOctetStream(url, mediaTypes).then(getFirstResult);
      } else if (commonMediaType.startsWith("image")) {
        return this._httpGetMultipartImage(url, mediaTypes).then(getFirstResultIfLengthGtOne);
      } else if (commonMediaType.startsWith("video")) {
        return this._httpGetMultipartVideo(url, mediaTypes).then(getFirstResultIfLengthGtOne);
      }

      throw new Error("Media type ".concat(commonMediaType, " is not supported for retrieval of instance."));
    }
    /**
     * Retrieves a set of DICOM instance for a series.
     * @param {Object} options options object
     * @returns {ArrayBuffer[]} Array of DICOM Part 10 files as Arraybuffers
     */

  }, {
    key: "retrieveSeries",
    value: function retrieveSeries(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required");
      }

      if (!("seriesInstanceUID" in options)) {
        throw new Error("Series Instance UID is required");
      }

      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID, "/series/").concat(options.seriesInstanceUID);
      var mediaTypes = options.mediaTypes;

      if (!mediaTypes) {
        return this._httpGetMultipartApplicationDicom(url);
      }

      var commonMediaType = DICOMwebClient._getCommonMediaType(mediaTypes);

      if (commonMediaType === MEDIATYPES.DICOM) {
        return this._httpGetMultipartApplicationDicom(url, mediaTypes);
      } else if (commonMediaType === MEDIATYPES.OCTET_STREAM) {
        return this._httpGetMultipartApplicationOctetStream(url, mediaTypes);
      } else if (commonMediaType.startsWith("image")) {
        return this._httpGetMultipartImage(url, mediaTypes);
      } else if (commonMediaType.startsWith("video")) {
        return this._httpGetMultipartVideo(url, mediaTypes);
      }

      throw new Error("Media type ".concat(commonMediaType, " is not supported for retrieval of series."));
    }
    /**
     * Retrieves a set of DICOM instance for a study.
     * @param {Object} options options object
     * @returns {ArrayBuffer[]} Array of DICOM Part 10 files as Arraybuffers
     */

  }, {
    key: "retrieveStudy",
    value: function retrieveStudy(options) {
      if (!("studyInstanceUID" in options)) {
        throw new Error("Study Instance UID is required");
      }

      var url = "".concat(this.wadoURL, "/studies/").concat(options.studyInstanceUID);
      var mediaTypes = options.mediaTypes;

      if (!mediaTypes) {
        return this._httpGetMultipartApplicationDicom(url);
      }

      var commonMediaType = DICOMwebClient._getCommonMediaType(mediaTypes);

      if (commonMediaType === MEDIATYPES.DICOM) {
        return this._httpGetMultipartApplicationDicom(url, mediaTypes);
      } else if (commonMediaType === MEDIATYPES.OCTET_STREAM) {
        return this._httpGetMultipartApplicationOctetStream(url, mediaTypes);
      } else if (commonMediaType.startsWith("image")) {
        return this._httpGetMultipartImage(url, mediaTypes);
      } else if (commonMediaType.startsWith("video")) {
        return this._httpGetMultipartVideo(url, mediaTypes);
      }

      throw new Error("Media type ".concat(commonMediaType, " is not supported for retrieval of study."));
    }
    /**
     * Retrieves and parses BulkData from a BulkDataURI location.
     * Decodes the multipart encoded data and returns the resulting data
     * as an ArrayBuffer.
     *
     * See http://dicom.nema.org/medical/dicom/current/output/chtml/part18/sect_6.5.5.html
     *
     * @param {Object} options options object
     * @return {Promise}
     */

  }, {
    key: "retrieveBulkData",
    value: function retrieveBulkData(options) {
      if (!("BulkDataURI" in options)) {
        throw new Error("BulkDataURI is required.");
      }

      var url = options.BulkDataURI;
      var mediaTypes = options.mediaTypes,
          byteRange = options.byteRange;

      if (!mediaTypes) {
        return this._httpGetMultipartApplicationOctetStream(url, mediaTypes, byteRange);
      }

      var commonMediaType = DICOMwebClient._getCommonMediaType(mediaTypes);

      if (commonMediaType === MEDIATYPES.OCTET_STREAM) {
        return this._httpGetMultipartApplicationOctetStream(url, mediaTypes, byteRange);
      } else if (commonMediaType.startsWith("image")) {
        return this._httpGetMultipartImage(url, mediaTypes, byteRange);
      }

      throw new Error("Media type ".concat(commonMediaType, " is not supported for retrieval of bulk data."));
    }
    /**
     * Stores DICOM instances.
     *
     * @param {Object} options options object
     */

  }, {
    key: "storeInstances",
    value: function storeInstances(options) {
      if (!("datasets" in options)) {
        throw new Error("datasets are required for storing");
      }

      var url = "".concat(this.stowURL, "/studies");

      if ("studyInstanceUID" in options) {
        url += "/".concat(options.studyInstanceUID);
      }

      var _multipartEncode = multipartEncode(options.datasets),
          data = _multipartEncode.data,
          boundary = _multipartEncode.boundary;

      var headers = {
        "Content-Type": "multipart/related; type=application/dicom; boundary=".concat(boundary)
      };
      return this._httpPost(url, headers, data, options.progressCallback);
    }
  }], [{
    key: "_parseQueryParameters",
    value: function _parseQueryParameters() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var queryString = "?";
      Object.keys(params).forEach(function (key, index) {
        if (index !== 0) {
          queryString += "&";
        }

        queryString += "".concat(key, "=").concat(encodeURIComponent(params[key]));
      });
      return queryString;
    }
  }, {
    key: "_assertMediaTypeIsValid",
    value: function _assertMediaTypeIsValid(mediaType) {
      if (!mediaType) {
        throw new Error("Not a valid media type: ".concat(mediaType));
      }

      var sepIndex = mediaType.indexOf("/");

      if (sepIndex === -1) {
        throw new Error("Not a valid media type: ".concat(mediaType));
      }

      var mediaTypeType = mediaType.slice(0, sepIndex);
      var types = ["application", "image", "text", "video"];

      if (!types.includes(mediaTypeType)) {
        throw new Error("Not a valid media type: ".concat(mediaType));
      }

      if (mediaType.slice(sepIndex + 1).includes("/")) {
        throw new Error("Not a valid media type: ".concat(mediaType));
      }
    }
  }, {
    key: "_parseMediaType",
    value: function _parseMediaType(mediaType) {
      DICOMwebClient._assertMediaTypeIsValid(mediaType);

      return mediaType.split("/");
    }
    /**
     * Builds an accept header field value for HTTP GET request messages.
     *
     * @param {Object[]} mediaTypes Acceptable media types
     * @param {Object[]} supportedMediaTypes Supported media types
     * @return {*}
     * @private
     */

  }, {
    key: "_buildAcceptHeaderFieldValue",
    value: function _buildAcceptHeaderFieldValue(mediaTypes, supportedMediaTypes) {
      if (!Array.isArray(mediaTypes)) {
        throw new Error("Acceptable media types must be provided as an Array");
      }

      var fieldValueParts = mediaTypes.map(function (item) {
        var mediaType = item.mediaType;

        DICOMwebClient._assertMediaTypeIsValid(mediaType);

        if (!supportedMediaTypes.includes(mediaType)) {
          throw new Error("Media type ".concat(mediaType, " is not supported for requested resource"));
        }

        return mediaType;
      });
      return fieldValueParts.join(", ");
    }
    /**
       * Builds an accept header field value for HTTP GET multipart request
       messages.
       *
       * @param {Object[]} mediaTypes Acceptable media types
       * @param {Object[]} supportedMediaTypes Supported media types
       * @private
       */

  }, {
    key: "_buildMultipartAcceptHeaderFieldValue",
    value: function _buildMultipartAcceptHeaderFieldValue(mediaTypes, supportedMediaTypes) {
      if (!Array.isArray(mediaTypes)) {
        throw new Error("Acceptable media types must be provided as an Array");
      }

      if (!Array.isArray(supportedMediaTypes) && !isObject(supportedMediaTypes)) {
        throw new Error("Supported media types must be provided as an Array or an Object");
      }

      var fieldValueParts = [];
      mediaTypes.forEach(function (item) {
        var transferSyntaxUID = item.transferSyntaxUID,
            mediaType = item.mediaType;

        DICOMwebClient._assertMediaTypeIsValid(mediaType);

        var fieldValue = "multipart/related; type=\"".concat(mediaType, "\"");

        if (isObject(supportedMediaTypes)) {
          // SupportedMediaTypes is a lookup table that maps Transfer Syntax UID
          // to one or more Media Types
          if (!Object.values(supportedMediaTypes).flat(1).includes(mediaType)) {
            if (!mediaType.endsWith("/*") || !mediaType.endsWith("/")) {
              throw new Error("Media type ".concat(mediaType, " is not supported for requested resource"));
            }
          }

          if (transferSyntaxUID) {
            if (transferSyntaxUID !== "*") {
              if (!Object.keys(supportedMediaTypes).includes(transferSyntaxUID)) {
                throw new Error("Transfer syntax ".concat(transferSyntaxUID, " is not supported for requested resource"));
              }

              var expectedMediaTypes = supportedMediaTypes[transferSyntaxUID];

              if (!expectedMediaTypes.includes(mediaType)) {
                var actualType = DICOMwebClient._parseMediaType(mediaType)[0];

                expectedMediaTypes.map(function (expectedMediaType) {
                  var expectedType = DICOMwebClient._parseMediaType(expectedMediaType)[0];

                  var haveSameType = actualType === expectedType;

                  if (haveSameType && (mediaType.endsWith("/*") || mediaType.endsWith("/"))) {
                    return;
                  }

                  throw new Error("Transfer syntax ".concat(transferSyntaxUID, " is not supported for requested resource"));
                });
              }
            }

            fieldValue += "; transfer-syntax=".concat(transferSyntaxUID);
          }
        } else if (Array.isArray(supportedMediaTypes) && !supportedMediaTypes.includes(mediaType)) {
          throw new Error("Media type ".concat(mediaType, " is not supported for requested resource"));
        }

        fieldValueParts.push(fieldValue);
      });
      return fieldValueParts.join(", ");
    }
    /**
     * Builds a range header field value for HTTP GET request messages.
     *
     * @param {Array} byteRange start and end of byte range
     * @returns {String} range header field value
     */

  }, {
    key: "_buildRangeHeaderFieldValue",
    value: function _buildRangeHeaderFieldValue() {
      var byteRange = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      if (byteRange.length === 1) {
        return "bytes=".concat(byteRange[0], "-");
      }

      if (byteRange.length === 2) {
        return "bytes=".concat(byteRange[0], "-").concat(byteRange[1]);
      }

      return "bytes=0-";
    }
    /**
     * Gets common type of acceptable media types and asserts that only
     one type is specified. For example, ``("image/jpeg", "image/jp2")``
     will pass, but ``("image/jpeg", "video/mpeg2")`` will raise an
     exception.
     * @param {String[]} acceptable media types and optionally the UIDs of the
     corresponding transfer syntaxes
     *
     */

  }, {
    key: "_getCommonMediaType",
    value: function _getCommonMediaType(mediaTypes) {
      if (!mediaTypes || !mediaTypes.length) {
        throw new Error("No acceptable media types provided");
      }

      var commonMediaTypes = new Set();
      mediaTypes.forEach(function (item) {
        var mediaType = item.mediaType;

        if (mediaType.startsWith("application")) {
          commonMediaTypes.add(mediaType);
        } else {
          var type = DICOMwebClient._parseMediaType(mediaType)[0];

          commonMediaTypes.add("".concat(type, "/"));
        }
      });

      if (commonMediaTypes.size === 0) {
        throw new Error("No common acceptable media type could be identified.");
      } else if (commonMediaTypes.size > 1) {
        throw new Error("Acceptable media types must have the same type.");
      }

      return Array.from(commonMediaTypes)[0];
    }
  }]);

  return DICOMwebClient;
}();

function findSubstring(str, before, after) {
  var beforeIndex = str.lastIndexOf(before) + before.length;

  if (beforeIndex < before.length) {
    return null;
  }

  if (after !== undefined) {
    var afterIndex = str.lastIndexOf(after);

    if (afterIndex < 0) {
      return null;
    }

    return str.substring(beforeIndex, afterIndex);
  }

  return str.substring(beforeIndex);
}

function getStudyInstanceUIDFromUri(uri) {
  var uid = findSubstring(uri, "studies/", "/series");

  if (!uid) {
    uid = findSubstring(uri, "studies/");
  }

  if (!uid) {
    console.debug("Study Instance UID could not be dertermined from URI \"".concat(uri, "\""));
  }

  return uid;
}

function getSeriesInstanceUIDFromUri(uri) {
  var uid = findSubstring(uri, "series/", "/instances");

  if (!uid) {
    uid = findSubstring(uri, "series/");
  }

  if (!uid) {
    console.debug("Series Instance UID could not be dertermined from URI \"".concat(uri, "\""));
  }

  return uid;
}

function getSOPInstanceUIDFromUri(uri) {
  var uid = findSubstring(uri, "/instances/", "/frames");

  if (!uid) {
    uid = findSubstring(uri, "/instances/", "/metadata");
  }

  if (!uid) {
    uid = findSubstring(uri, "/instances/");
  }

  if (!uid) {
    console.debug("SOP Instance UID could not be dertermined from URI\"".concat(uri, "\""));
  }

  return uid;
}

function getFrameNumbersFromUri(uri) {
  var numbers = findSubstring(uri, "/frames/", "/rendered");

  if (!numbers) {
    numbers = findSubstring(uri, "/frames/");
  }

  if (numbers === undefined) {
    console.debug("Frames Numbers could not be dertermined from URI\"".concat(uri, "\""));
  }

  return numbers.split(",");
}

var version = "0.5.2";

var api = {
  DICOMwebClient: DICOMwebClient
};
var utils = {
  getStudyInstanceUIDFromUri: getStudyInstanceUIDFromUri,
  getSeriesInstanceUIDFromUri: getSeriesInstanceUIDFromUri,
  getSOPInstanceUIDFromUri: getSOPInstanceUIDFromUri,
  getFrameNumbersFromUri: getFrameNumbersFromUri
};


//# sourceMappingURL=dicomweb-client.es.js.map


/***/ }),

/***/ "../node_modules/fast-deep-equal/index.js":
/*!************************************************!*\
  !*** ../node_modules/fast-deep-equal/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// do not edit .js files directly - edit src/index.jst



module.exports = function equal(a, b) {
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    if (a.constructor !== b.constructor) return false;

    var length, i, keys;
    if (Array.isArray(a)) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }



    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

    keys = Object.keys(a);
    length = keys.length;
    if (length !== Object.keys(b).length) return false;

    for (i = length; i-- !== 0;)
      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;

    for (i = length; i-- !== 0;) {
      var key = keys[i];

      if (!equal(a[key], b[key])) return false;
    }

    return true;
  }

  // true if both NaN, false otherwise
  return a!==a && b!==b;
};


/***/ }),

/***/ "../node_modules/fast-json-stable-stringify/index.js":
/*!***********************************************************!*\
  !*** ../node_modules/fast-json-stable-stringify/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function (data, opts) {
    if (!opts) opts = {};
    if (typeof opts === 'function') opts = { cmp: opts };
    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;

    var cmp = opts.cmp && (function (f) {
        return function (node) {
            return function (a, b) {
                var aobj = { key: a, value: node[a] };
                var bobj = { key: b, value: node[b] };
                return f(aobj, bobj);
            };
        };
    })(opts.cmp);

    var seen = [];
    return (function stringify (node) {
        if (node && node.toJSON && typeof node.toJSON === 'function') {
            node = node.toJSON();
        }

        if (node === undefined) return;
        if (typeof node == 'number') return isFinite(node) ? '' + node : 'null';
        if (typeof node !== 'object') return JSON.stringify(node);

        var i, out;
        if (Array.isArray(node)) {
            out = '[';
            for (i = 0; i < node.length; i++) {
                if (i) out += ',';
                out += stringify(node[i]) || 'null';
            }
            return out + ']';
        }

        if (node === null) return 'null';

        if (seen.indexOf(node) !== -1) {
            if (cycles) return JSON.stringify('__cycle__');
            throw new TypeError('Converting circular structure to JSON');
        }

        var seenIndex = seen.push(node) - 1;
        var keys = Object.keys(node).sort(cmp && cmp(node));
        out = '';
        for (i = 0; i < keys.length; i++) {
            var key = keys[i];
            var value = stringify(node[key]);

            if (!value) continue;
            if (out) out += ',';
            out += JSON.stringify(key) + ':' + value;
        }
        seen.splice(seenIndex, 1);
        return '{' + out + '}';
    })(data);
};


/***/ }),

/***/ "../node_modules/json-schema-traverse/index.js":
/*!*****************************************************!*\
  !*** ../node_modules/json-schema-traverse/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var traverse = module.exports = function (schema, opts, cb) {
  // Legacy support for v0.3.1 and earlier.
  if (typeof opts == 'function') {
    cb = opts;
    opts = {};
  }

  cb = opts.cb || cb;
  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};
  var post = cb.post || function() {};

  _traverse(opts, pre, post, schema, '', schema);
};


traverse.keywords = {
  additionalItems: true,
  items: true,
  contains: true,
  additionalProperties: true,
  propertyNames: true,
  not: true
};

traverse.arrayKeywords = {
  items: true,
  allOf: true,
  anyOf: true,
  oneOf: true
};

traverse.propsKeywords = {
  definitions: true,
  properties: true,
  patternProperties: true,
  dependencies: true
};

traverse.skipKeywords = {
  default: true,
  enum: true,
  const: true,
  required: true,
  maximum: true,
  minimum: true,
  exclusiveMaximum: true,
  exclusiveMinimum: true,
  multipleOf: true,
  maxLength: true,
  minLength: true,
  pattern: true,
  format: true,
  maxItems: true,
  minItems: true,
  uniqueItems: true,
  maxProperties: true,
  minProperties: true
};


function _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {
  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {
    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);
    for (var key in schema) {
      var sch = schema[key];
      if (Array.isArray(sch)) {
        if (key in traverse.arrayKeywords) {
          for (var i=0; i<sch.length; i++)
            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);
        }
      } else if (key in traverse.propsKeywords) {
        if (sch && typeof sch == 'object') {
          for (var prop in sch)
            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);
        }
      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {
        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);
      }
    }
    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);
  }
}


function escapeJsonPtr(str) {
  return str.replace(/~/g, '~0').replace(/\//g, '~1');
}


/***/ }),

/***/ "../node_modules/lodash/_DataView.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_DataView.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "../node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var DataView = getNative(root, 'DataView');

module.exports = DataView;


/***/ }),

/***/ "../node_modules/lodash/_Hash.js":
/*!***************************************!*\
  !*** ../node_modules/lodash/_Hash.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hashClear = __webpack_require__(/*! ./_hashClear */ "../node_modules/lodash/_hashClear.js"),
    hashDelete = __webpack_require__(/*! ./_hashDelete */ "../node_modules/lodash/_hashDelete.js"),
    hashGet = __webpack_require__(/*! ./_hashGet */ "../node_modules/lodash/_hashGet.js"),
    hashHas = __webpack_require__(/*! ./_hashHas */ "../node_modules/lodash/_hashHas.js"),
    hashSet = __webpack_require__(/*! ./_hashSet */ "../node_modules/lodash/_hashSet.js");

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

module.exports = Hash;


/***/ }),

/***/ "../node_modules/lodash/_ListCache.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_ListCache.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var listCacheClear = __webpack_require__(/*! ./_listCacheClear */ "../node_modules/lodash/_listCacheClear.js"),
    listCacheDelete = __webpack_require__(/*! ./_listCacheDelete */ "../node_modules/lodash/_listCacheDelete.js"),
    listCacheGet = __webpack_require__(/*! ./_listCacheGet */ "../node_modules/lodash/_listCacheGet.js"),
    listCacheHas = __webpack_require__(/*! ./_listCacheHas */ "../node_modules/lodash/_listCacheHas.js"),
    listCacheSet = __webpack_require__(/*! ./_listCacheSet */ "../node_modules/lodash/_listCacheSet.js");

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

module.exports = ListCache;


/***/ }),

/***/ "../node_modules/lodash/_Map.js":
/*!**************************************!*\
  !*** ../node_modules/lodash/_Map.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "../node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map');

module.exports = Map;


/***/ }),

/***/ "../node_modules/lodash/_MapCache.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_MapCache.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var mapCacheClear = __webpack_require__(/*! ./_mapCacheClear */ "../node_modules/lodash/_mapCacheClear.js"),
    mapCacheDelete = __webpack_require__(/*! ./_mapCacheDelete */ "../node_modules/lodash/_mapCacheDelete.js"),
    mapCacheGet = __webpack_require__(/*! ./_mapCacheGet */ "../node_modules/lodash/_mapCacheGet.js"),
    mapCacheHas = __webpack_require__(/*! ./_mapCacheHas */ "../node_modules/lodash/_mapCacheHas.js"),
    mapCacheSet = __webpack_require__(/*! ./_mapCacheSet */ "../node_modules/lodash/_mapCacheSet.js");

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries == null ? 0 : entries.length;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

module.exports = MapCache;


/***/ }),

/***/ "../node_modules/lodash/_Promise.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_Promise.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "../node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Promise = getNative(root, 'Promise');

module.exports = Promise;


/***/ }),

/***/ "../node_modules/lodash/_Set.js":
/*!**************************************!*\
  !*** ../node_modules/lodash/_Set.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "../node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var Set = getNative(root, 'Set');

module.exports = Set;


/***/ }),

/***/ "../node_modules/lodash/_SetCache.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_SetCache.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "../node_modules/lodash/_MapCache.js"),
    setCacheAdd = __webpack_require__(/*! ./_setCacheAdd */ "../node_modules/lodash/_setCacheAdd.js"),
    setCacheHas = __webpack_require__(/*! ./_setCacheHas */ "../node_modules/lodash/_setCacheHas.js");

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values == null ? 0 : values.length;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

module.exports = SetCache;


/***/ }),

/***/ "../node_modules/lodash/_Stack.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/_Stack.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "../node_modules/lodash/_ListCache.js"),
    stackClear = __webpack_require__(/*! ./_stackClear */ "../node_modules/lodash/_stackClear.js"),
    stackDelete = __webpack_require__(/*! ./_stackDelete */ "../node_modules/lodash/_stackDelete.js"),
    stackGet = __webpack_require__(/*! ./_stackGet */ "../node_modules/lodash/_stackGet.js"),
    stackHas = __webpack_require__(/*! ./_stackHas */ "../node_modules/lodash/_stackHas.js"),
    stackSet = __webpack_require__(/*! ./_stackSet */ "../node_modules/lodash/_stackSet.js");

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack(entries) {
  var data = this.__data__ = new ListCache(entries);
  this.size = data.size;
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear;
Stack.prototype['delete'] = stackDelete;
Stack.prototype.get = stackGet;
Stack.prototype.has = stackHas;
Stack.prototype.set = stackSet;

module.exports = Stack;


/***/ }),

/***/ "../node_modules/lodash/_Symbol.js":
/*!*****************************************!*\
  !*** ../node_modules/lodash/_Symbol.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/** Built-in value references. */
var Symbol = root.Symbol;

module.exports = Symbol;


/***/ }),

/***/ "../node_modules/lodash/_Uint8Array.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_Uint8Array.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/** Built-in value references. */
var Uint8Array = root.Uint8Array;

module.exports = Uint8Array;


/***/ }),

/***/ "../node_modules/lodash/_WeakMap.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_WeakMap.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "../node_modules/lodash/_getNative.js"),
    root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/* Built-in method references that are verified to be native. */
var WeakMap = getNative(root, 'WeakMap');

module.exports = WeakMap;


/***/ }),

/***/ "../node_modules/lodash/_apply.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/_apply.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A faster alternative to `Function#apply`, this function invokes `func`
 * with the `this` binding of `thisArg` and the arguments of `args`.
 *
 * @private
 * @param {Function} func The function to invoke.
 * @param {*} thisArg The `this` binding of `func`.
 * @param {Array} args The arguments to invoke `func` with.
 * @returns {*} Returns the result of `func`.
 */
function apply(func, thisArg, args) {
  switch (args.length) {
    case 0: return func.call(thisArg);
    case 1: return func.call(thisArg, args[0]);
    case 2: return func.call(thisArg, args[0], args[1]);
    case 3: return func.call(thisArg, args[0], args[1], args[2]);
  }
  return func.apply(thisArg, args);
}

module.exports = apply;


/***/ }),

/***/ "../node_modules/lodash/_arrayEach.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_arrayEach.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

module.exports = arrayEach;


/***/ }),

/***/ "../node_modules/lodash/_arrayFilter.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_arrayFilter.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.filter` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {Array} Returns the new filtered array.
 */
function arrayFilter(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length,
      resIndex = 0,
      result = [];

  while (++index < length) {
    var value = array[index];
    if (predicate(value, index, array)) {
      result[resIndex++] = value;
    }
  }
  return result;
}

module.exports = arrayFilter;


/***/ }),

/***/ "../node_modules/lodash/_arrayIncludes.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_arrayIncludes.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIndexOf = __webpack_require__(/*! ./_baseIndexOf */ "../node_modules/lodash/_baseIndexOf.js");

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array == null ? 0 : array.length;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

module.exports = arrayIncludes;


/***/ }),

/***/ "../node_modules/lodash/_arrayIncludesWith.js":
/*!****************************************************!*\
  !*** ../node_modules/lodash/_arrayIncludesWith.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

module.exports = arrayIncludesWith;


/***/ }),

/***/ "../node_modules/lodash/_arrayLikeKeys.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_arrayLikeKeys.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseTimes = __webpack_require__(/*! ./_baseTimes */ "../node_modules/lodash/_baseTimes.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "../node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "../node_modules/lodash/isBuffer.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "../node_modules/lodash/_isIndex.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "../node_modules/lodash/isTypedArray.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = arrayLikeKeys;


/***/ }),

/***/ "../node_modules/lodash/_arrayMap.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_arrayMap.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

module.exports = arrayMap;


/***/ }),

/***/ "../node_modules/lodash/_arrayPush.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_arrayPush.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */
function arrayPush(array, values) {
  var index = -1,
      length = values.length,
      offset = array.length;

  while (++index < length) {
    array[offset + index] = values[index];
  }
  return array;
}

module.exports = arrayPush;


/***/ }),

/***/ "../node_modules/lodash/_arraySome.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_arraySome.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.some` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} predicate The function invoked per iteration.
 * @returns {boolean} Returns `true` if any element passes the predicate check,
 *  else `false`.
 */
function arraySome(array, predicate) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (predicate(array[index], index, array)) {
      return true;
    }
  }
  return false;
}

module.exports = arraySome;


/***/ }),

/***/ "../node_modules/lodash/_assignMergeValue.js":
/*!***************************************************!*\
  !*** ../node_modules/lodash/_assignMergeValue.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "../node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "../node_modules/lodash/eq.js");

/**
 * This function is like `assignValue` except that it doesn't assign
 * `undefined` values.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignMergeValue(object, key, value) {
  if ((value !== undefined && !eq(object[key], value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignMergeValue;


/***/ }),

/***/ "../node_modules/lodash/_assignValue.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_assignValue.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "../node_modules/lodash/_baseAssignValue.js"),
    eq = __webpack_require__(/*! ./eq */ "../node_modules/lodash/eq.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    baseAssignValue(object, key, value);
  }
}

module.exports = assignValue;


/***/ }),

/***/ "../node_modules/lodash/_assocIndexOf.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_assocIndexOf.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "../node_modules/lodash/eq.js");

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

module.exports = assocIndexOf;


/***/ }),

/***/ "../node_modules/lodash/_baseAssign.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_baseAssign.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "../node_modules/lodash/_copyObject.js"),
    keys = __webpack_require__(/*! ./keys */ "../node_modules/lodash/keys.js");

/**
 * The base implementation of `_.assign` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssign(object, source) {
  return object && copyObject(source, keys(source), object);
}

module.exports = baseAssign;


/***/ }),

/***/ "../node_modules/lodash/_baseAssignIn.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_baseAssignIn.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "../node_modules/lodash/_copyObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "../node_modules/lodash/keysIn.js");

/**
 * The base implementation of `_.assignIn` without support for multiple sources
 * or `customizer` functions.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @returns {Object} Returns `object`.
 */
function baseAssignIn(object, source) {
  return object && copyObject(source, keysIn(source), object);
}

module.exports = baseAssignIn;


/***/ }),

/***/ "../node_modules/lodash/_baseAssignValue.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_baseAssignValue.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ./_defineProperty */ "../node_modules/lodash/_defineProperty.js");

/**
 * The base implementation of `assignValue` and `assignMergeValue` without
 * value checks.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function baseAssignValue(object, key, value) {
  if (key == '__proto__' && defineProperty) {
    defineProperty(object, key, {
      'configurable': true,
      'enumerable': true,
      'value': value,
      'writable': true
    });
  } else {
    object[key] = value;
  }
}

module.exports = baseAssignValue;


/***/ }),

/***/ "../node_modules/lodash/_baseClone.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseClone.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "../node_modules/lodash/_Stack.js"),
    arrayEach = __webpack_require__(/*! ./_arrayEach */ "../node_modules/lodash/_arrayEach.js"),
    assignValue = __webpack_require__(/*! ./_assignValue */ "../node_modules/lodash/_assignValue.js"),
    baseAssign = __webpack_require__(/*! ./_baseAssign */ "../node_modules/lodash/_baseAssign.js"),
    baseAssignIn = __webpack_require__(/*! ./_baseAssignIn */ "../node_modules/lodash/_baseAssignIn.js"),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ "../node_modules/lodash/_cloneBuffer.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "../node_modules/lodash/_copyArray.js"),
    copySymbols = __webpack_require__(/*! ./_copySymbols */ "../node_modules/lodash/_copySymbols.js"),
    copySymbolsIn = __webpack_require__(/*! ./_copySymbolsIn */ "../node_modules/lodash/_copySymbolsIn.js"),
    getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "../node_modules/lodash/_getAllKeys.js"),
    getAllKeysIn = __webpack_require__(/*! ./_getAllKeysIn */ "../node_modules/lodash/_getAllKeysIn.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "../node_modules/lodash/_getTag.js"),
    initCloneArray = __webpack_require__(/*! ./_initCloneArray */ "../node_modules/lodash/_initCloneArray.js"),
    initCloneByTag = __webpack_require__(/*! ./_initCloneByTag */ "../node_modules/lodash/_initCloneByTag.js"),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ "../node_modules/lodash/_initCloneObject.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "../node_modules/lodash/isBuffer.js"),
    isMap = __webpack_require__(/*! ./isMap */ "../node_modules/lodash/isMap.js"),
    isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js"),
    isSet = __webpack_require__(/*! ./isSet */ "../node_modules/lodash/isSet.js"),
    keys = __webpack_require__(/*! ./keys */ "../node_modules/lodash/keys.js");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_FLAT_FLAG = 2,
    CLONE_SYMBOLS_FLAG = 4;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values supported by `_.clone`. */
var cloneableTags = {};
cloneableTags[argsTag] = cloneableTags[arrayTag] =
cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
cloneableTags[boolTag] = cloneableTags[dateTag] =
cloneableTags[float32Tag] = cloneableTags[float64Tag] =
cloneableTags[int8Tag] = cloneableTags[int16Tag] =
cloneableTags[int32Tag] = cloneableTags[mapTag] =
cloneableTags[numberTag] = cloneableTags[objectTag] =
cloneableTags[regexpTag] = cloneableTags[setTag] =
cloneableTags[stringTag] = cloneableTags[symbolTag] =
cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
cloneableTags[errorTag] = cloneableTags[funcTag] =
cloneableTags[weakMapTag] = false;

/**
 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
 * traversed objects.
 *
 * @private
 * @param {*} value The value to clone.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Deep clone
 *  2 - Flatten inherited properties
 *  4 - Clone symbols
 * @param {Function} [customizer] The function to customize cloning.
 * @param {string} [key] The key of `value`.
 * @param {Object} [object] The parent object of `value`.
 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
 * @returns {*} Returns the cloned value.
 */
function baseClone(value, bitmask, customizer, key, object, stack) {
  var result,
      isDeep = bitmask & CLONE_DEEP_FLAG,
      isFlat = bitmask & CLONE_FLAT_FLAG,
      isFull = bitmask & CLONE_SYMBOLS_FLAG;

  if (customizer) {
    result = object ? customizer(value, key, object, stack) : customizer(value);
  }
  if (result !== undefined) {
    return result;
  }
  if (!isObject(value)) {
    return value;
  }
  var isArr = isArray(value);
  if (isArr) {
    result = initCloneArray(value);
    if (!isDeep) {
      return copyArray(value, result);
    }
  } else {
    var tag = getTag(value),
        isFunc = tag == funcTag || tag == genTag;

    if (isBuffer(value)) {
      return cloneBuffer(value, isDeep);
    }
    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
      result = (isFlat || isFunc) ? {} : initCloneObject(value);
      if (!isDeep) {
        return isFlat
          ? copySymbolsIn(value, baseAssignIn(result, value))
          : copySymbols(value, baseAssign(result, value));
      }
    } else {
      if (!cloneableTags[tag]) {
        return object ? value : {};
      }
      result = initCloneByTag(value, tag, isDeep);
    }
  }
  // Check for circular references and return its corresponding clone.
  stack || (stack = new Stack);
  var stacked = stack.get(value);
  if (stacked) {
    return stacked;
  }
  stack.set(value, result);

  if (isSet(value)) {
    value.forEach(function(subValue) {
      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
    });
  } else if (isMap(value)) {
    value.forEach(function(subValue, key) {
      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
    });
  }

  var keysFunc = isFull
    ? (isFlat ? getAllKeysIn : getAllKeys)
    : (isFlat ? keysIn : keys);

  var props = isArr ? undefined : keysFunc(value);
  arrayEach(props || value, function(subValue, key) {
    if (props) {
      key = subValue;
      subValue = value[key];
    }
    // Recursively populate clone (susceptible to call stack limits).
    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
  });
  return result;
}

module.exports = baseClone;


/***/ }),

/***/ "../node_modules/lodash/_baseCreate.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_baseCreate.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js");

/** Built-in value references. */
var objectCreate = Object.create;

/**
 * The base implementation of `_.create` without support for assigning
 * properties to the created object.
 *
 * @private
 * @param {Object} proto The object to inherit from.
 * @returns {Object} Returns the new object.
 */
var baseCreate = (function() {
  function object() {}
  return function(proto) {
    if (!isObject(proto)) {
      return {};
    }
    if (objectCreate) {
      return objectCreate(proto);
    }
    object.prototype = proto;
    var result = new object;
    object.prototype = undefined;
    return result;
  };
}());

module.exports = baseCreate;


/***/ }),

/***/ "../node_modules/lodash/_baseFindIndex.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_baseFindIndex.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

module.exports = baseFindIndex;


/***/ }),

/***/ "../node_modules/lodash/_baseFor.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_baseFor.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var createBaseFor = __webpack_require__(/*! ./_createBaseFor */ "../node_modules/lodash/_createBaseFor.js");

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

module.exports = baseFor;


/***/ }),

/***/ "../node_modules/lodash/_baseGet.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_baseGet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "../node_modules/lodash/_castPath.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "../node_modules/lodash/_toKey.js");

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = castPath(path, object);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

module.exports = baseGet;


/***/ }),

/***/ "../node_modules/lodash/_baseGetAllKeys.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_baseGetAllKeys.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "../node_modules/lodash/_arrayPush.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js");

/**
 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @param {Function} symbolsFunc The function to get the symbols of `object`.
 * @returns {Array} Returns the array of property names and symbols.
 */
function baseGetAllKeys(object, keysFunc, symbolsFunc) {
  var result = keysFunc(object);
  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
}

module.exports = baseGetAllKeys;


/***/ }),

/***/ "../node_modules/lodash/_baseGetTag.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_baseGetTag.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "../node_modules/lodash/_Symbol.js"),
    getRawTag = __webpack_require__(/*! ./_getRawTag */ "../node_modules/lodash/_getRawTag.js"),
    objectToString = __webpack_require__(/*! ./_objectToString */ "../node_modules/lodash/_objectToString.js");

/** `Object#toString` result references. */
var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

module.exports = baseGetTag;


/***/ }),

/***/ "../node_modules/lodash/_baseHasIn.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseHasIn.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.hasIn` without support for deep paths.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {Array|string} key The key to check.
 * @returns {boolean} Returns `true` if `key` exists, else `false`.
 */
function baseHasIn(object, key) {
  return object != null && key in Object(object);
}

module.exports = baseHasIn;


/***/ }),

/***/ "../node_modules/lodash/_baseIndexOf.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_baseIndexOf.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseFindIndex = __webpack_require__(/*! ./_baseFindIndex */ "../node_modules/lodash/_baseFindIndex.js"),
    baseIsNaN = __webpack_require__(/*! ./_baseIsNaN */ "../node_modules/lodash/_baseIsNaN.js"),
    strictIndexOf = __webpack_require__(/*! ./_strictIndexOf */ "../node_modules/lodash/_strictIndexOf.js");

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

module.exports = baseIndexOf;


/***/ }),

/***/ "../node_modules/lodash/_baseIsArguments.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_baseIsArguments.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "../node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

module.exports = baseIsArguments;


/***/ }),

/***/ "../node_modules/lodash/_baseIsEqual.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_baseIsEqual.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqualDeep = __webpack_require__(/*! ./_baseIsEqualDeep */ "../node_modules/lodash/_baseIsEqualDeep.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/**
 * The base implementation of `_.isEqual` which supports partial comparisons
 * and tracks traversed objects.
 *
 * @private
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @param {boolean} bitmask The bitmask flags.
 *  1 - Unordered comparison
 *  2 - Partial comparison
 * @param {Function} [customizer] The function to customize comparisons.
 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 */
function baseIsEqual(value, other, bitmask, customizer, stack) {
  if (value === other) {
    return true;
  }
  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
    return value !== value && other !== other;
  }
  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
}

module.exports = baseIsEqual;


/***/ }),

/***/ "../node_modules/lodash/_baseIsEqualDeep.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_baseIsEqualDeep.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "../node_modules/lodash/_Stack.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "../node_modules/lodash/_equalArrays.js"),
    equalByTag = __webpack_require__(/*! ./_equalByTag */ "../node_modules/lodash/_equalByTag.js"),
    equalObjects = __webpack_require__(/*! ./_equalObjects */ "../node_modules/lodash/_equalObjects.js"),
    getTag = __webpack_require__(/*! ./_getTag */ "../node_modules/lodash/_getTag.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "../node_modules/lodash/isBuffer.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "../node_modules/lodash/isTypedArray.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    objectTag = '[object Object]';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqual` for arrays and objects which performs
 * deep comparisons and tracks traversed objects enabling objects with circular
 * references to be compared.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
  var objIsArr = isArray(object),
      othIsArr = isArray(other),
      objTag = objIsArr ? arrayTag : getTag(object),
      othTag = othIsArr ? arrayTag : getTag(other);

  objTag = objTag == argsTag ? objectTag : objTag;
  othTag = othTag == argsTag ? objectTag : othTag;

  var objIsObj = objTag == objectTag,
      othIsObj = othTag == objectTag,
      isSameTag = objTag == othTag;

  if (isSameTag && isBuffer(object)) {
    if (!isBuffer(other)) {
      return false;
    }
    objIsArr = true;
    objIsObj = false;
  }
  if (isSameTag && !objIsObj) {
    stack || (stack = new Stack);
    return (objIsArr || isTypedArray(object))
      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
  }
  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

    if (objIsWrapped || othIsWrapped) {
      var objUnwrapped = objIsWrapped ? object.value() : object,
          othUnwrapped = othIsWrapped ? other.value() : other;

      stack || (stack = new Stack);
      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
    }
  }
  if (!isSameTag) {
    return false;
  }
  stack || (stack = new Stack);
  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
}

module.exports = baseIsEqualDeep;


/***/ }),

/***/ "../node_modules/lodash/_baseIsMap.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseIsMap.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "../node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]';

/**
 * The base implementation of `_.isMap` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 */
function baseIsMap(value) {
  return isObjectLike(value) && getTag(value) == mapTag;
}

module.exports = baseIsMap;


/***/ }),

/***/ "../node_modules/lodash/_baseIsMatch.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_baseIsMatch.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "../node_modules/lodash/_Stack.js"),
    baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "../node_modules/lodash/_baseIsEqual.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.isMatch` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to inspect.
 * @param {Object} source The object of property values to match.
 * @param {Array} matchData The property names, values, and compare flags to match.
 * @param {Function} [customizer] The function to customize comparisons.
 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
 */
function baseIsMatch(object, source, matchData, customizer) {
  var index = matchData.length,
      length = index,
      noCustomizer = !customizer;

  if (object == null) {
    return !length;
  }
  object = Object(object);
  while (index--) {
    var data = matchData[index];
    if ((noCustomizer && data[2])
          ? data[1] !== object[data[0]]
          : !(data[0] in object)
        ) {
      return false;
    }
  }
  while (++index < length) {
    data = matchData[index];
    var key = data[0],
        objValue = object[key],
        srcValue = data[1];

    if (noCustomizer && data[2]) {
      if (objValue === undefined && !(key in object)) {
        return false;
      }
    } else {
      var stack = new Stack;
      if (customizer) {
        var result = customizer(objValue, srcValue, key, object, source, stack);
      }
      if (!(result === undefined
            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
            : result
          )) {
        return false;
      }
    }
  }
  return true;
}

module.exports = baseIsMatch;


/***/ }),

/***/ "../node_modules/lodash/_baseIsNaN.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseIsNaN.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

module.exports = baseIsNaN;


/***/ }),

/***/ "../node_modules/lodash/_baseIsNative.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_baseIsNative.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "../node_modules/lodash/isFunction.js"),
    isMasked = __webpack_require__(/*! ./_isMasked */ "../node_modules/lodash/_isMasked.js"),
    isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "../node_modules/lodash/_toSource.js");

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

module.exports = baseIsNative;


/***/ }),

/***/ "../node_modules/lodash/_baseIsSet.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseIsSet.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getTag = __webpack_require__(/*! ./_getTag */ "../node_modules/lodash/_getTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var setTag = '[object Set]';

/**
 * The base implementation of `_.isSet` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 */
function baseIsSet(value) {
  return isObjectLike(value) && getTag(value) == setTag;
}

module.exports = baseIsSet;


/***/ }),

/***/ "../node_modules/lodash/_baseIsTypedArray.js":
/*!***************************************************!*\
  !*** ../node_modules/lodash/_baseIsTypedArray.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "../node_modules/lodash/_baseGetTag.js"),
    isLength = __webpack_require__(/*! ./isLength */ "../node_modules/lodash/isLength.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var argsTag = '[object Arguments]',
    arrayTag = '[object Array]',
    boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    funcTag = '[object Function]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    objectTag = '[object Object]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

module.exports = baseIsTypedArray;


/***/ }),

/***/ "../node_modules/lodash/_baseIteratee.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_baseIteratee.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseMatches = __webpack_require__(/*! ./_baseMatches */ "../node_modules/lodash/_baseMatches.js"),
    baseMatchesProperty = __webpack_require__(/*! ./_baseMatchesProperty */ "../node_modules/lodash/_baseMatchesProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "../node_modules/lodash/identity.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    property = __webpack_require__(/*! ./property */ "../node_modules/lodash/property.js");

/**
 * The base implementation of `_.iteratee`.
 *
 * @private
 * @param {*} [value=_.identity] The value to convert to an iteratee.
 * @returns {Function} Returns the iteratee.
 */
function baseIteratee(value) {
  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
  if (typeof value == 'function') {
    return value;
  }
  if (value == null) {
    return identity;
  }
  if (typeof value == 'object') {
    return isArray(value)
      ? baseMatchesProperty(value[0], value[1])
      : baseMatches(value);
  }
  return property(value);
}

module.exports = baseIteratee;


/***/ }),

/***/ "../node_modules/lodash/_baseKeys.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_baseKeys.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isPrototype = __webpack_require__(/*! ./_isPrototype */ "../node_modules/lodash/_isPrototype.js"),
    nativeKeys = __webpack_require__(/*! ./_nativeKeys */ "../node_modules/lodash/_nativeKeys.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeys;


/***/ }),

/***/ "../node_modules/lodash/_baseKeysIn.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_baseKeysIn.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "../node_modules/lodash/_isPrototype.js"),
    nativeKeysIn = __webpack_require__(/*! ./_nativeKeysIn */ "../node_modules/lodash/_nativeKeysIn.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeysIn(object) {
  if (!isObject(object)) {
    return nativeKeysIn(object);
  }
  var isProto = isPrototype(object),
      result = [];

  for (var key in object) {
    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
      result.push(key);
    }
  }
  return result;
}

module.exports = baseKeysIn;


/***/ }),

/***/ "../node_modules/lodash/_baseMatches.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_baseMatches.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMatch = __webpack_require__(/*! ./_baseIsMatch */ "../node_modules/lodash/_baseIsMatch.js"),
    getMatchData = __webpack_require__(/*! ./_getMatchData */ "../node_modules/lodash/_getMatchData.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "../node_modules/lodash/_matchesStrictComparable.js");

/**
 * The base implementation of `_.matches` which doesn't clone `source`.
 *
 * @private
 * @param {Object} source The object of property values to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatches(source) {
  var matchData = getMatchData(source);
  if (matchData.length == 1 && matchData[0][2]) {
    return matchesStrictComparable(matchData[0][0], matchData[0][1]);
  }
  return function(object) {
    return object === source || baseIsMatch(object, source, matchData);
  };
}

module.exports = baseMatches;


/***/ }),

/***/ "../node_modules/lodash/_baseMatchesProperty.js":
/*!******************************************************!*\
  !*** ../node_modules/lodash/_baseMatchesProperty.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsEqual = __webpack_require__(/*! ./_baseIsEqual */ "../node_modules/lodash/_baseIsEqual.js"),
    get = __webpack_require__(/*! ./get */ "../node_modules/lodash/get.js"),
    hasIn = __webpack_require__(/*! ./hasIn */ "../node_modules/lodash/hasIn.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "../node_modules/lodash/_isKey.js"),
    isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "../node_modules/lodash/_isStrictComparable.js"),
    matchesStrictComparable = __webpack_require__(/*! ./_matchesStrictComparable */ "../node_modules/lodash/_matchesStrictComparable.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "../node_modules/lodash/_toKey.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
 *
 * @private
 * @param {string} path The path of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function baseMatchesProperty(path, srcValue) {
  if (isKey(path) && isStrictComparable(srcValue)) {
    return matchesStrictComparable(toKey(path), srcValue);
  }
  return function(object) {
    var objValue = get(object, path);
    return (objValue === undefined && objValue === srcValue)
      ? hasIn(object, path)
      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
  };
}

module.exports = baseMatchesProperty;


/***/ }),

/***/ "../node_modules/lodash/_baseMerge.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseMerge.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Stack = __webpack_require__(/*! ./_Stack */ "../node_modules/lodash/_Stack.js"),
    assignMergeValue = __webpack_require__(/*! ./_assignMergeValue */ "../node_modules/lodash/_assignMergeValue.js"),
    baseFor = __webpack_require__(/*! ./_baseFor */ "../node_modules/lodash/_baseFor.js"),
    baseMergeDeep = __webpack_require__(/*! ./_baseMergeDeep */ "../node_modules/lodash/_baseMergeDeep.js"),
    isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "../node_modules/lodash/keysIn.js"),
    safeGet = __webpack_require__(/*! ./_safeGet */ "../node_modules/lodash/_safeGet.js");

/**
 * The base implementation of `_.merge` without support for multiple sources.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} [customizer] The function to customize merged values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMerge(object, source, srcIndex, customizer, stack) {
  if (object === source) {
    return;
  }
  baseFor(source, function(srcValue, key) {
    stack || (stack = new Stack);
    if (isObject(srcValue)) {
      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
    }
    else {
      var newValue = customizer
        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
        : undefined;

      if (newValue === undefined) {
        newValue = srcValue;
      }
      assignMergeValue(object, key, newValue);
    }
  }, keysIn);
}

module.exports = baseMerge;


/***/ }),

/***/ "../node_modules/lodash/_baseMergeDeep.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_baseMergeDeep.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assignMergeValue = __webpack_require__(/*! ./_assignMergeValue */ "../node_modules/lodash/_assignMergeValue.js"),
    cloneBuffer = __webpack_require__(/*! ./_cloneBuffer */ "../node_modules/lodash/_cloneBuffer.js"),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ "../node_modules/lodash/_cloneTypedArray.js"),
    copyArray = __webpack_require__(/*! ./_copyArray */ "../node_modules/lodash/_copyArray.js"),
    initCloneObject = __webpack_require__(/*! ./_initCloneObject */ "../node_modules/lodash/_initCloneObject.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "../node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isArrayLikeObject = __webpack_require__(/*! ./isArrayLikeObject */ "../node_modules/lodash/isArrayLikeObject.js"),
    isBuffer = __webpack_require__(/*! ./isBuffer */ "../node_modules/lodash/isBuffer.js"),
    isFunction = __webpack_require__(/*! ./isFunction */ "../node_modules/lodash/isFunction.js"),
    isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js"),
    isPlainObject = __webpack_require__(/*! ./isPlainObject */ "../node_modules/lodash/isPlainObject.js"),
    isTypedArray = __webpack_require__(/*! ./isTypedArray */ "../node_modules/lodash/isTypedArray.js"),
    safeGet = __webpack_require__(/*! ./_safeGet */ "../node_modules/lodash/_safeGet.js"),
    toPlainObject = __webpack_require__(/*! ./toPlainObject */ "../node_modules/lodash/toPlainObject.js");

/**
 * A specialized version of `baseMerge` for arrays and objects which performs
 * deep merges and tracks traversed objects enabling objects with circular
 * references to be merged.
 *
 * @private
 * @param {Object} object The destination object.
 * @param {Object} source The source object.
 * @param {string} key The key of the value to merge.
 * @param {number} srcIndex The index of `source`.
 * @param {Function} mergeFunc The function to merge values.
 * @param {Function} [customizer] The function to customize assigned values.
 * @param {Object} [stack] Tracks traversed source values and their merged
 *  counterparts.
 */
function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
  var objValue = safeGet(object, key),
      srcValue = safeGet(source, key),
      stacked = stack.get(srcValue);

  if (stacked) {
    assignMergeValue(object, key, stacked);
    return;
  }
  var newValue = customizer
    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
    : undefined;

  var isCommon = newValue === undefined;

  if (isCommon) {
    var isArr = isArray(srcValue),
        isBuff = !isArr && isBuffer(srcValue),
        isTyped = !isArr && !isBuff && isTypedArray(srcValue);

    newValue = srcValue;
    if (isArr || isBuff || isTyped) {
      if (isArray(objValue)) {
        newValue = objValue;
      }
      else if (isArrayLikeObject(objValue)) {
        newValue = copyArray(objValue);
      }
      else if (isBuff) {
        isCommon = false;
        newValue = cloneBuffer(srcValue, true);
      }
      else if (isTyped) {
        isCommon = false;
        newValue = cloneTypedArray(srcValue, true);
      }
      else {
        newValue = [];
      }
    }
    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
      newValue = objValue;
      if (isArguments(objValue)) {
        newValue = toPlainObject(objValue);
      }
      else if (!isObject(objValue) || isFunction(objValue)) {
        newValue = initCloneObject(srcValue);
      }
    }
    else {
      isCommon = false;
    }
  }
  if (isCommon) {
    // Recursively merge objects and arrays (susceptible to call stack limits).
    stack.set(srcValue, newValue);
    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
    stack['delete'](srcValue);
  }
  assignMergeValue(object, key, newValue);
}

module.exports = baseMergeDeep;


/***/ }),

/***/ "../node_modules/lodash/_baseProperty.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_baseProperty.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

module.exports = baseProperty;


/***/ }),

/***/ "../node_modules/lodash/_basePropertyDeep.js":
/*!***************************************************!*\
  !*** ../node_modules/lodash/_basePropertyDeep.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "../node_modules/lodash/_baseGet.js");

/**
 * A specialized version of `baseProperty` which supports deep paths.
 *
 * @private
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function basePropertyDeep(path) {
  return function(object) {
    return baseGet(object, path);
  };
}

module.exports = basePropertyDeep;


/***/ }),

/***/ "../node_modules/lodash/_baseRest.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_baseRest.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ "../node_modules/lodash/identity.js"),
    overRest = __webpack_require__(/*! ./_overRest */ "../node_modules/lodash/_overRest.js"),
    setToString = __webpack_require__(/*! ./_setToString */ "../node_modules/lodash/_setToString.js");

/**
 * The base implementation of `_.rest` which doesn't validate or coerce arguments.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @returns {Function} Returns the new function.
 */
function baseRest(func, start) {
  return setToString(overRest(func, start, identity), func + '');
}

module.exports = baseRest;


/***/ }),

/***/ "../node_modules/lodash/_baseSetToString.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_baseSetToString.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constant = __webpack_require__(/*! ./constant */ "../node_modules/lodash/constant.js"),
    defineProperty = __webpack_require__(/*! ./_defineProperty */ "../node_modules/lodash/_defineProperty.js"),
    identity = __webpack_require__(/*! ./identity */ "../node_modules/lodash/identity.js");

/**
 * The base implementation of `setToString` without support for hot loop shorting.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var baseSetToString = !defineProperty ? identity : function(func, string) {
  return defineProperty(func, 'toString', {
    'configurable': true,
    'enumerable': false,
    'value': constant(string),
    'writable': true
  });
};

module.exports = baseSetToString;


/***/ }),

/***/ "../node_modules/lodash/_baseTimes.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseTimes.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

module.exports = baseTimes;


/***/ }),

/***/ "../node_modules/lodash/_baseToString.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_baseToString.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "../node_modules/lodash/_Symbol.js"),
    arrayMap = __webpack_require__(/*! ./_arrayMap */ "../node_modules/lodash/_arrayMap.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "../node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = baseToString;


/***/ }),

/***/ "../node_modules/lodash/_baseUnary.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_baseUnary.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

module.exports = baseUnary;


/***/ }),

/***/ "../node_modules/lodash/_baseUniq.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_baseUniq.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "../node_modules/lodash/_SetCache.js"),
    arrayIncludes = __webpack_require__(/*! ./_arrayIncludes */ "../node_modules/lodash/_arrayIncludes.js"),
    arrayIncludesWith = __webpack_require__(/*! ./_arrayIncludesWith */ "../node_modules/lodash/_arrayIncludesWith.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "../node_modules/lodash/_cacheHas.js"),
    createSet = __webpack_require__(/*! ./_createSet */ "../node_modules/lodash/_createSet.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "../node_modules/lodash/_setToArray.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

module.exports = baseUniq;


/***/ }),

/***/ "../node_modules/lodash/_cacheHas.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_cacheHas.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if a `cache` value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

module.exports = cacheHas;


/***/ }),

/***/ "../node_modules/lodash/_castPath.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_castPath.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "../node_modules/lodash/_isKey.js"),
    stringToPath = __webpack_require__(/*! ./_stringToPath */ "../node_modules/lodash/_stringToPath.js"),
    toString = __webpack_require__(/*! ./toString */ "../node_modules/lodash/toString.js");

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @param {Object} [object] The object to query keys on.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value, object) {
  if (isArray(value)) {
    return value;
  }
  return isKey(value, object) ? [value] : stringToPath(toString(value));
}

module.exports = castPath;


/***/ }),

/***/ "../node_modules/lodash/_cloneArrayBuffer.js":
/*!***************************************************!*\
  !*** ../node_modules/lodash/_cloneArrayBuffer.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "../node_modules/lodash/_Uint8Array.js");

/**
 * Creates a clone of `arrayBuffer`.
 *
 * @private
 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
 * @returns {ArrayBuffer} Returns the cloned array buffer.
 */
function cloneArrayBuffer(arrayBuffer) {
  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
  return result;
}

module.exports = cloneArrayBuffer;


/***/ }),

/***/ "../node_modules/lodash/_cloneBuffer.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_cloneBuffer.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined,
    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;

/**
 * Creates a clone of  `buffer`.
 *
 * @private
 * @param {Buffer} buffer The buffer to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Buffer} Returns the cloned buffer.
 */
function cloneBuffer(buffer, isDeep) {
  if (isDeep) {
    return buffer.slice();
  }
  var length = buffer.length,
      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

  buffer.copy(result);
  return result;
}

module.exports = cloneBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "../node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/lodash/_cloneDataView.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_cloneDataView.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "../node_modules/lodash/_cloneArrayBuffer.js");

/**
 * Creates a clone of `dataView`.
 *
 * @private
 * @param {Object} dataView The data view to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned data view.
 */
function cloneDataView(dataView, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
}

module.exports = cloneDataView;


/***/ }),

/***/ "../node_modules/lodash/_cloneRegExp.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_cloneRegExp.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used to match `RegExp` flags from their coerced string values. */
var reFlags = /\w*$/;

/**
 * Creates a clone of `regexp`.
 *
 * @private
 * @param {Object} regexp The regexp to clone.
 * @returns {Object} Returns the cloned regexp.
 */
function cloneRegExp(regexp) {
  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
  result.lastIndex = regexp.lastIndex;
  return result;
}

module.exports = cloneRegExp;


/***/ }),

/***/ "../node_modules/lodash/_cloneSymbol.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_cloneSymbol.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "../node_modules/lodash/_Symbol.js");

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * Creates a clone of the `symbol` object.
 *
 * @private
 * @param {Object} symbol The symbol object to clone.
 * @returns {Object} Returns the cloned symbol object.
 */
function cloneSymbol(symbol) {
  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
}

module.exports = cloneSymbol;


/***/ }),

/***/ "../node_modules/lodash/_cloneTypedArray.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_cloneTypedArray.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "../node_modules/lodash/_cloneArrayBuffer.js");

/**
 * Creates a clone of `typedArray`.
 *
 * @private
 * @param {Object} typedArray The typed array to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the cloned typed array.
 */
function cloneTypedArray(typedArray, isDeep) {
  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
}

module.exports = cloneTypedArray;


/***/ }),

/***/ "../node_modules/lodash/_copyArray.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_copyArray.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Copies the values of `source` to `array`.
 *
 * @private
 * @param {Array} source The array to copy values from.
 * @param {Array} [array=[]] The array to copy values to.
 * @returns {Array} Returns `array`.
 */
function copyArray(source, array) {
  var index = -1,
      length = source.length;

  array || (array = Array(length));
  while (++index < length) {
    array[index] = source[index];
  }
  return array;
}

module.exports = copyArray;


/***/ }),

/***/ "../node_modules/lodash/_copyObject.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_copyObject.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assignValue = __webpack_require__(/*! ./_assignValue */ "../node_modules/lodash/_assignValue.js"),
    baseAssignValue = __webpack_require__(/*! ./_baseAssignValue */ "../node_modules/lodash/_baseAssignValue.js");

/**
 * Copies properties of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy properties from.
 * @param {Array} props The property identifiers to copy.
 * @param {Object} [object={}] The object to copy properties to.
 * @param {Function} [customizer] The function to customize copied values.
 * @returns {Object} Returns `object`.
 */
function copyObject(source, props, object, customizer) {
  var isNew = !object;
  object || (object = {});

  var index = -1,
      length = props.length;

  while (++index < length) {
    var key = props[index];

    var newValue = customizer
      ? customizer(object[key], source[key], key, object, source)
      : undefined;

    if (newValue === undefined) {
      newValue = source[key];
    }
    if (isNew) {
      baseAssignValue(object, key, newValue);
    } else {
      assignValue(object, key, newValue);
    }
  }
  return object;
}

module.exports = copyObject;


/***/ }),

/***/ "../node_modules/lodash/_copySymbols.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_copySymbols.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "../node_modules/lodash/_copyObject.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "../node_modules/lodash/_getSymbols.js");

/**
 * Copies own symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbols(source, object) {
  return copyObject(source, getSymbols(source), object);
}

module.exports = copySymbols;


/***/ }),

/***/ "../node_modules/lodash/_copySymbolsIn.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_copySymbolsIn.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "../node_modules/lodash/_copyObject.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "../node_modules/lodash/_getSymbolsIn.js");

/**
 * Copies own and inherited symbols of `source` to `object`.
 *
 * @private
 * @param {Object} source The object to copy symbols from.
 * @param {Object} [object={}] The object to copy symbols to.
 * @returns {Object} Returns `object`.
 */
function copySymbolsIn(source, object) {
  return copyObject(source, getSymbolsIn(source), object);
}

module.exports = copySymbolsIn;


/***/ }),

/***/ "../node_modules/lodash/_coreJsData.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_coreJsData.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js");

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

module.exports = coreJsData;


/***/ }),

/***/ "../node_modules/lodash/_createAssigner.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_createAssigner.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseRest = __webpack_require__(/*! ./_baseRest */ "../node_modules/lodash/_baseRest.js"),
    isIterateeCall = __webpack_require__(/*! ./_isIterateeCall */ "../node_modules/lodash/_isIterateeCall.js");

/**
 * Creates a function like `_.assign`.
 *
 * @private
 * @param {Function} assigner The function to assign values.
 * @returns {Function} Returns the new assigner function.
 */
function createAssigner(assigner) {
  return baseRest(function(object, sources) {
    var index = -1,
        length = sources.length,
        customizer = length > 1 ? sources[length - 1] : undefined,
        guard = length > 2 ? sources[2] : undefined;

    customizer = (assigner.length > 3 && typeof customizer == 'function')
      ? (length--, customizer)
      : undefined;

    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
      customizer = length < 3 ? undefined : customizer;
      length = 1;
    }
    object = Object(object);
    while (++index < length) {
      var source = sources[index];
      if (source) {
        assigner(object, source, index, customizer);
      }
    }
    return object;
  });
}

module.exports = createAssigner;


/***/ }),

/***/ "../node_modules/lodash/_createBaseFor.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_createBaseFor.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

module.exports = createBaseFor;


/***/ }),

/***/ "../node_modules/lodash/_createSet.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_createSet.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Set = __webpack_require__(/*! ./_Set */ "../node_modules/lodash/_Set.js"),
    noop = __webpack_require__(/*! ./noop */ "../node_modules/lodash/noop.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "../node_modules/lodash/_setToArray.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

module.exports = createSet;


/***/ }),

/***/ "../node_modules/lodash/_defineProperty.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_defineProperty.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "../node_modules/lodash/_getNative.js");

var defineProperty = (function() {
  try {
    var func = getNative(Object, 'defineProperty');
    func({}, '', {});
    return func;
  } catch (e) {}
}());

module.exports = defineProperty;


/***/ }),

/***/ "../node_modules/lodash/_equalArrays.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_equalArrays.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var SetCache = __webpack_require__(/*! ./_SetCache */ "../node_modules/lodash/_SetCache.js"),
    arraySome = __webpack_require__(/*! ./_arraySome */ "../node_modules/lodash/_arraySome.js"),
    cacheHas = __webpack_require__(/*! ./_cacheHas */ "../node_modules/lodash/_cacheHas.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/**
 * A specialized version of `baseIsEqualDeep` for arrays with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Array} array The array to compare.
 * @param {Array} other The other array to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `array` and `other` objects.
 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
 */
function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      arrLength = array.length,
      othLength = other.length;

  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
    return false;
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(array);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var index = -1,
      result = true,
      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

  stack.set(array, other);
  stack.set(other, array);

  // Ignore non-index properties.
  while (++index < arrLength) {
    var arrValue = array[index],
        othValue = other[index];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, arrValue, index, other, array, stack)
        : customizer(arrValue, othValue, index, array, other, stack);
    }
    if (compared !== undefined) {
      if (compared) {
        continue;
      }
      result = false;
      break;
    }
    // Recursively compare arrays (susceptible to call stack limits).
    if (seen) {
      if (!arraySome(other, function(othValue, othIndex) {
            if (!cacheHas(seen, othIndex) &&
                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
        result = false;
        break;
      }
    } else if (!(
          arrValue === othValue ||
            equalFunc(arrValue, othValue, bitmask, customizer, stack)
        )) {
      result = false;
      break;
    }
  }
  stack['delete'](array);
  stack['delete'](other);
  return result;
}

module.exports = equalArrays;


/***/ }),

/***/ "../node_modules/lodash/_equalByTag.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_equalByTag.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "../node_modules/lodash/_Symbol.js"),
    Uint8Array = __webpack_require__(/*! ./_Uint8Array */ "../node_modules/lodash/_Uint8Array.js"),
    eq = __webpack_require__(/*! ./eq */ "../node_modules/lodash/eq.js"),
    equalArrays = __webpack_require__(/*! ./_equalArrays */ "../node_modules/lodash/_equalArrays.js"),
    mapToArray = __webpack_require__(/*! ./_mapToArray */ "../node_modules/lodash/_mapToArray.js"),
    setToArray = __webpack_require__(/*! ./_setToArray */ "../node_modules/lodash/_setToArray.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1,
    COMPARE_UNORDERED_FLAG = 2;

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    errorTag = '[object Error]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]';

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

/**
 * A specialized version of `baseIsEqualDeep` for comparing objects of
 * the same `toStringTag`.
 *
 * **Note:** This function only supports comparing values with tags of
 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {string} tag The `toStringTag` of the objects to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
  switch (tag) {
    case dataViewTag:
      if ((object.byteLength != other.byteLength) ||
          (object.byteOffset != other.byteOffset)) {
        return false;
      }
      object = object.buffer;
      other = other.buffer;

    case arrayBufferTag:
      if ((object.byteLength != other.byteLength) ||
          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
        return false;
      }
      return true;

    case boolTag:
    case dateTag:
    case numberTag:
      // Coerce booleans to `1` or `0` and dates to milliseconds.
      // Invalid dates are coerced to `NaN`.
      return eq(+object, +other);

    case errorTag:
      return object.name == other.name && object.message == other.message;

    case regexpTag:
    case stringTag:
      // Coerce regexes to strings and treat strings, primitives and objects,
      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
      // for more details.
      return object == (other + '');

    case mapTag:
      var convert = mapToArray;

    case setTag:
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
      convert || (convert = setToArray);

      if (object.size != other.size && !isPartial) {
        return false;
      }
      // Assume cyclic values are equal.
      var stacked = stack.get(object);
      if (stacked) {
        return stacked == other;
      }
      bitmask |= COMPARE_UNORDERED_FLAG;

      // Recursively compare objects (susceptible to call stack limits).
      stack.set(object, other);
      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
      stack['delete'](object);
      return result;

    case symbolTag:
      if (symbolValueOf) {
        return symbolValueOf.call(object) == symbolValueOf.call(other);
      }
  }
  return false;
}

module.exports = equalByTag;


/***/ }),

/***/ "../node_modules/lodash/_equalObjects.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_equalObjects.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getAllKeys = __webpack_require__(/*! ./_getAllKeys */ "../node_modules/lodash/_getAllKeys.js");

/** Used to compose bitmasks for value comparisons. */
var COMPARE_PARTIAL_FLAG = 1;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * A specialized version of `baseIsEqualDeep` for objects with support for
 * partial deep comparisons.
 *
 * @private
 * @param {Object} object The object to compare.
 * @param {Object} other The other object to compare.
 * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
 * @param {Function} customizer The function to customize comparisons.
 * @param {Function} equalFunc The function to determine equivalents of values.
 * @param {Object} stack Tracks traversed `object` and `other` objects.
 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
 */
function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
      objProps = getAllKeys(object),
      objLength = objProps.length,
      othProps = getAllKeys(other),
      othLength = othProps.length;

  if (objLength != othLength && !isPartial) {
    return false;
  }
  var index = objLength;
  while (index--) {
    var key = objProps[index];
    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
      return false;
    }
  }
  // Assume cyclic values are equal.
  var stacked = stack.get(object);
  if (stacked && stack.get(other)) {
    return stacked == other;
  }
  var result = true;
  stack.set(object, other);
  stack.set(other, object);

  var skipCtor = isPartial;
  while (++index < objLength) {
    key = objProps[index];
    var objValue = object[key],
        othValue = other[key];

    if (customizer) {
      var compared = isPartial
        ? customizer(othValue, objValue, key, other, object, stack)
        : customizer(objValue, othValue, key, object, other, stack);
    }
    // Recursively compare objects (susceptible to call stack limits).
    if (!(compared === undefined
          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
          : compared
        )) {
      result = false;
      break;
    }
    skipCtor || (skipCtor = key == 'constructor');
  }
  if (result && !skipCtor) {
    var objCtor = object.constructor,
        othCtor = other.constructor;

    // Non `Object` object instances with different constructors are not equal.
    if (objCtor != othCtor &&
        ('constructor' in object && 'constructor' in other) &&
        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
      result = false;
    }
  }
  stack['delete'](object);
  stack['delete'](other);
  return result;
}

module.exports = equalObjects;


/***/ }),

/***/ "../node_modules/lodash/_freeGlobal.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_freeGlobal.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

module.exports = freeGlobal;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "../node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../node_modules/lodash/_getAllKeys.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_getAllKeys.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "../node_modules/lodash/_baseGetAllKeys.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "../node_modules/lodash/_getSymbols.js"),
    keys = __webpack_require__(/*! ./keys */ "../node_modules/lodash/keys.js");

/**
 * Creates an array of own enumerable property names and symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeys(object) {
  return baseGetAllKeys(object, keys, getSymbols);
}

module.exports = getAllKeys;


/***/ }),

/***/ "../node_modules/lodash/_getAllKeysIn.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_getAllKeysIn.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetAllKeys = __webpack_require__(/*! ./_baseGetAllKeys */ "../node_modules/lodash/_baseGetAllKeys.js"),
    getSymbolsIn = __webpack_require__(/*! ./_getSymbolsIn */ "../node_modules/lodash/_getSymbolsIn.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "../node_modules/lodash/keysIn.js");

/**
 * Creates an array of own and inherited enumerable property names and
 * symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names and symbols.
 */
function getAllKeysIn(object) {
  return baseGetAllKeys(object, keysIn, getSymbolsIn);
}

module.exports = getAllKeysIn;


/***/ }),

/***/ "../node_modules/lodash/_getMapData.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_getMapData.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isKeyable = __webpack_require__(/*! ./_isKeyable */ "../node_modules/lodash/_isKeyable.js");

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

module.exports = getMapData;


/***/ }),

/***/ "../node_modules/lodash/_getMatchData.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_getMatchData.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isStrictComparable = __webpack_require__(/*! ./_isStrictComparable */ "../node_modules/lodash/_isStrictComparable.js"),
    keys = __webpack_require__(/*! ./keys */ "../node_modules/lodash/keys.js");

/**
 * Gets the property names, values, and compare flags of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the match data of `object`.
 */
function getMatchData(object) {
  var result = keys(object),
      length = result.length;

  while (length--) {
    var key = result[length],
        value = object[key];

    result[length] = [key, value, isStrictComparable(value)];
  }
  return result;
}

module.exports = getMatchData;


/***/ }),

/***/ "../node_modules/lodash/_getNative.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_getNative.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsNative = __webpack_require__(/*! ./_baseIsNative */ "../node_modules/lodash/_baseIsNative.js"),
    getValue = __webpack_require__(/*! ./_getValue */ "../node_modules/lodash/_getValue.js");

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

module.exports = getNative;


/***/ }),

/***/ "../node_modules/lodash/_getPrototype.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_getPrototype.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "../node_modules/lodash/_overArg.js");

/** Built-in value references. */
var getPrototype = overArg(Object.getPrototypeOf, Object);

module.exports = getPrototype;


/***/ }),

/***/ "../node_modules/lodash/_getRawTag.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_getRawTag.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Symbol = __webpack_require__(/*! ./_Symbol */ "../node_modules/lodash/_Symbol.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag = Symbol ? Symbol.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag),
      tag = value[symToStringTag];

  try {
    value[symToStringTag] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag] = tag;
    } else {
      delete value[symToStringTag];
    }
  }
  return result;
}

module.exports = getRawTag;


/***/ }),

/***/ "../node_modules/lodash/_getSymbols.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_getSymbols.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayFilter = __webpack_require__(/*! ./_arrayFilter */ "../node_modules/lodash/_arrayFilter.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "../node_modules/lodash/stubArray.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
  if (object == null) {
    return [];
  }
  object = Object(object);
  return arrayFilter(nativeGetSymbols(object), function(symbol) {
    return propertyIsEnumerable.call(object, symbol);
  });
};

module.exports = getSymbols;


/***/ }),

/***/ "../node_modules/lodash/_getSymbolsIn.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_getSymbolsIn.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayPush = __webpack_require__(/*! ./_arrayPush */ "../node_modules/lodash/_arrayPush.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "../node_modules/lodash/_getPrototype.js"),
    getSymbols = __webpack_require__(/*! ./_getSymbols */ "../node_modules/lodash/_getSymbols.js"),
    stubArray = __webpack_require__(/*! ./stubArray */ "../node_modules/lodash/stubArray.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeGetSymbols = Object.getOwnPropertySymbols;

/**
 * Creates an array of the own and inherited enumerable symbols of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of symbols.
 */
var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
  var result = [];
  while (object) {
    arrayPush(result, getSymbols(object));
    object = getPrototype(object);
  }
  return result;
};

module.exports = getSymbolsIn;


/***/ }),

/***/ "../node_modules/lodash/_getTag.js":
/*!*****************************************!*\
  !*** ../node_modules/lodash/_getTag.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DataView = __webpack_require__(/*! ./_DataView */ "../node_modules/lodash/_DataView.js"),
    Map = __webpack_require__(/*! ./_Map */ "../node_modules/lodash/_Map.js"),
    Promise = __webpack_require__(/*! ./_Promise */ "../node_modules/lodash/_Promise.js"),
    Set = __webpack_require__(/*! ./_Set */ "../node_modules/lodash/_Set.js"),
    WeakMap = __webpack_require__(/*! ./_WeakMap */ "../node_modules/lodash/_WeakMap.js"),
    baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "../node_modules/lodash/_baseGetTag.js"),
    toSource = __webpack_require__(/*! ./_toSource */ "../node_modules/lodash/_toSource.js");

/** `Object#toString` result references. */
var mapTag = '[object Map]',
    objectTag = '[object Object]',
    promiseTag = '[object Promise]',
    setTag = '[object Set]',
    weakMapTag = '[object WeakMap]';

var dataViewTag = '[object DataView]';

/** Used to detect maps, sets, and weakmaps. */
var dataViewCtorString = toSource(DataView),
    mapCtorString = toSource(Map),
    promiseCtorString = toSource(Promise),
    setCtorString = toSource(Set),
    weakMapCtorString = toSource(WeakMap);

/**
 * Gets the `toStringTag` of `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
var getTag = baseGetTag;

// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
    (Map && getTag(new Map) != mapTag) ||
    (Promise && getTag(Promise.resolve()) != promiseTag) ||
    (Set && getTag(new Set) != setTag) ||
    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
  getTag = function(value) {
    var result = baseGetTag(value),
        Ctor = result == objectTag ? value.constructor : undefined,
        ctorString = Ctor ? toSource(Ctor) : '';

    if (ctorString) {
      switch (ctorString) {
        case dataViewCtorString: return dataViewTag;
        case mapCtorString: return mapTag;
        case promiseCtorString: return promiseTag;
        case setCtorString: return setTag;
        case weakMapCtorString: return weakMapTag;
      }
    }
    return result;
  };
}

module.exports = getTag;


/***/ }),

/***/ "../node_modules/lodash/_getValue.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_getValue.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

module.exports = getValue;


/***/ }),

/***/ "../node_modules/lodash/_hasPath.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_hasPath.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var castPath = __webpack_require__(/*! ./_castPath */ "../node_modules/lodash/_castPath.js"),
    isArguments = __webpack_require__(/*! ./isArguments */ "../node_modules/lodash/isArguments.js"),
    isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "../node_modules/lodash/_isIndex.js"),
    isLength = __webpack_require__(/*! ./isLength */ "../node_modules/lodash/isLength.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "../node_modules/lodash/_toKey.js");

/**
 * Checks if `path` exists on `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @param {Function} hasFunc The function to check properties.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 */
function hasPath(object, path, hasFunc) {
  path = castPath(path, object);

  var index = -1,
      length = path.length,
      result = false;

  while (++index < length) {
    var key = toKey(path[index]);
    if (!(result = object != null && hasFunc(object, key))) {
      break;
    }
    object = object[key];
  }
  if (result || ++index != length) {
    return result;
  }
  length = object == null ? 0 : object.length;
  return !!length && isLength(length) && isIndex(key, length) &&
    (isArray(object) || isArguments(object));
}

module.exports = hasPath;


/***/ }),

/***/ "../node_modules/lodash/_hashClear.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_hashClear.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "../node_modules/lodash/_nativeCreate.js");

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
  this.size = 0;
}

module.exports = hashClear;


/***/ }),

/***/ "../node_modules/lodash/_hashDelete.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_hashDelete.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  var result = this.has(key) && delete this.__data__[key];
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = hashDelete;


/***/ }),

/***/ "../node_modules/lodash/_hashGet.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_hashGet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "../node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

module.exports = hashGet;


/***/ }),

/***/ "../node_modules/lodash/_hashHas.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_hashHas.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "../node_modules/lodash/_nativeCreate.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
}

module.exports = hashHas;


/***/ }),

/***/ "../node_modules/lodash/_hashSet.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_hashSet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeCreate = __webpack_require__(/*! ./_nativeCreate */ "../node_modules/lodash/_nativeCreate.js");

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  this.size += this.has(key) ? 0 : 1;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

module.exports = hashSet;


/***/ }),

/***/ "../node_modules/lodash/_initCloneArray.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_initCloneArray.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Initializes an array clone.
 *
 * @private
 * @param {Array} array The array to clone.
 * @returns {Array} Returns the initialized clone.
 */
function initCloneArray(array) {
  var length = array.length,
      result = new array.constructor(length);

  // Add properties assigned by `RegExp#exec`.
  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
    result.index = array.index;
    result.input = array.input;
  }
  return result;
}

module.exports = initCloneArray;


/***/ }),

/***/ "../node_modules/lodash/_initCloneByTag.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_initCloneByTag.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var cloneArrayBuffer = __webpack_require__(/*! ./_cloneArrayBuffer */ "../node_modules/lodash/_cloneArrayBuffer.js"),
    cloneDataView = __webpack_require__(/*! ./_cloneDataView */ "../node_modules/lodash/_cloneDataView.js"),
    cloneRegExp = __webpack_require__(/*! ./_cloneRegExp */ "../node_modules/lodash/_cloneRegExp.js"),
    cloneSymbol = __webpack_require__(/*! ./_cloneSymbol */ "../node_modules/lodash/_cloneSymbol.js"),
    cloneTypedArray = __webpack_require__(/*! ./_cloneTypedArray */ "../node_modules/lodash/_cloneTypedArray.js");

/** `Object#toString` result references. */
var boolTag = '[object Boolean]',
    dateTag = '[object Date]',
    mapTag = '[object Map]',
    numberTag = '[object Number]',
    regexpTag = '[object RegExp]',
    setTag = '[object Set]',
    stringTag = '[object String]',
    symbolTag = '[object Symbol]';

var arrayBufferTag = '[object ArrayBuffer]',
    dataViewTag = '[object DataView]',
    float32Tag = '[object Float32Array]',
    float64Tag = '[object Float64Array]',
    int8Tag = '[object Int8Array]',
    int16Tag = '[object Int16Array]',
    int32Tag = '[object Int32Array]',
    uint8Tag = '[object Uint8Array]',
    uint8ClampedTag = '[object Uint8ClampedArray]',
    uint16Tag = '[object Uint16Array]',
    uint32Tag = '[object Uint32Array]';

/**
 * Initializes an object clone based on its `toStringTag`.
 *
 * **Note:** This function only supports cloning values with tags of
 * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
 *
 * @private
 * @param {Object} object The object to clone.
 * @param {string} tag The `toStringTag` of the object to clone.
 * @param {boolean} [isDeep] Specify a deep clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneByTag(object, tag, isDeep) {
  var Ctor = object.constructor;
  switch (tag) {
    case arrayBufferTag:
      return cloneArrayBuffer(object);

    case boolTag:
    case dateTag:
      return new Ctor(+object);

    case dataViewTag:
      return cloneDataView(object, isDeep);

    case float32Tag: case float64Tag:
    case int8Tag: case int16Tag: case int32Tag:
    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
      return cloneTypedArray(object, isDeep);

    case mapTag:
      return new Ctor;

    case numberTag:
    case stringTag:
      return new Ctor(object);

    case regexpTag:
      return cloneRegExp(object);

    case setTag:
      return new Ctor;

    case symbolTag:
      return cloneSymbol(object);
  }
}

module.exports = initCloneByTag;


/***/ }),

/***/ "../node_modules/lodash/_initCloneObject.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_initCloneObject.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseCreate = __webpack_require__(/*! ./_baseCreate */ "../node_modules/lodash/_baseCreate.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "../node_modules/lodash/_getPrototype.js"),
    isPrototype = __webpack_require__(/*! ./_isPrototype */ "../node_modules/lodash/_isPrototype.js");

/**
 * Initializes an object clone.
 *
 * @private
 * @param {Object} object The object to clone.
 * @returns {Object} Returns the initialized clone.
 */
function initCloneObject(object) {
  return (typeof object.constructor == 'function' && !isPrototype(object))
    ? baseCreate(getPrototype(object))
    : {};
}

module.exports = initCloneObject;


/***/ }),

/***/ "../node_modules/lodash/_isIndex.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_isIndex.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

module.exports = isIndex;


/***/ }),

/***/ "../node_modules/lodash/_isIterateeCall.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_isIterateeCall.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var eq = __webpack_require__(/*! ./eq */ "../node_modules/lodash/eq.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "../node_modules/lodash/isArrayLike.js"),
    isIndex = __webpack_require__(/*! ./_isIndex */ "../node_modules/lodash/_isIndex.js"),
    isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js");

/**
 * Checks if the given arguments are from an iteratee call.
 *
 * @private
 * @param {*} value The potential iteratee value argument.
 * @param {*} index The potential iteratee index or key argument.
 * @param {*} object The potential iteratee object argument.
 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
 *  else `false`.
 */
function isIterateeCall(value, index, object) {
  if (!isObject(object)) {
    return false;
  }
  var type = typeof index;
  if (type == 'number'
        ? (isArrayLike(object) && isIndex(index, object.length))
        : (type == 'string' && index in object)
      ) {
    return eq(object[index], value);
  }
  return false;
}

module.exports = isIterateeCall;


/***/ }),

/***/ "../node_modules/lodash/_isKey.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/_isKey.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isArray = __webpack_require__(/*! ./isArray */ "../node_modules/lodash/isArray.js"),
    isSymbol = __webpack_require__(/*! ./isSymbol */ "../node_modules/lodash/isSymbol.js");

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/;

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

module.exports = isKey;


/***/ }),

/***/ "../node_modules/lodash/_isKeyable.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/_isKeyable.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

module.exports = isKeyable;


/***/ }),

/***/ "../node_modules/lodash/_isMasked.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_isMasked.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var coreJsData = __webpack_require__(/*! ./_coreJsData */ "../node_modules/lodash/_coreJsData.js");

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

module.exports = isMasked;


/***/ }),

/***/ "../node_modules/lodash/_isPrototype.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_isPrototype.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

  return value === proto;
}

module.exports = isPrototype;


/***/ }),

/***/ "../node_modules/lodash/_isStrictComparable.js":
/*!*****************************************************!*\
  !*** ../node_modules/lodash/_isStrictComparable.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js");

/**
 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` if suitable for strict
 *  equality comparisons, else `false`.
 */
function isStrictComparable(value) {
  return value === value && !isObject(value);
}

module.exports = isStrictComparable;


/***/ }),

/***/ "../node_modules/lodash/_listCacheClear.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_listCacheClear.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
  this.size = 0;
}

module.exports = listCacheClear;


/***/ }),

/***/ "../node_modules/lodash/_listCacheDelete.js":
/*!**************************************************!*\
  !*** ../node_modules/lodash/_listCacheDelete.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "../node_modules/lodash/_assocIndexOf.js");

/** Used for built-in method references. */
var arrayProto = Array.prototype;

/** Built-in value references. */
var splice = arrayProto.splice;

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  --this.size;
  return true;
}

module.exports = listCacheDelete;


/***/ }),

/***/ "../node_modules/lodash/_listCacheGet.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_listCacheGet.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "../node_modules/lodash/_assocIndexOf.js");

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

module.exports = listCacheGet;


/***/ }),

/***/ "../node_modules/lodash/_listCacheHas.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_listCacheHas.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "../node_modules/lodash/_assocIndexOf.js");

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

module.exports = listCacheHas;


/***/ }),

/***/ "../node_modules/lodash/_listCacheSet.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_listCacheSet.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assocIndexOf = __webpack_require__(/*! ./_assocIndexOf */ "../node_modules/lodash/_assocIndexOf.js");

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    ++this.size;
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

module.exports = listCacheSet;


/***/ }),

/***/ "../node_modules/lodash/_mapCacheClear.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_mapCacheClear.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Hash = __webpack_require__(/*! ./_Hash */ "../node_modules/lodash/_Hash.js"),
    ListCache = __webpack_require__(/*! ./_ListCache */ "../node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "../node_modules/lodash/_Map.js");

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.size = 0;
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

module.exports = mapCacheClear;


/***/ }),

/***/ "../node_modules/lodash/_mapCacheDelete.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_mapCacheDelete.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "../node_modules/lodash/_getMapData.js");

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  var result = getMapData(this, key)['delete'](key);
  this.size -= result ? 1 : 0;
  return result;
}

module.exports = mapCacheDelete;


/***/ }),

/***/ "../node_modules/lodash/_mapCacheGet.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_mapCacheGet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "../node_modules/lodash/_getMapData.js");

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

module.exports = mapCacheGet;


/***/ }),

/***/ "../node_modules/lodash/_mapCacheHas.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_mapCacheHas.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "../node_modules/lodash/_getMapData.js");

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

module.exports = mapCacheHas;


/***/ }),

/***/ "../node_modules/lodash/_mapCacheSet.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_mapCacheSet.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getMapData = __webpack_require__(/*! ./_getMapData */ "../node_modules/lodash/_getMapData.js");

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  var data = getMapData(this, key),
      size = data.size;

  data.set(key, value);
  this.size += data.size == size ? 0 : 1;
  return this;
}

module.exports = mapCacheSet;


/***/ }),

/***/ "../node_modules/lodash/_mapToArray.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_mapToArray.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Converts `map` to its key-value pairs.
 *
 * @private
 * @param {Object} map The map to convert.
 * @returns {Array} Returns the key-value pairs.
 */
function mapToArray(map) {
  var index = -1,
      result = Array(map.size);

  map.forEach(function(value, key) {
    result[++index] = [key, value];
  });
  return result;
}

module.exports = mapToArray;


/***/ }),

/***/ "../node_modules/lodash/_matchesStrictComparable.js":
/*!**********************************************************!*\
  !*** ../node_modules/lodash/_matchesStrictComparable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `matchesProperty` for source values suitable
 * for strict equality comparisons, i.e. `===`.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @param {*} srcValue The value to match.
 * @returns {Function} Returns the new spec function.
 */
function matchesStrictComparable(key, srcValue) {
  return function(object) {
    if (object == null) {
      return false;
    }
    return object[key] === srcValue &&
      (srcValue !== undefined || (key in Object(object)));
  };
}

module.exports = matchesStrictComparable;


/***/ }),

/***/ "../node_modules/lodash/_memoizeCapped.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_memoizeCapped.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var memoize = __webpack_require__(/*! ./memoize */ "../node_modules/lodash/memoize.js");

/** Used as the maximum memoize cache size. */
var MAX_MEMOIZE_SIZE = 500;

/**
 * A specialized version of `_.memoize` which clears the memoized function's
 * cache when it exceeds `MAX_MEMOIZE_SIZE`.
 *
 * @private
 * @param {Function} func The function to have its output memoized.
 * @returns {Function} Returns the new memoized function.
 */
function memoizeCapped(func) {
  var result = memoize(func, function(key) {
    if (cache.size === MAX_MEMOIZE_SIZE) {
      cache.clear();
    }
    return key;
  });

  var cache = result.cache;
  return result;
}

module.exports = memoizeCapped;


/***/ }),

/***/ "../node_modules/lodash/_nativeCreate.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_nativeCreate.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getNative = __webpack_require__(/*! ./_getNative */ "../node_modules/lodash/_getNative.js");

/* Built-in method references that are verified to be native. */
var nativeCreate = getNative(Object, 'create');

module.exports = nativeCreate;


/***/ }),

/***/ "../node_modules/lodash/_nativeKeys.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_nativeKeys.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var overArg = __webpack_require__(/*! ./_overArg */ "../node_modules/lodash/_overArg.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

module.exports = nativeKeys;


/***/ }),

/***/ "../node_modules/lodash/_nativeKeysIn.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_nativeKeysIn.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This function is like
 * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * except that it includes inherited enumerable properties.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function nativeKeysIn(object) {
  var result = [];
  if (object != null) {
    for (var key in Object(object)) {
      result.push(key);
    }
  }
  return result;
}

module.exports = nativeKeysIn;


/***/ }),

/***/ "../node_modules/lodash/_nodeUtil.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_nodeUtil.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "../node_modules/lodash/_freeGlobal.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule && freeModule.require && freeModule.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

module.exports = nodeUtil;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "../node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/lodash/_objectToString.js":
/*!*************************************************!*\
  !*** ../node_modules/lodash/_objectToString.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var objectProto = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString.call(value);
}

module.exports = objectToString;


/***/ }),

/***/ "../node_modules/lodash/_overArg.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_overArg.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

module.exports = overArg;


/***/ }),

/***/ "../node_modules/lodash/_overRest.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_overRest.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var apply = __webpack_require__(/*! ./_apply */ "../node_modules/lodash/_apply.js");

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeMax = Math.max;

/**
 * A specialized version of `baseRest` which transforms the rest array.
 *
 * @private
 * @param {Function} func The function to apply a rest parameter to.
 * @param {number} [start=func.length-1] The start position of the rest parameter.
 * @param {Function} transform The rest array transform.
 * @returns {Function} Returns the new function.
 */
function overRest(func, start, transform) {
  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
  return function() {
    var args = arguments,
        index = -1,
        length = nativeMax(args.length - start, 0),
        array = Array(length);

    while (++index < length) {
      array[index] = args[start + index];
    }
    index = -1;
    var otherArgs = Array(start + 1);
    while (++index < start) {
      otherArgs[index] = args[index];
    }
    otherArgs[start] = transform(array);
    return apply(func, this, otherArgs);
  };
}

module.exports = overRest;


/***/ }),

/***/ "../node_modules/lodash/_root.js":
/*!***************************************!*\
  !*** ../node_modules/lodash/_root.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ "../node_modules/lodash/_freeGlobal.js");

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

module.exports = root;


/***/ }),

/***/ "../node_modules/lodash/_safeGet.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/_safeGet.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function safeGet(object, key) {
  if (key === 'constructor' && typeof object[key] === 'function') {
    return;
  }

  if (key == '__proto__') {
    return;
  }

  return object[key];
}

module.exports = safeGet;


/***/ }),

/***/ "../node_modules/lodash/_setCacheAdd.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_setCacheAdd.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

module.exports = setCacheAdd;


/***/ }),

/***/ "../node_modules/lodash/_setCacheHas.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_setCacheHas.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

module.exports = setCacheHas;


/***/ }),

/***/ "../node_modules/lodash/_setToArray.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_setToArray.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

module.exports = setToArray;


/***/ }),

/***/ "../node_modules/lodash/_setToString.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_setToString.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseSetToString = __webpack_require__(/*! ./_baseSetToString */ "../node_modules/lodash/_baseSetToString.js"),
    shortOut = __webpack_require__(/*! ./_shortOut */ "../node_modules/lodash/_shortOut.js");

/**
 * Sets the `toString` method of `func` to return `string`.
 *
 * @private
 * @param {Function} func The function to modify.
 * @param {Function} string The `toString` result.
 * @returns {Function} Returns `func`.
 */
var setToString = shortOut(baseSetToString);

module.exports = setToString;


/***/ }),

/***/ "../node_modules/lodash/_shortOut.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_shortOut.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used to detect hot functions by number of calls within a span of milliseconds. */
var HOT_COUNT = 800,
    HOT_SPAN = 16;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeNow = Date.now;

/**
 * Creates a function that'll short out and invoke `identity` instead
 * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
 * milliseconds.
 *
 * @private
 * @param {Function} func The function to restrict.
 * @returns {Function} Returns the new shortable function.
 */
function shortOut(func) {
  var count = 0,
      lastCalled = 0;

  return function() {
    var stamp = nativeNow(),
        remaining = HOT_SPAN - (stamp - lastCalled);

    lastCalled = stamp;
    if (remaining > 0) {
      if (++count >= HOT_COUNT) {
        return arguments[0];
      }
    } else {
      count = 0;
    }
    return func.apply(undefined, arguments);
  };
}

module.exports = shortOut;


/***/ }),

/***/ "../node_modules/lodash/_stackClear.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/_stackClear.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "../node_modules/lodash/_ListCache.js");

/**
 * Removes all key-value entries from the stack.
 *
 * @private
 * @name clear
 * @memberOf Stack
 */
function stackClear() {
  this.__data__ = new ListCache;
  this.size = 0;
}

module.exports = stackClear;


/***/ }),

/***/ "../node_modules/lodash/_stackDelete.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/_stackDelete.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Removes `key` and its value from the stack.
 *
 * @private
 * @name delete
 * @memberOf Stack
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function stackDelete(key) {
  var data = this.__data__,
      result = data['delete'](key);

  this.size = data.size;
  return result;
}

module.exports = stackDelete;


/***/ }),

/***/ "../node_modules/lodash/_stackGet.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_stackGet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Gets the stack value for `key`.
 *
 * @private
 * @name get
 * @memberOf Stack
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function stackGet(key) {
  return this.__data__.get(key);
}

module.exports = stackGet;


/***/ }),

/***/ "../node_modules/lodash/_stackHas.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_stackHas.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if a stack value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Stack
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function stackHas(key) {
  return this.__data__.has(key);
}

module.exports = stackHas;


/***/ }),

/***/ "../node_modules/lodash/_stackSet.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_stackSet.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ListCache = __webpack_require__(/*! ./_ListCache */ "../node_modules/lodash/_ListCache.js"),
    Map = __webpack_require__(/*! ./_Map */ "../node_modules/lodash/_Map.js"),
    MapCache = __webpack_require__(/*! ./_MapCache */ "../node_modules/lodash/_MapCache.js");

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/**
 * Sets the stack `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Stack
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the stack cache instance.
 */
function stackSet(key, value) {
  var data = this.__data__;
  if (data instanceof ListCache) {
    var pairs = data.__data__;
    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
      pairs.push([key, value]);
      this.size = ++data.size;
      return this;
    }
    data = this.__data__ = new MapCache(pairs);
  }
  data.set(key, value);
  this.size = data.size;
  return this;
}

module.exports = stackSet;


/***/ }),

/***/ "../node_modules/lodash/_strictIndexOf.js":
/*!************************************************!*\
  !*** ../node_modules/lodash/_strictIndexOf.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

module.exports = strictIndexOf;


/***/ }),

/***/ "../node_modules/lodash/_stringToPath.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/_stringToPath.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var memoizeCapped = __webpack_require__(/*! ./_memoizeCapped */ "../node_modules/lodash/_memoizeCapped.js");

/** Used to match property names within property paths. */
var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoizeCapped(function(string) {
  var result = [];
  if (string.charCodeAt(0) === 46 /* . */) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, subString) {
    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

module.exports = stringToPath;


/***/ }),

/***/ "../node_modules/lodash/_toKey.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/_toKey.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isSymbol = __webpack_require__(/*! ./isSymbol */ "../node_modules/lodash/isSymbol.js");

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

module.exports = toKey;


/***/ }),

/***/ "../node_modules/lodash/_toSource.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/_toSource.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used for built-in method references. */
var funcProto = Function.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to convert.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

module.exports = toSource;


/***/ }),

/***/ "../node_modules/lodash/cloneDeep.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/cloneDeep.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseClone = __webpack_require__(/*! ./_baseClone */ "../node_modules/lodash/_baseClone.js");

/** Used to compose bitmasks for cloning. */
var CLONE_DEEP_FLAG = 1,
    CLONE_SYMBOLS_FLAG = 4;

/**
 * This method is like `_.clone` except that it recursively clones `value`.
 *
 * @static
 * @memberOf _
 * @since 1.0.0
 * @category Lang
 * @param {*} value The value to recursively clone.
 * @returns {*} Returns the deep cloned value.
 * @see _.clone
 * @example
 *
 * var objects = [{ 'a': 1 }, { 'b': 2 }];
 *
 * var deep = _.cloneDeep(objects);
 * console.log(deep[0] === objects[0]);
 * // => false
 */
function cloneDeep(value) {
  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
}

module.exports = cloneDeep;


/***/ }),

/***/ "../node_modules/lodash/constant.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/constant.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant(value) {
  return function() {
    return value;
  };
}

module.exports = constant;


/***/ }),

/***/ "../node_modules/lodash/eq.js":
/*!************************************!*\
  !*** ../node_modules/lodash/eq.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

module.exports = eq;


/***/ }),

/***/ "../node_modules/lodash/get.js":
/*!*************************************!*\
  !*** ../node_modules/lodash/get.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGet = __webpack_require__(/*! ./_baseGet */ "../node_modules/lodash/_baseGet.js");

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),

/***/ "../node_modules/lodash/hasIn.js":
/*!***************************************!*\
  !*** ../node_modules/lodash/hasIn.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseHasIn = __webpack_require__(/*! ./_baseHasIn */ "../node_modules/lodash/_baseHasIn.js"),
    hasPath = __webpack_require__(/*! ./_hasPath */ "../node_modules/lodash/_hasPath.js");

/**
 * Checks if `path` is a direct or inherited property of `object`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path to check.
 * @returns {boolean} Returns `true` if `path` exists, else `false`.
 * @example
 *
 * var object = _.create({ 'a': _.create({ 'b': 2 }) });
 *
 * _.hasIn(object, 'a');
 * // => true
 *
 * _.hasIn(object, 'a.b');
 * // => true
 *
 * _.hasIn(object, ['a', 'b']);
 * // => true
 *
 * _.hasIn(object, 'b');
 * // => false
 */
function hasIn(object, path) {
  return object != null && hasPath(object, path, baseHasIn);
}

module.exports = hasIn;


/***/ }),

/***/ "../node_modules/lodash/identity.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/identity.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

module.exports = identity;


/***/ }),

/***/ "../node_modules/lodash/isArguments.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/isArguments.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsArguments = __webpack_require__(/*! ./_baseIsArguments */ "../node_modules/lodash/_baseIsArguments.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

module.exports = isArguments;


/***/ }),

/***/ "../node_modules/lodash/isArray.js":
/*!*****************************************!*\
  !*** ../node_modules/lodash/isArray.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

module.exports = isArray;


/***/ }),

/***/ "../node_modules/lodash/isArrayLike.js":
/*!*********************************************!*\
  !*** ../node_modules/lodash/isArrayLike.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isFunction = __webpack_require__(/*! ./isFunction */ "../node_modules/lodash/isFunction.js"),
    isLength = __webpack_require__(/*! ./isLength */ "../node_modules/lodash/isLength.js");

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

module.exports = isArrayLike;


/***/ }),

/***/ "../node_modules/lodash/isArrayLikeObject.js":
/*!***************************************************!*\
  !*** ../node_modules/lodash/isArrayLikeObject.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isArrayLike = __webpack_require__(/*! ./isArrayLike */ "../node_modules/lodash/isArrayLike.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */
function isArrayLikeObject(value) {
  return isObjectLike(value) && isArrayLike(value);
}

module.exports = isArrayLikeObject;


/***/ }),

/***/ "../node_modules/lodash/isBuffer.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/isBuffer.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var root = __webpack_require__(/*! ./_root */ "../node_modules/lodash/_root.js"),
    stubFalse = __webpack_require__(/*! ./stubFalse */ "../node_modules/lodash/stubFalse.js");

/** Detect free variable `exports`. */
var freeExports =  true && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

module.exports = isBuffer;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "../node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/lodash/isFunction.js":
/*!********************************************!*\
  !*** ../node_modules/lodash/isFunction.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "../node_modules/lodash/_baseGetTag.js"),
    isObject = __webpack_require__(/*! ./isObject */ "../node_modules/lodash/isObject.js");

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]',
    funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

module.exports = isFunction;


/***/ }),

/***/ "../node_modules/lodash/isLength.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/isLength.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

module.exports = isLength;


/***/ }),

/***/ "../node_modules/lodash/isMap.js":
/*!***************************************!*\
  !*** ../node_modules/lodash/isMap.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsMap = __webpack_require__(/*! ./_baseIsMap */ "../node_modules/lodash/_baseIsMap.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "../node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "../node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsMap = nodeUtil && nodeUtil.isMap;

/**
 * Checks if `value` is classified as a `Map` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a map, else `false`.
 * @example
 *
 * _.isMap(new Map);
 * // => true
 *
 * _.isMap(new WeakMap);
 * // => false
 */
var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

module.exports = isMap;


/***/ }),

/***/ "../node_modules/lodash/isObject.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/isObject.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

module.exports = isObject;


/***/ }),

/***/ "../node_modules/lodash/isObjectLike.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/isObjectLike.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

module.exports = isObjectLike;


/***/ }),

/***/ "../node_modules/lodash/isPlainObject.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/isPlainObject.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "../node_modules/lodash/_baseGetTag.js"),
    getPrototype = __webpack_require__(/*! ./_getPrototype */ "../node_modules/lodash/_getPrototype.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var objectTag = '[object Object]';

/** Used for built-in method references. */
var funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/** Used to infer the `Object` constructor. */
var objectCtorString = funcToString.call(Object);

/**
 * Checks if `value` is a plain object, that is, an object created by the
 * `Object` constructor or one with a `[[Prototype]]` of `null`.
 *
 * @static
 * @memberOf _
 * @since 0.8.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 * }
 *
 * _.isPlainObject(new Foo);
 * // => false
 *
 * _.isPlainObject([1, 2, 3]);
 * // => false
 *
 * _.isPlainObject({ 'x': 0, 'y': 0 });
 * // => true
 *
 * _.isPlainObject(Object.create(null));
 * // => true
 */
function isPlainObject(value) {
  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
    return false;
  }
  var proto = getPrototype(value);
  if (proto === null) {
    return true;
  }
  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
  return typeof Ctor == 'function' && Ctor instanceof Ctor &&
    funcToString.call(Ctor) == objectCtorString;
}

module.exports = isPlainObject;


/***/ }),

/***/ "../node_modules/lodash/isSet.js":
/*!***************************************!*\
  !*** ../node_modules/lodash/isSet.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsSet = __webpack_require__(/*! ./_baseIsSet */ "../node_modules/lodash/_baseIsSet.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "../node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "../node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsSet = nodeUtil && nodeUtil.isSet;

/**
 * Checks if `value` is classified as a `Set` object.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a set, else `false`.
 * @example
 *
 * _.isSet(new Set);
 * // => true
 *
 * _.isSet(new WeakSet);
 * // => false
 */
var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

module.exports = isSet;


/***/ }),

/***/ "../node_modules/lodash/isSymbol.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/isSymbol.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ "../node_modules/lodash/_baseGetTag.js"),
    isObjectLike = __webpack_require__(/*! ./isObjectLike */ "../node_modules/lodash/isObjectLike.js");

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

module.exports = isSymbol;


/***/ }),

/***/ "../node_modules/lodash/isTypedArray.js":
/*!**********************************************!*\
  !*** ../node_modules/lodash/isTypedArray.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIsTypedArray = __webpack_require__(/*! ./_baseIsTypedArray */ "../node_modules/lodash/_baseIsTypedArray.js"),
    baseUnary = __webpack_require__(/*! ./_baseUnary */ "../node_modules/lodash/_baseUnary.js"),
    nodeUtil = __webpack_require__(/*! ./_nodeUtil */ "../node_modules/lodash/_nodeUtil.js");

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

module.exports = isTypedArray;


/***/ }),

/***/ "../node_modules/lodash/keys.js":
/*!**************************************!*\
  !*** ../node_modules/lodash/keys.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "../node_modules/lodash/_arrayLikeKeys.js"),
    baseKeys = __webpack_require__(/*! ./_baseKeys */ "../node_modules/lodash/_baseKeys.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "../node_modules/lodash/isArrayLike.js");

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

module.exports = keys;


/***/ }),

/***/ "../node_modules/lodash/keysIn.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/keysIn.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeKeys = __webpack_require__(/*! ./_arrayLikeKeys */ "../node_modules/lodash/_arrayLikeKeys.js"),
    baseKeysIn = __webpack_require__(/*! ./_baseKeysIn */ "../node_modules/lodash/_baseKeysIn.js"),
    isArrayLike = __webpack_require__(/*! ./isArrayLike */ "../node_modules/lodash/isArrayLike.js");

/**
 * Creates an array of the own and inherited enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keysIn(new Foo);
 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
 */
function keysIn(object) {
  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
}

module.exports = keysIn;


/***/ }),

/***/ "../node_modules/lodash/memoize.js":
/*!*****************************************!*\
  !*** ../node_modules/lodash/memoize.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MapCache = __webpack_require__(/*! ./_MapCache */ "../node_modules/lodash/_MapCache.js");

/** Error message constants. */
var FUNC_ERROR_TEXT = 'Expected a function';

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `clear`, `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result) || cache;
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Expose `MapCache`.
memoize.Cache = MapCache;

module.exports = memoize;


/***/ }),

/***/ "../node_modules/lodash/merge.js":
/*!***************************************!*\
  !*** ../node_modules/lodash/merge.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseMerge = __webpack_require__(/*! ./_baseMerge */ "../node_modules/lodash/_baseMerge.js"),
    createAssigner = __webpack_require__(/*! ./_createAssigner */ "../node_modules/lodash/_createAssigner.js");

/**
 * This method is like `_.assign` except that it recursively merges own and
 * inherited enumerable string keyed properties of source objects into the
 * destination object. Source properties that resolve to `undefined` are
 * skipped if a destination value exists. Array and plain object properties
 * are merged recursively. Other objects and value types are overridden by
 * assignment. Source objects are applied from left to right. Subsequent
 * sources overwrite property assignments of previous sources.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 0.5.0
 * @category Object
 * @param {Object} object The destination object.
 * @param {...Object} [sources] The source objects.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = {
 *   'a': [{ 'b': 2 }, { 'd': 4 }]
 * };
 *
 * var other = {
 *   'a': [{ 'c': 3 }, { 'e': 5 }]
 * };
 *
 * _.merge(object, other);
 * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
 */
var merge = createAssigner(function(object, source, srcIndex) {
  baseMerge(object, source, srcIndex);
});

module.exports = merge;


/***/ }),

/***/ "../node_modules/lodash/noop.js":
/*!**************************************!*\
  !*** ../node_modules/lodash/noop.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = noop;


/***/ }),

/***/ "../node_modules/lodash/property.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/property.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseProperty = __webpack_require__(/*! ./_baseProperty */ "../node_modules/lodash/_baseProperty.js"),
    basePropertyDeep = __webpack_require__(/*! ./_basePropertyDeep */ "../node_modules/lodash/_basePropertyDeep.js"),
    isKey = __webpack_require__(/*! ./_isKey */ "../node_modules/lodash/_isKey.js"),
    toKey = __webpack_require__(/*! ./_toKey */ "../node_modules/lodash/_toKey.js");

/**
 * Creates a function that returns the value at `path` of a given object.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {Array|string} path The path of the property to get.
 * @returns {Function} Returns the new accessor function.
 * @example
 *
 * var objects = [
 *   { 'a': { 'b': 2 } },
 *   { 'a': { 'b': 1 } }
 * ];
 *
 * _.map(objects, _.property('a.b'));
 * // => [2, 1]
 *
 * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
 * // => [1, 2]
 */
function property(path) {
  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
}

module.exports = property;


/***/ }),

/***/ "../node_modules/lodash/stubArray.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/stubArray.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns a new empty array.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {Array} Returns the new empty array.
 * @example
 *
 * var arrays = _.times(2, _.stubArray);
 *
 * console.log(arrays);
 * // => [[], []]
 *
 * console.log(arrays[0] === arrays[1]);
 * // => false
 */
function stubArray() {
  return [];
}

module.exports = stubArray;


/***/ }),

/***/ "../node_modules/lodash/stubFalse.js":
/*!*******************************************!*\
  !*** ../node_modules/lodash/stubFalse.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

module.exports = stubFalse;


/***/ }),

/***/ "../node_modules/lodash/toPlainObject.js":
/*!***********************************************!*\
  !*** ../node_modules/lodash/toPlainObject.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var copyObject = __webpack_require__(/*! ./_copyObject */ "../node_modules/lodash/_copyObject.js"),
    keysIn = __webpack_require__(/*! ./keysIn */ "../node_modules/lodash/keysIn.js");

/**
 * Converts `value` to a plain object flattening inherited enumerable string
 * keyed properties of `value` to own properties of the plain object.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {Object} Returns the converted plain object.
 * @example
 *
 * function Foo() {
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.assign({ 'a': 1 }, new Foo);
 * // => { 'a': 1, 'b': 2 }
 *
 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
 * // => { 'a': 1, 'b': 2, 'c': 3 }
 */
function toPlainObject(value) {
  return copyObject(value, keysIn(value));
}

module.exports = toPlainObject;


/***/ }),

/***/ "../node_modules/lodash/toString.js":
/*!******************************************!*\
  !*** ../node_modules/lodash/toString.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseToString = __webpack_require__(/*! ./_baseToString */ "../node_modules/lodash/_baseToString.js");

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

module.exports = toString;


/***/ }),

/***/ "../node_modules/lodash/uniqBy.js":
/*!****************************************!*\
  !*** ../node_modules/lodash/uniqBy.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var baseIteratee = __webpack_require__(/*! ./_baseIteratee */ "../node_modules/lodash/_baseIteratee.js"),
    baseUniq = __webpack_require__(/*! ./_baseUniq */ "../node_modules/lodash/_baseUniq.js");

/**
 * This method is like `_.uniq` except that it accepts `iteratee` which is
 * invoked for each element in `array` to generate the criterion by which
 * uniqueness is computed. The order of result values is determined by the
 * order they occur in the array. The iteratee is invoked with one argument:
 * (value).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
 * // => [2.1, 1.2]
 *
 * // The `_.property` iteratee shorthand.
 * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
 * // => [{ 'x': 1 }, { 'x': 2 }]
 */
function uniqBy(array, iteratee) {
  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];
}

module.exports = uniqBy;


/***/ }),

/***/ "../node_modules/mousetrap/mousetrap.js":
/*!**********************************************!*\
  !*** ../node_modules/mousetrap/mousetrap.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/*global define:false */
/**
 * Copyright 2012-2017 Craig Campbell
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Mousetrap is a simple keyboard shortcut library for Javascript with
 * no external dependencies
 *
 * @version 1.6.5
 * @url craig.is/killing/mice
 */
(function(window, document, undefined) {

    // Check if mousetrap is used inside browser, if not, return
    if (!window) {
        return;
    }

    /**
     * mapping of special keycodes to their corresponding keys
     *
     * everything in this dictionary cannot use keypress events
     * so it has to be here to map to the correct keycodes for
     * keyup/keydown events
     *
     * @type {Object}
     */
    var _MAP = {
        8: 'backspace',
        9: 'tab',
        13: 'enter',
        16: 'shift',
        17: 'ctrl',
        18: 'alt',
        20: 'capslock',
        27: 'esc',
        32: 'space',
        33: 'pageup',
        34: 'pagedown',
        35: 'end',
        36: 'home',
        37: 'left',
        38: 'up',
        39: 'right',
        40: 'down',
        45: 'ins',
        46: 'del',
        91: 'meta',
        93: 'meta',
        224: 'meta'
    };

    /**
     * mapping for special characters so they can support
     *
     * this dictionary is only used incase you want to bind a
     * keyup or keydown event to one of these keys
     *
     * @type {Object}
     */
    var _KEYCODE_MAP = {
        106: '*',
        107: '+',
        109: '-',
        110: '.',
        111 : '/',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: '\''
    };

    /**
     * this is a mapping of keys that require shift on a US keypad
     * back to the non shift equivelents
     *
     * this is so you can use keyup events with these keys
     *
     * note that this will only work reliably on US keyboards
     *
     * @type {Object}
     */
    var _SHIFT_MAP = {
        '~': '`',
        '!': '1',
        '@': '2',
        '#': '3',
        '$': '4',
        '%': '5',
        '^': '6',
        '&': '7',
        '*': '8',
        '(': '9',
        ')': '0',
        '_': '-',
        '+': '=',
        ':': ';',
        '\"': '\'',
        '<': ',',
        '>': '.',
        '?': '/',
        '|': '\\'
    };

    /**
     * this is a list of special strings you can use to map
     * to modifier keys when you specify your keyboard shortcuts
     *
     * @type {Object}
     */
    var _SPECIAL_ALIASES = {
        'option': 'alt',
        'command': 'meta',
        'return': 'enter',
        'escape': 'esc',
        'plus': '+',
        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'
    };

    /**
     * variable to store the flipped version of _MAP from above
     * needed to check if we should use keypress or not when no action
     * is specified
     *
     * @type {Object|undefined}
     */
    var _REVERSE_MAP;

    /**
     * loop through the f keys, f1 to f19 and add them to the map
     * programatically
     */
    for (var i = 1; i < 20; ++i) {
        _MAP[111 + i] = 'f' + i;
    }

    /**
     * loop through to map numbers on the numeric keypad
     */
    for (i = 0; i <= 9; ++i) {

        // This needs to use a string cause otherwise since 0 is falsey
        // mousetrap will never fire for numpad 0 pressed as part of a keydown
        // event.
        //
        // @see https://github.com/ccampbell/mousetrap/pull/258
        _MAP[i + 96] = i.toString();
    }

    /**
     * cross browser add event method
     *
     * @param {Element|HTMLDocument} object
     * @param {string} type
     * @param {Function} callback
     * @returns void
     */
    function _addEvent(object, type, callback) {
        if (object.addEventListener) {
            object.addEventListener(type, callback, false);
            return;
        }

        object.attachEvent('on' + type, callback);
    }

    /**
     * takes the event and returns the key character
     *
     * @param {Event} e
     * @return {string}
     */
    function _characterFromEvent(e) {

        // for keypress events we should return the character as is
        if (e.type == 'keypress') {
            var character = String.fromCharCode(e.which);

            // if the shift key is not pressed then it is safe to assume
            // that we want the character to be lowercase.  this means if
            // you accidentally have caps lock on then your key bindings
            // will continue to work
            //
            // the only side effect that might not be desired is if you
            // bind something like 'A' cause you want to trigger an
            // event when capital A is pressed caps lock will no longer
            // trigger the event.  shift+a will though.
            if (!e.shiftKey) {
                character = character.toLowerCase();
            }

            return character;
        }

        // for non keypress events the special maps are needed
        if (_MAP[e.which]) {
            return _MAP[e.which];
        }

        if (_KEYCODE_MAP[e.which]) {
            return _KEYCODE_MAP[e.which];
        }

        // if it is not in the special map

        // with keydown and keyup events the character seems to always
        // come in as an uppercase character whether you are pressing shift
        // or not.  we should make sure it is always lowercase for comparisons
        return String.fromCharCode(e.which).toLowerCase();
    }

    /**
     * checks if two arrays are equal
     *
     * @param {Array} modifiers1
     * @param {Array} modifiers2
     * @returns {boolean}
     */
    function _modifiersMatch(modifiers1, modifiers2) {
        return modifiers1.sort().join(',') === modifiers2.sort().join(',');
    }

    /**
     * takes a key event and figures out what the modifiers are
     *
     * @param {Event} e
     * @returns {Array}
     */
    function _eventModifiers(e) {
        var modifiers = [];

        if (e.shiftKey) {
            modifiers.push('shift');
        }

        if (e.altKey) {
            modifiers.push('alt');
        }

        if (e.ctrlKey) {
            modifiers.push('ctrl');
        }

        if (e.metaKey) {
            modifiers.push('meta');
        }

        return modifiers;
    }

    /**
     * prevents default for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _preventDefault(e) {
        if (e.preventDefault) {
            e.preventDefault();
            return;
        }

        e.returnValue = false;
    }

    /**
     * stops propogation for this event
     *
     * @param {Event} e
     * @returns void
     */
    function _stopPropagation(e) {
        if (e.stopPropagation) {
            e.stopPropagation();
            return;
        }

        e.cancelBubble = true;
    }

    /**
     * determines if the keycode specified is a modifier key or not
     *
     * @param {string} key
     * @returns {boolean}
     */
    function _isModifier(key) {
        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';
    }

    /**
     * reverses the map lookup so that we can look for specific keys
     * to see what can and can't use keypress
     *
     * @return {Object}
     */
    function _getReverseMap() {
        if (!_REVERSE_MAP) {
            _REVERSE_MAP = {};
            for (var key in _MAP) {

                // pull out the numeric keypad from here cause keypress should
                // be able to detect the keys from the character
                if (key > 95 && key < 112) {
                    continue;
                }

                if (_MAP.hasOwnProperty(key)) {
                    _REVERSE_MAP[_MAP[key]] = key;
                }
            }
        }
        return _REVERSE_MAP;
    }

    /**
     * picks the best action based on the key combination
     *
     * @param {string} key - character for key
     * @param {Array} modifiers
     * @param {string=} action passed in
     */
    function _pickBestAction(key, modifiers, action) {

        // if no action was picked in we should try to pick the one
        // that we think would work best for this key
        if (!action) {
            action = _getReverseMap()[key] ? 'keydown' : 'keypress';
        }

        // modifier keys don't work as expected with keypress,
        // switch to keydown
        if (action == 'keypress' && modifiers.length) {
            action = 'keydown';
        }

        return action;
    }

    /**
     * Converts from a string key combination to an array
     *
     * @param  {string} combination like "command+shift+l"
     * @return {Array}
     */
    function _keysFromString(combination) {
        if (combination === '+') {
            return ['+'];
        }

        combination = combination.replace(/\+{2}/g, '+plus');
        return combination.split('+');
    }

    /**
     * Gets info for a specific key combination
     *
     * @param  {string} combination key combination ("command+s" or "a" or "*")
     * @param  {string=} action
     * @returns {Object}
     */
    function _getKeyInfo(combination, action) {
        var keys;
        var key;
        var i;
        var modifiers = [];

        // take the keys from this pattern and figure out what the actual
        // pattern is all about
        keys = _keysFromString(combination);

        for (i = 0; i < keys.length; ++i) {
            key = keys[i];

            // normalize key names
            if (_SPECIAL_ALIASES[key]) {
                key = _SPECIAL_ALIASES[key];
            }

            // if this is not a keypress event then we should
            // be smart about using shift keys
            // this will only work for US keyboards however
            if (action && action != 'keypress' && _SHIFT_MAP[key]) {
                key = _SHIFT_MAP[key];
                modifiers.push('shift');
            }

            // if this key is a modifier then add it to the list of modifiers
            if (_isModifier(key)) {
                modifiers.push(key);
            }
        }

        // depending on what the key combination is
        // we will try to pick the best event for it
        action = _pickBestAction(key, modifiers, action);

        return {
            key: key,
            modifiers: modifiers,
            action: action
        };
    }

    function _belongsTo(element, ancestor) {
        if (element === null || element === document) {
            return false;
        }

        if (element === ancestor) {
            return true;
        }

        return _belongsTo(element.parentNode, ancestor);
    }

    function Mousetrap(targetElement) {
        var self = this;

        targetElement = targetElement || document;

        if (!(self instanceof Mousetrap)) {
            return new Mousetrap(targetElement);
        }

        /**
         * element to attach key events to
         *
         * @type {Element}
         */
        self.target = targetElement;

        /**
         * a list of all the callbacks setup via Mousetrap.bind()
         *
         * @type {Object}
         */
        self._callbacks = {};

        /**
         * direct map of string combinations to callbacks used for trigger()
         *
         * @type {Object}
         */
        self._directMap = {};

        /**
         * keeps track of what level each sequence is at since multiple
         * sequences can start out with the same sequence
         *
         * @type {Object}
         */
        var _sequenceLevels = {};

        /**
         * variable to store the setTimeout call
         *
         * @type {null|number}
         */
        var _resetTimer;

        /**
         * temporary state where we will ignore the next keyup
         *
         * @type {boolean|string}
         */
        var _ignoreNextKeyup = false;

        /**
         * temporary state where we will ignore the next keypress
         *
         * @type {boolean}
         */
        var _ignoreNextKeypress = false;

        /**
         * are we currently inside of a sequence?
         * type of action ("keyup" or "keydown" or "keypress") or false
         *
         * @type {boolean|string}
         */
        var _nextExpectedAction = false;

        /**
         * resets all sequence counters except for the ones passed in
         *
         * @param {Object} doNotReset
         * @returns void
         */
        function _resetSequences(doNotReset) {
            doNotReset = doNotReset || {};

            var activeSequences = false,
                key;

            for (key in _sequenceLevels) {
                if (doNotReset[key]) {
                    activeSequences = true;
                    continue;
                }
                _sequenceLevels[key] = 0;
            }

            if (!activeSequences) {
                _nextExpectedAction = false;
            }
        }

        /**
         * finds all callbacks that match based on the keycode, modifiers,
         * and action
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event|Object} e
         * @param {string=} sequenceName - name of the sequence we are looking for
         * @param {string=} combination
         * @param {number=} level
         * @returns {Array}
         */
        function _getMatches(character, modifiers, e, sequenceName, combination, level) {
            var i;
            var callback;
            var matches = [];
            var action = e.type;

            // if there are no events related to this keycode
            if (!self._callbacks[character]) {
                return [];
            }

            // if a modifier key is coming up on its own we should allow it
            if (action == 'keyup' && _isModifier(character)) {
                modifiers = [character];
            }

            // loop through all callbacks for the key that was pressed
            // and see if any of them match
            for (i = 0; i < self._callbacks[character].length; ++i) {
                callback = self._callbacks[character][i];

                // if a sequence name is not specified, but this is a sequence at
                // the wrong level then move onto the next match
                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {
                    continue;
                }

                // if the action we are looking for doesn't match the action we got
                // then we should keep going
                if (action != callback.action) {
                    continue;
                }

                // if this is a keypress event and the meta key and control key
                // are not pressed that means that we need to only look at the
                // character, otherwise check the modifiers as well
                //
                // chrome will not fire a keypress if meta or control is down
                // safari will fire a keypress if meta or meta+shift is down
                // firefox will fire a keypress if meta or control is down
                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {

                    // when you bind a combination or sequence a second time it
                    // should overwrite the first one.  if a sequenceName or
                    // combination is specified in this call it does just that
                    //
                    // @todo make deleting its own method?
                    var deleteCombo = !sequenceName && callback.combo == combination;
                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;
                    if (deleteCombo || deleteSequence) {
                        self._callbacks[character].splice(i, 1);
                    }

                    matches.push(callback);
                }
            }

            return matches;
        }

        /**
         * actually calls the callback function
         *
         * if your callback function returns false this will use the jquery
         * convention - prevent default and stop propogation on the event
         *
         * @param {Function} callback
         * @param {Event} e
         * @returns void
         */
        function _fireCallback(callback, e, combo, sequence) {

            // if this event should not happen stop here
            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {
                return;
            }

            if (callback(e, combo) === false) {
                _preventDefault(e);
                _stopPropagation(e);
            }
        }

        /**
         * handles a character key event
         *
         * @param {string} character
         * @param {Array} modifiers
         * @param {Event} e
         * @returns void
         */
        self._handleKey = function(character, modifiers, e) {
            var callbacks = _getMatches(character, modifiers, e);
            var i;
            var doNotReset = {};
            var maxLevel = 0;
            var processedSequenceCallback = false;

            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence
            for (i = 0; i < callbacks.length; ++i) {
                if (callbacks[i].seq) {
                    maxLevel = Math.max(maxLevel, callbacks[i].level);
                }
            }

            // loop through matching callbacks for this key event
            for (i = 0; i < callbacks.length; ++i) {

                // fire for all sequence callbacks
                // this is because if for example you have multiple sequences
                // bound such as "g i" and "g t" they both need to fire the
                // callback for matching g cause otherwise you can only ever
                // match the first one
                if (callbacks[i].seq) {

                    // only fire callbacks for the maxLevel to prevent
                    // subsequences from also firing
                    //
                    // for example 'a option b' should not cause 'option b' to fire
                    // even though 'option b' is part of the other sequence
                    //
                    // any sequences that do not match here will be discarded
                    // below by the _resetSequences call
                    if (callbacks[i].level != maxLevel) {
                        continue;
                    }

                    processedSequenceCallback = true;

                    // keep a list of which sequences were matches for later
                    doNotReset[callbacks[i].seq] = 1;
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);
                    continue;
                }

                // if there were no sequence matches but we are still here
                // that means this is a regular match so we should fire that
                if (!processedSequenceCallback) {
                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);
                }
            }

            // if the key you pressed matches the type of sequence without
            // being a modifier (ie "keyup" or "keypress") then we should
            // reset all sequences that were not matched by this event
            //
            // this is so, for example, if you have the sequence "h a t" and you
            // type "h e a r t" it does not match.  in this case the "e" will
            // cause the sequence to reset
            //
            // modifier keys are ignored because you can have a sequence
            // that contains modifiers such as "enter ctrl+space" and in most
            // cases the modifier key will be pressed before the next key
            //
            // also if you have a sequence such as "ctrl+b a" then pressing the
            // "b" key will trigger a "keypress" and a "keydown"
            //
            // the "keydown" is expected when there is a modifier, but the
            // "keypress" ends up matching the _nextExpectedAction since it occurs
            // after and that causes the sequence to reset
            //
            // we ignore keypresses in a sequence that directly follow a keydown
            // for the same character
            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;
            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {
                _resetSequences(doNotReset);
            }

            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';
        };

        /**
         * handles a keydown event
         *
         * @param {Event} e
         * @returns void
         */
        function _handleKeyEvent(e) {

            // normalize e.which for key events
            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion
            if (typeof e.which !== 'number') {
                e.which = e.keyCode;
            }

            var character = _characterFromEvent(e);

            // no character found then stop
            if (!character) {
                return;
            }

            // need to use === for the character check because the character can be 0
            if (e.type == 'keyup' && _ignoreNextKeyup === character) {
                _ignoreNextKeyup = false;
                return;
            }

            self.handleKey(character, _eventModifiers(e), e);
        }

        /**
         * called to set a 1 second timeout on the specified sequence
         *
         * this is so after each key press in the sequence you have 1 second
         * to press the next key before you have to start over
         *
         * @returns void
         */
        function _resetSequenceTimer() {
            clearTimeout(_resetTimer);
            _resetTimer = setTimeout(_resetSequences, 1000);
        }

        /**
         * binds a key sequence to an event
         *
         * @param {string} combo - combo specified in bind call
         * @param {Array} keys
         * @param {Function} callback
         * @param {string=} action
         * @returns void
         */
        function _bindSequence(combo, keys, callback, action) {

            // start off by adding a sequence level record for this combination
            // and setting the level to 0
            _sequenceLevels[combo] = 0;

            /**
             * callback to increase the sequence level for this sequence and reset
             * all other sequences that were active
             *
             * @param {string} nextAction
             * @returns {Function}
             */
            function _increaseSequence(nextAction) {
                return function() {
                    _nextExpectedAction = nextAction;
                    ++_sequenceLevels[combo];
                    _resetSequenceTimer();
                };
            }

            /**
             * wraps the specified callback inside of another function in order
             * to reset all sequence counters as soon as this sequence is done
             *
             * @param {Event} e
             * @returns void
             */
            function _callbackAndReset(e) {
                _fireCallback(callback, e, combo);

                // we should ignore the next key up if the action is key down
                // or keypress.  this is so if you finish a sequence and
                // release the key the final key will not trigger a keyup
                if (action !== 'keyup') {
                    _ignoreNextKeyup = _characterFromEvent(e);
                }

                // weird race condition if a sequence ends with the key
                // another sequence begins with
                setTimeout(_resetSequences, 10);
            }

            // loop through keys one at a time and bind the appropriate callback
            // function.  for any key leading up to the final one it should
            // increase the sequence. after the final, it should reset all sequences
            //
            // if an action is specified in the original bind call then that will
            // be used throughout.  otherwise we will pass the action that the
            // next key in the sequence should match.  this allows a sequence
            // to mix and match keypress and keydown events depending on which
            // ones are better suited to the key provided
            for (var i = 0; i < keys.length; ++i) {
                var isFinal = i + 1 === keys.length;
                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);
                _bindSingle(keys[i], wrappedCallback, action, combo, i);
            }
        }

        /**
         * binds a single keyboard combination
         *
         * @param {string} combination
         * @param {Function} callback
         * @param {string=} action
         * @param {string=} sequenceName - name of sequence if part of sequence
         * @param {number=} level - what part of the sequence the command is
         * @returns void
         */
        function _bindSingle(combination, callback, action, sequenceName, level) {

            // store a direct mapped reference for use with Mousetrap.trigger
            self._directMap[combination + ':' + action] = callback;

            // make sure multiple spaces in a row become a single space
            combination = combination.replace(/\s+/g, ' ');

            var sequence = combination.split(' ');
            var info;

            // if this pattern is a sequence of keys then run through this method
            // to reprocess each pattern one key at a time
            if (sequence.length > 1) {
                _bindSequence(combination, sequence, callback, action);
                return;
            }

            info = _getKeyInfo(combination, action);

            // make sure to initialize array if this is the first time
            // a callback is added for this key
            self._callbacks[info.key] = self._callbacks[info.key] || [];

            // remove an existing match if there is one
            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);

            // add this call back to the array
            // if it is a sequence put it at the beginning
            // if not put it at the end
            //
            // this is important because the way these are processed expects
            // the sequence ones to come first
            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({
                callback: callback,
                modifiers: info.modifiers,
                action: info.action,
                seq: sequenceName,
                level: level,
                combo: combination
            });
        }

        /**
         * binds multiple combinations to the same callback
         *
         * @param {Array} combinations
         * @param {Function} callback
         * @param {string|undefined} action
         * @returns void
         */
        self._bindMultiple = function(combinations, callback, action) {
            for (var i = 0; i < combinations.length; ++i) {
                _bindSingle(combinations[i], callback, action);
            }
        };

        // start!
        _addEvent(targetElement, 'keypress', _handleKeyEvent);
        _addEvent(targetElement, 'keydown', _handleKeyEvent);
        _addEvent(targetElement, 'keyup', _handleKeyEvent);
    }

    /**
     * binds an event to mousetrap
     *
     * can be a single key, a combination of keys separated with +,
     * an array of keys, or a sequence of keys separated by spaces
     *
     * be sure to list the modifier keys first to make sure that the
     * correct key ends up getting bound (the last key in the pattern)
     *
     * @param {string|Array} keys
     * @param {Function} callback
     * @param {string=} action - 'keypress', 'keydown', or 'keyup'
     * @returns void
     */
    Mousetrap.prototype.bind = function(keys, callback, action) {
        var self = this;
        keys = keys instanceof Array ? keys : [keys];
        self._bindMultiple.call(self, keys, callback, action);
        return self;
    };

    /**
     * unbinds an event to mousetrap
     *
     * the unbinding sets the callback function of the specified key combo
     * to an empty function and deletes the corresponding key in the
     * _directMap dict.
     *
     * TODO: actually remove this from the _callbacks dictionary instead
     * of binding an empty function
     *
     * the keycombo+action has to be exactly the same as
     * it was defined in the bind method
     *
     * @param {string|Array} keys
     * @param {string} action
     * @returns void
     */
    Mousetrap.prototype.unbind = function(keys, action) {
        var self = this;
        return self.bind.call(self, keys, function() {}, action);
    };

    /**
     * triggers an event that has already been bound
     *
     * @param {string} keys
     * @param {string=} action
     * @returns void
     */
    Mousetrap.prototype.trigger = function(keys, action) {
        var self = this;
        if (self._directMap[keys + ':' + action]) {
            self._directMap[keys + ':' + action]({}, keys);
        }
        return self;
    };

    /**
     * resets the library back to its initial state.  this is useful
     * if you want to clear out the current keyboard shortcuts and bind
     * new ones - for example if you switch to another page
     *
     * @returns void
     */
    Mousetrap.prototype.reset = function() {
        var self = this;
        self._callbacks = {};
        self._directMap = {};
        return self;
    };

    /**
     * should we stop this event before firing off callbacks
     *
     * @param {Event} e
     * @param {Element} element
     * @return {boolean}
     */
    Mousetrap.prototype.stopCallback = function(e, element) {
        var self = this;

        // if the element has the class "mousetrap" then no need to stop
        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {
            return false;
        }

        if (_belongsTo(element, self.target)) {
            return false;
        }

        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,
        // not the initial event target in the shadow tree. Note that not all events cross the
        // shadow boundary.
        // For shadow trees with `mode: 'open'`, the initial event target is the first element in
        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event
        // target cannot be obtained.
        if ('composedPath' in e && typeof e.composedPath === 'function') {
            // For open shadow trees, update `element` so that the following check works.
            var initialEventTarget = e.composedPath()[0];
            if (initialEventTarget !== e.target) {
                element = initialEventTarget;
            }
        }

        // stop for input, select, and textarea
        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;
    };

    /**
     * exposes _handleKey publicly so it can be overwritten by extensions
     */
    Mousetrap.prototype.handleKey = function() {
        var self = this;
        return self._handleKey.apply(self, arguments);
    };

    /**
     * allow custom key mappings
     */
    Mousetrap.addKeycodes = function(object) {
        for (var key in object) {
            if (object.hasOwnProperty(key)) {
                _MAP[key] = object[key];
            }
        }
        _REVERSE_MAP = null;
    };

    /**
     * Init the global mousetrap functions
     *
     * This method is needed to allow the global mousetrap functions to work
     * now that mousetrap is a constructor function.
     */
    Mousetrap.init = function() {
        var documentMousetrap = Mousetrap(document);
        for (var method in documentMousetrap) {
            if (method.charAt(0) !== '_') {
                Mousetrap[method] = (function(method) {
                    return function() {
                        return documentMousetrap[method].apply(documentMousetrap, arguments);
                    };
                } (method));
            }
        }
    };

    Mousetrap.init();

    // expose mousetrap to the global object
    window.Mousetrap = Mousetrap;

    // expose as a common js module
    if ( true && module.exports) {
        module.exports = Mousetrap;
    }

    // expose mousetrap as an AMD module
    if (true) {
        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
            return Mousetrap;
        }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
    }
}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);


/***/ }),

/***/ "../node_modules/query-string/index.js":
/*!*********************************************!*\
  !*** ../node_modules/query-string/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

const strictUriEncode = __webpack_require__(/*! strict-uri-encode */ "../node_modules/strict-uri-encode/index.js");
const decodeComponent = __webpack_require__(/*! decode-uri-component */ "../node_modules/decode-uri-component/index.js");
const splitOnFirst = __webpack_require__(/*! split-on-first */ "../node_modules/split-on-first/index.js");

const isNullOrUndefined = value => value === null || value === undefined;

function encoderForArrayFormat(options) {
	switch (options.arrayFormat) {
		case 'index':
			return key => (result, value) => {
				const index = result.length;

				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[', index, ']'].join('')];
				}

				return [
					...result,
					[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')
				];
			};

		case 'bracket':
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, [encode(key, options), '[]'].join('')];
				}

				return [...result, [encode(key, options), '[]=', encode(value, options)].join('')];
			};

		case 'comma':
		case 'separator':
			return key => (result, value) => {
				if (value === null || value === undefined || value.length === 0) {
					return result;
				}

				if (result.length === 0) {
					return [[encode(key, options), '=', encode(value, options)].join('')];
				}

				return [[result, encode(value, options)].join(options.arrayFormatSeparator)];
			};

		default:
			return key => (result, value) => {
				if (
					value === undefined ||
					(options.skipNull && value === null) ||
					(options.skipEmptyString && value === '')
				) {
					return result;
				}

				if (value === null) {
					return [...result, encode(key, options)];
				}

				return [...result, [encode(key, options), '=', encode(value, options)].join('')];
			};
	}
}

function parserForArrayFormat(options) {
	let result;

	switch (options.arrayFormat) {
		case 'index':
			return (key, value, accumulator) => {
				result = /\[(\d*)\]$/.exec(key);

				key = key.replace(/\[\d*\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = {};
				}

				accumulator[key][result[1]] = value;
			};

		case 'bracket':
			return (key, value, accumulator) => {
				result = /(\[\])$/.exec(key);
				key = key.replace(/\[\]$/, '');

				if (!result) {
					accumulator[key] = value;
					return;
				}

				if (accumulator[key] === undefined) {
					accumulator[key] = [value];
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};

		case 'comma':
		case 'separator':
			return (key, value, accumulator) => {
				const isArray = typeof value === 'string' && value.split('').indexOf(options.arrayFormatSeparator) > -1;
				const newValue = isArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);
				accumulator[key] = newValue;
			};

		default:
			return (key, value, accumulator) => {
				if (accumulator[key] === undefined) {
					accumulator[key] = value;
					return;
				}

				accumulator[key] = [].concat(accumulator[key], value);
			};
	}
}

function validateArrayFormatSeparator(value) {
	if (typeof value !== 'string' || value.length !== 1) {
		throw new TypeError('arrayFormatSeparator must be single character string');
	}
}

function encode(value, options) {
	if (options.encode) {
		return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
	}

	return value;
}

function decode(value, options) {
	if (options.decode) {
		return decodeComponent(value);
	}

	return value;
}

function keysSorter(input) {
	if (Array.isArray(input)) {
		return input.sort();
	}

	if (typeof input === 'object') {
		return keysSorter(Object.keys(input))
			.sort((a, b) => Number(a) - Number(b))
			.map(key => input[key]);
	}

	return input;
}

function removeHash(input) {
	const hashStart = input.indexOf('#');
	if (hashStart !== -1) {
		input = input.slice(0, hashStart);
	}

	return input;
}

function getHash(url) {
	let hash = '';
	const hashStart = url.indexOf('#');
	if (hashStart !== -1) {
		hash = url.slice(hashStart);
	}

	return hash;
}

function extract(input) {
	input = removeHash(input);
	const queryStart = input.indexOf('?');
	if (queryStart === -1) {
		return '';
	}

	return input.slice(queryStart + 1);
}

function parseValue(value, options) {
	if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {
		value = Number(value);
	} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {
		value = value.toLowerCase() === 'true';
	}

	return value;
}

function parse(input, options) {
	options = Object.assign({
		decode: true,
		sort: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ',',
		parseNumbers: false,
		parseBooleans: false
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const formatter = parserForArrayFormat(options);

	// Create an object with no prototype
	const ret = Object.create(null);

	if (typeof input !== 'string') {
		return ret;
	}

	input = input.trim().replace(/^[?#&]/, '');

	if (!input) {
		return ret;
	}

	for (const param of input.split('&')) {
		let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, ' ') : param, '=');

		// Missing `=` should be `null`:
		// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
		value = value === undefined ? null : ['comma', 'separator'].includes(options.arrayFormat) ? value : decode(value, options);
		formatter(decode(key, options), value, ret);
	}

	for (const key of Object.keys(ret)) {
		const value = ret[key];
		if (typeof value === 'object' && value !== null) {
			for (const k of Object.keys(value)) {
				value[k] = parseValue(value[k], options);
			}
		} else {
			ret[key] = parseValue(value, options);
		}
	}

	if (options.sort === false) {
		return ret;
	}

	return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
		const value = ret[key];
		if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {
			// Sort object keys, not values
			result[key] = keysSorter(value);
		} else {
			result[key] = value;
		}

		return result;
	}, Object.create(null));
}

exports.extract = extract;
exports.parse = parse;

exports.stringify = (object, options) => {
	if (!object) {
		return '';
	}

	options = Object.assign({
		encode: true,
		strict: true,
		arrayFormat: 'none',
		arrayFormatSeparator: ','
	}, options);

	validateArrayFormatSeparator(options.arrayFormatSeparator);

	const shouldFilter = key => (
		(options.skipNull && isNullOrUndefined(object[key])) ||
		(options.skipEmptyString && object[key] === '')
	);

	const formatter = encoderForArrayFormat(options);

	const objectCopy = {};

	for (const key of Object.keys(object)) {
		if (!shouldFilter(key)) {
			objectCopy[key] = object[key];
		}
	}

	const keys = Object.keys(objectCopy);

	if (options.sort !== false) {
		keys.sort(options.sort);
	}

	return keys.map(key => {
		const value = object[key];

		if (value === undefined) {
			return '';
		}

		if (value === null) {
			return encode(key, options);
		}

		if (Array.isArray(value)) {
			return value
				.reduce(formatter(key), [])
				.join('&');
		}

		return encode(key, options) + '=' + encode(value, options);
	}).filter(x => x.length > 0).join('&');
};

exports.parseUrl = (input, options) => {
	return {
		url: removeHash(input).split('?')[0] || '',
		query: parse(extract(input), options)
	};
};

exports.stringifyUrl = (input, options) => {
	const url = removeHash(input.url).split('?')[0] || '';
	const queryFromUrl = exports.extract(input.url);
	const parsedQueryFromUrl = exports.parse(queryFromUrl);
	const hash = getHash(input.url);
	const query = Object.assign(parsedQueryFromUrl, input.query);
	let queryString = exports.stringify(query, options);
	if (queryString) {
		queryString = `?${queryString}`;
	}

	return `${url}${queryString}${hash}`;
};


/***/ }),

/***/ "../node_modules/regenerator-runtime/runtime.js":
/*!******************************************************!*\
  !*** ../node_modules/regenerator-runtime/runtime.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : undefined
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ }),

/***/ "../node_modules/split-on-first/index.js":
/*!***********************************************!*\
  !*** ../node_modules/split-on-first/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = (string, separator) => {
	if (!(typeof string === 'string' && typeof separator === 'string')) {
		throw new TypeError('Expected the arguments to be of type `string`');
	}

	if (separator === '') {
		return [string];
	}

	const separatorIndex = string.indexOf(separator);

	if (separatorIndex === -1) {
		return [string];
	}

	return [
		string.slice(0, separatorIndex),
		string.slice(separatorIndex + separator.length)
	];
};


/***/ }),

/***/ "../node_modules/strict-uri-encode/index.js":
/*!**************************************************!*\
  !*** ../node_modules/strict-uri-encode/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);


/***/ }),

/***/ "../node_modules/uri-js/dist/es5/uri.all.js":
/*!**************************************************!*\
  !*** ../node_modules/uri-js/dist/es5/uri.all.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/** @license URI.js v4.2.1 (c) 2011 Gary Court. License: http://github.com/garycourt/uri-js */
(function (global, factory) {
	 true ? factory(exports) :
	undefined;
}(this, (function (exports) { 'use strict';

function merge() {
    for (var _len = arguments.length, sets = Array(_len), _key = 0; _key < _len; _key++) {
        sets[_key] = arguments[_key];
    }

    if (sets.length > 1) {
        sets[0] = sets[0].slice(0, -1);
        var xl = sets.length - 1;
        for (var x = 1; x < xl; ++x) {
            sets[x] = sets[x].slice(1, -1);
        }
        sets[xl] = sets[xl].slice(1);
        return sets.join('');
    } else {
        return sets[0];
    }
}
function subexp(str) {
    return "(?:" + str + ")";
}
function typeOf(o) {
    return o === undefined ? "undefined" : o === null ? "null" : Object.prototype.toString.call(o).split(" ").pop().split("]").shift().toLowerCase();
}
function toUpperCase(str) {
    return str.toUpperCase();
}
function toArray(obj) {
    return obj !== undefined && obj !== null ? obj instanceof Array ? obj : typeof obj.length !== "number" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj) : [];
}
function assign(target, source) {
    var obj = target;
    if (source) {
        for (var key in source) {
            obj[key] = source[key];
        }
    }
    return obj;
}

function buildExps(isIRI) {
    var ALPHA$$ = "[A-Za-z]",
        CR$ = "[\\x0D]",
        DIGIT$$ = "[0-9]",
        DQUOTE$$ = "[\\x22]",
        HEXDIG$$ = merge(DIGIT$$, "[A-Fa-f]"),
        //case-insensitive
    LF$$ = "[\\x0A]",
        SP$$ = "[\\x20]",
        PCT_ENCODED$ = subexp(subexp("%[EFef]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%[89A-Fa-f]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%" + HEXDIG$$ + HEXDIG$$)),
        //expanded
    GEN_DELIMS$$ = "[\\:\\/\\?\\#\\[\\]\\@]",
        SUB_DELIMS$$ = "[\\!\\$\\&\\'\\(\\)\\*\\+\\,\\;\\=]",
        RESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),
        UCSCHAR$$ = isIRI ? "[\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]" : "[]",
        //subset, excludes bidi control characters
    IPRIVATE$$ = isIRI ? "[\\uE000-\\uF8FF]" : "[]",
        //subset
    UNRESERVED$$ = merge(ALPHA$$, DIGIT$$, "[\\-\\.\\_\\~]", UCSCHAR$$),
        SCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, "[\\+\\-\\.]") + "*"),
        USERINFO$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\:]")) + "*"),
        DEC_OCTET$ = subexp(subexp("25[0-5]") + "|" + subexp("2[0-4]" + DIGIT$$) + "|" + subexp("1" + DIGIT$$ + DIGIT$$) + "|" + subexp("[1-9]" + DIGIT$$) + "|" + DIGIT$$),
        DEC_OCTET_RELAXED$ = subexp(subexp("25[0-5]") + "|" + subexp("2[0-4]" + DIGIT$$) + "|" + subexp("1" + DIGIT$$ + DIGIT$$) + "|" + subexp("0?[1-9]" + DIGIT$$) + "|0?0?" + DIGIT$$),
        //relaxed parsing rules
    IPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + "\\." + DEC_OCTET_RELAXED$ + "\\." + DEC_OCTET_RELAXED$ + "\\." + DEC_OCTET_RELAXED$),
        H16$ = subexp(HEXDIG$$ + "{1,4}"),
        LS32$ = subexp(subexp(H16$ + "\\:" + H16$) + "|" + IPV4ADDRESS$),
        IPV6ADDRESS1$ = subexp(subexp(H16$ + "\\:") + "{6}" + LS32$),
        //                           6( h16 ":" ) ls32
    IPV6ADDRESS2$ = subexp("\\:\\:" + subexp(H16$ + "\\:") + "{5}" + LS32$),
        //                      "::" 5( h16 ":" ) ls32
    IPV6ADDRESS3$ = subexp(subexp(H16$) + "?\\:\\:" + subexp(H16$ + "\\:") + "{4}" + LS32$),
        //[               h16 ] "::" 4( h16 ":" ) ls32
    IPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,1}" + H16$) + "?\\:\\:" + subexp(H16$ + "\\:") + "{3}" + LS32$),
        //[ *1( h16 ":" ) h16 ] "::" 3( h16 ":" ) ls32
    IPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,2}" + H16$) + "?\\:\\:" + subexp(H16$ + "\\:") + "{2}" + LS32$),
        //[ *2( h16 ":" ) h16 ] "::" 2( h16 ":" ) ls32
    IPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,3}" + H16$) + "?\\:\\:" + H16$ + "\\:" + LS32$),
        //[ *3( h16 ":" ) h16 ] "::"    h16 ":"   ls32
    IPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,4}" + H16$) + "?\\:\\:" + LS32$),
        //[ *4( h16 ":" ) h16 ] "::"              ls32
    IPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,5}" + H16$) + "?\\:\\:" + H16$),
        //[ *5( h16 ":" ) h16 ] "::"              h16
    IPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + "\\:") + "{0,6}" + H16$) + "?\\:\\:"),
        //[ *6( h16 ":" ) h16 ] "::"
    IPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join("|")),
        ZONEID$ = subexp(subexp(UNRESERVED$$ + "|" + PCT_ENCODED$) + "+"),
        //RFC 6874
    IPV6ADDRZ$ = subexp(IPV6ADDRESS$ + "\\%25" + ZONEID$),
        //RFC 6874
    IPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp("\\%25|\\%(?!" + HEXDIG$$ + "{2})") + ZONEID$),
        //RFC 6874, with relaxed parsing rules
    IPVFUTURE$ = subexp("[vV]" + HEXDIG$$ + "+\\." + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\:]") + "+"),
        IP_LITERAL$ = subexp("\\[" + subexp(IPV6ADDRZ_RELAXED$ + "|" + IPV6ADDRESS$ + "|" + IPVFUTURE$) + "\\]"),
        //RFC 6874
    REG_NAME$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$)) + "*"),
        HOST$ = subexp(IP_LITERAL$ + "|" + IPV4ADDRESS$ + "(?!" + REG_NAME$ + ")" + "|" + REG_NAME$),
        PORT$ = subexp(DIGIT$$ + "*"),
        AUTHORITY$ = subexp(subexp(USERINFO$ + "@") + "?" + HOST$ + subexp("\\:" + PORT$) + "?"),
        PCHAR$ = subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\:\\@]")),
        SEGMENT$ = subexp(PCHAR$ + "*"),
        SEGMENT_NZ$ = subexp(PCHAR$ + "+"),
        SEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + "|" + merge(UNRESERVED$$, SUB_DELIMS$$, "[\\@]")) + "+"),
        PATH_ABEMPTY$ = subexp(subexp("\\/" + SEGMENT$) + "*"),
        PATH_ABSOLUTE$ = subexp("\\/" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + "?"),
        //simplified
    PATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),
        //simplified
    PATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),
        //simplified
    PATH_EMPTY$ = "(?!" + PCHAR$ + ")",
        PATH$ = subexp(PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$),
        QUERY$ = subexp(subexp(PCHAR$ + "|" + merge("[\\/\\?]", IPRIVATE$$)) + "*"),
        FRAGMENT$ = subexp(subexp(PCHAR$ + "|[\\/\\?]") + "*"),
        HIER_PART$ = subexp(subexp("\\/\\/" + AUTHORITY$ + PATH_ABEMPTY$) + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$),
        URI$ = subexp(SCHEME$ + "\\:" + HIER_PART$ + subexp("\\?" + QUERY$) + "?" + subexp("\\#" + FRAGMENT$) + "?"),
        RELATIVE_PART$ = subexp(subexp("\\/\\/" + AUTHORITY$ + PATH_ABEMPTY$) + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_EMPTY$),
        RELATIVE$ = subexp(RELATIVE_PART$ + subexp("\\?" + QUERY$) + "?" + subexp("\\#" + FRAGMENT$) + "?"),
        URI_REFERENCE$ = subexp(URI$ + "|" + RELATIVE$),
        ABSOLUTE_URI$ = subexp(SCHEME$ + "\\:" + HIER_PART$ + subexp("\\?" + QUERY$) + "?"),
        GENERIC_REF$ = "^(" + SCHEME$ + ")\\:" + subexp(subexp("\\/\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$ + ")") + subexp("\\?(" + QUERY$ + ")") + "?" + subexp("\\#(" + FRAGMENT$ + ")") + "?$",
        RELATIVE_REF$ = "^(){0}" + subexp(subexp("\\/\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_NOSCHEME$ + "|" + PATH_EMPTY$ + ")") + subexp("\\?(" + QUERY$ + ")") + "?" + subexp("\\#(" + FRAGMENT$ + ")") + "?$",
        ABSOLUTE_REF$ = "^(" + SCHEME$ + ")\\:" + subexp(subexp("\\/\\/(" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?)") + "?(" + PATH_ABEMPTY$ + "|" + PATH_ABSOLUTE$ + "|" + PATH_ROOTLESS$ + "|" + PATH_EMPTY$ + ")") + subexp("\\?(" + QUERY$ + ")") + "?$",
        SAMEDOC_REF$ = "^" + subexp("\\#(" + FRAGMENT$ + ")") + "?$",
        AUTHORITY_REF$ = "^" + subexp("(" + USERINFO$ + ")@") + "?(" + HOST$ + ")" + subexp("\\:(" + PORT$ + ")") + "?$";
    return {
        NOT_SCHEME: new RegExp(merge("[^]", ALPHA$$, DIGIT$$, "[\\+\\-\\.]"), "g"),
        NOT_USERINFO: new RegExp(merge("[^\\%\\:]", UNRESERVED$$, SUB_DELIMS$$), "g"),
        NOT_HOST: new RegExp(merge("[^\\%\\[\\]\\:]", UNRESERVED$$, SUB_DELIMS$$), "g"),
        NOT_PATH: new RegExp(merge("[^\\%\\/\\:\\@]", UNRESERVED$$, SUB_DELIMS$$), "g"),
        NOT_PATH_NOSCHEME: new RegExp(merge("[^\\%\\/\\@]", UNRESERVED$$, SUB_DELIMS$$), "g"),
        NOT_QUERY: new RegExp(merge("[^\\%]", UNRESERVED$$, SUB_DELIMS$$, "[\\:\\@\\/\\?]", IPRIVATE$$), "g"),
        NOT_FRAGMENT: new RegExp(merge("[^\\%]", UNRESERVED$$, SUB_DELIMS$$, "[\\:\\@\\/\\?]"), "g"),
        ESCAPE: new RegExp(merge("[^]", UNRESERVED$$, SUB_DELIMS$$), "g"),
        UNRESERVED: new RegExp(UNRESERVED$$, "g"),
        OTHER_CHARS: new RegExp(merge("[^\\%]", UNRESERVED$$, RESERVED$$), "g"),
        PCT_ENCODED: new RegExp(PCT_ENCODED$, "g"),
        IPV4ADDRESS: new RegExp("^(" + IPV4ADDRESS$ + ")$"),
        IPV6ADDRESS: new RegExp("^\\[?(" + IPV6ADDRESS$ + ")" + subexp(subexp("\\%25|\\%(?!" + HEXDIG$$ + "{2})") + "(" + ZONEID$ + ")") + "?\\]?$") //RFC 6874, with relaxed parsing rules
    };
}
var URI_PROTOCOL = buildExps(false);

var IRI_PROTOCOL = buildExps(true);

var slicedToArray = function () {
  function sliceIterator(arr, i) {
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"]) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  return function (arr, i) {
    if (Array.isArray(arr)) {
      return arr;
    } else if (Symbol.iterator in Object(arr)) {
      return sliceIterator(arr, i);
    } else {
      throw new TypeError("Invalid attempt to destructure non-iterable instance");
    }
  };
}();













var toConsumableArray = function (arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];

    return arr2;
  } else {
    return Array.from(arr);
  }
};

/** Highest positive signed 32-bit float value */

var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1

/** Bootstring parameters */
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'

/** Regular expressions */
var regexPunycode = /^xn--/;
var regexNonASCII = /[^\0-\x7E]/; // non-ASCII chars
var regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g; // RFC 3490 separators

/** Error messages */
var errors = {
	'overflow': 'Overflow: input needs wider integers to process',
	'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
	'invalid-input': 'Invalid input'
};

/** Convenience shortcuts */
var baseMinusTMin = base - tMin;
var floor = Math.floor;
var stringFromCharCode = String.fromCharCode;

/*--------------------------------------------------------------------------*/

/**
 * A generic error utility function.
 * @private
 * @param {String} type The error type.
 * @returns {Error} Throws a `RangeError` with the applicable error message.
 */
function error$1(type) {
	throw new RangeError(errors[type]);
}

/**
 * A generic `Array#map` utility function.
 * @private
 * @param {Array} array The array to iterate over.
 * @param {Function} callback The function that gets called for every array
 * item.
 * @returns {Array} A new array of values returned by the callback function.
 */
function map(array, fn) {
	var result = [];
	var length = array.length;
	while (length--) {
		result[length] = fn(array[length]);
	}
	return result;
}

/**
 * A simple `Array#map`-like wrapper to work with domain name strings or email
 * addresses.
 * @private
 * @param {String} domain The domain name or email address.
 * @param {Function} callback The function that gets called for every
 * character.
 * @returns {Array} A new string of characters returned by the callback
 * function.
 */
function mapDomain(string, fn) {
	var parts = string.split('@');
	var result = '';
	if (parts.length > 1) {
		// In email addresses, only the domain name should be punycoded. Leave
		// the local part (i.e. everything up to `@`) intact.
		result = parts[0] + '@';
		string = parts[1];
	}
	// Avoid `split(regex)` for IE8 compatibility. See #17.
	string = string.replace(regexSeparators, '\x2E');
	var labels = string.split('.');
	var encoded = map(labels, fn).join('.');
	return result + encoded;
}

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 * @see `punycode.ucs2.encode`
 * @see <https://mathiasbynens.be/notes/javascript-encoding>
 * @memberOf punycode.ucs2
 * @name decode
 * @param {String} string The Unicode input string (UCS-2).
 * @returns {Array} The new array of code points.
 */
function ucs2decode(string) {
	var output = [];
	var counter = 0;
	var length = string.length;
	while (counter < length) {
		var value = string.charCodeAt(counter++);
		if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
			// It's a high surrogate, and there is a next character.
			var extra = string.charCodeAt(counter++);
			if ((extra & 0xFC00) == 0xDC00) {
				// Low surrogate.
				output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
			} else {
				// It's an unmatched surrogate; only append this code unit, in case the
				// next code unit is the high surrogate of a surrogate pair.
				output.push(value);
				counter--;
			}
		} else {
			output.push(value);
		}
	}
	return output;
}

/**
 * Creates a string based on an array of numeric code points.
 * @see `punycode.ucs2.decode`
 * @memberOf punycode.ucs2
 * @name encode
 * @param {Array} codePoints The array of numeric code points.
 * @returns {String} The new Unicode string (UCS-2).
 */
var ucs2encode = function ucs2encode(array) {
	return String.fromCodePoint.apply(String, toConsumableArray(array));
};

/**
 * Converts a basic code point into a digit/integer.
 * @see `digitToBasic()`
 * @private
 * @param {Number} codePoint The basic numeric code point value.
 * @returns {Number} The numeric value of a basic code point (for use in
 * representing integers) in the range `0` to `base - 1`, or `base` if
 * the code point does not represent a value.
 */
var basicToDigit = function basicToDigit(codePoint) {
	if (codePoint - 0x30 < 0x0A) {
		return codePoint - 0x16;
	}
	if (codePoint - 0x41 < 0x1A) {
		return codePoint - 0x41;
	}
	if (codePoint - 0x61 < 0x1A) {
		return codePoint - 0x61;
	}
	return base;
};

/**
 * Converts a digit/integer into a basic code point.
 * @see `basicToDigit()`
 * @private
 * @param {Number} digit The numeric value of a basic code point.
 * @returns {Number} The basic code point whose value (when used for
 * representing integers) is `digit`, which needs to be in the range
 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
 * used; else, the lowercase form is used. The behavior is undefined
 * if `flag` is non-zero and `digit` has no uppercase form.
 */
var digitToBasic = function digitToBasic(digit, flag) {
	//  0..25 map to ASCII a..z or A..Z
	// 26..35 map to ASCII 0..9
	return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 * @private
 */
var adapt = function adapt(delta, numPoints, firstTime) {
	var k = 0;
	delta = firstTime ? floor(delta / damp) : delta >> 1;
	delta += floor(delta / numPoints);
	for (; /* no initialization */delta > baseMinusTMin * tMax >> 1; k += base) {
		delta = floor(delta / baseMinusTMin);
	}
	return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
 * symbols.
 * @memberOf punycode
 * @param {String} input The Punycode string of ASCII-only symbols.
 * @returns {String} The resulting string of Unicode symbols.
 */
var decode = function decode(input) {
	// Don't use UCS-2.
	var output = [];
	var inputLength = input.length;
	var i = 0;
	var n = initialN;
	var bias = initialBias;

	// Handle the basic code points: let `basic` be the number of input code
	// points before the last delimiter, or `0` if there is none, then copy
	// the first basic code points to the output.

	var basic = input.lastIndexOf(delimiter);
	if (basic < 0) {
		basic = 0;
	}

	for (var j = 0; j < basic; ++j) {
		// if it's not a basic code point
		if (input.charCodeAt(j) >= 0x80) {
			error$1('not-basic');
		}
		output.push(input.charCodeAt(j));
	}

	// Main decoding loop: start just after the last delimiter if any basic code
	// points were copied; start at the beginning otherwise.

	for (var index = basic > 0 ? basic + 1 : 0; index < inputLength;) /* no final expression */{

		// `index` is the index of the next character to be consumed.
		// Decode a generalized variable-length integer into `delta`,
		// which gets added to `i`. The overflow checking is easier
		// if we increase `i` as we go, then subtract off its starting
		// value at the end to obtain `delta`.
		var oldi = i;
		for (var w = 1, k = base;; /* no condition */k += base) {

			if (index >= inputLength) {
				error$1('invalid-input');
			}

			var digit = basicToDigit(input.charCodeAt(index++));

			if (digit >= base || digit > floor((maxInt - i) / w)) {
				error$1('overflow');
			}

			i += digit * w;
			var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

			if (digit < t) {
				break;
			}

			var baseMinusT = base - t;
			if (w > floor(maxInt / baseMinusT)) {
				error$1('overflow');
			}

			w *= baseMinusT;
		}

		var out = output.length + 1;
		bias = adapt(i - oldi, out, oldi == 0);

		// `i` was supposed to wrap around from `out` to `0`,
		// incrementing `n` each time, so we'll fix that now:
		if (floor(i / out) > maxInt - n) {
			error$1('overflow');
		}

		n += floor(i / out);
		i %= out;

		// Insert `n` at position `i` of the output.
		output.splice(i++, 0, n);
	}

	return String.fromCodePoint.apply(String, output);
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 * @memberOf punycode
 * @param {String} input The string of Unicode symbols.
 * @returns {String} The resulting Punycode string of ASCII-only symbols.
 */
var encode = function encode(input) {
	var output = [];

	// Convert the input in UCS-2 to an array of Unicode code points.
	input = ucs2decode(input);

	// Cache the length.
	var inputLength = input.length;

	// Initialize the state.
	var n = initialN;
	var delta = 0;
	var bias = initialBias;

	// Handle the basic code points.
	var _iteratorNormalCompletion = true;
	var _didIteratorError = false;
	var _iteratorError = undefined;

	try {
		for (var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
			var _currentValue2 = _step.value;

			if (_currentValue2 < 0x80) {
				output.push(stringFromCharCode(_currentValue2));
			}
		}
	} catch (err) {
		_didIteratorError = true;
		_iteratorError = err;
	} finally {
		try {
			if (!_iteratorNormalCompletion && _iterator.return) {
				_iterator.return();
			}
		} finally {
			if (_didIteratorError) {
				throw _iteratorError;
			}
		}
	}

	var basicLength = output.length;
	var handledCPCount = basicLength;

	// `handledCPCount` is the number of code points that have been handled;
	// `basicLength` is the number of basic code points.

	// Finish the basic string with a delimiter unless it's empty.
	if (basicLength) {
		output.push(delimiter);
	}

	// Main encoding loop:
	while (handledCPCount < inputLength) {

		// All non-basic code points < n have been handled already. Find the next
		// larger one:
		var m = maxInt;
		var _iteratorNormalCompletion2 = true;
		var _didIteratorError2 = false;
		var _iteratorError2 = undefined;

		try {
			for (var _iterator2 = input[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
				var currentValue = _step2.value;

				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow.
		} catch (err) {
			_didIteratorError2 = true;
			_iteratorError2 = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion2 && _iterator2.return) {
					_iterator2.return();
				}
			} finally {
				if (_didIteratorError2) {
					throw _iteratorError2;
				}
			}
		}

		var handledCPCountPlusOne = handledCPCount + 1;
		if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
			error$1('overflow');
		}

		delta += (m - n) * handledCPCountPlusOne;
		n = m;

		var _iteratorNormalCompletion3 = true;
		var _didIteratorError3 = false;
		var _iteratorError3 = undefined;

		try {
			for (var _iterator3 = input[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
				var _currentValue = _step3.value;

				if (_currentValue < n && ++delta > maxInt) {
					error$1('overflow');
				}
				if (_currentValue == n) {
					// Represent delta as a generalized variable-length integer.
					var q = delta;
					for (var k = base;; /* no condition */k += base) {
						var t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
						if (q < t) {
							break;
						}
						var qMinusT = q - t;
						var baseMinusT = base - t;
						output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}
		} catch (err) {
			_didIteratorError3 = true;
			_iteratorError3 = err;
		} finally {
			try {
				if (!_iteratorNormalCompletion3 && _iterator3.return) {
					_iterator3.return();
				}
			} finally {
				if (_didIteratorError3) {
					throw _iteratorError3;
				}
			}
		}

		++delta;
		++n;
	}
	return output.join('');
};

/**
 * Converts a Punycode string representing a domain name or an email address
 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
 * it doesn't matter if you call it on a string that has already been
 * converted to Unicode.
 * @memberOf punycode
 * @param {String} input The Punycoded domain name or email address to
 * convert to Unicode.
 * @returns {String} The Unicode representation of the given Punycode
 * string.
 */
var toUnicode = function toUnicode(input) {
	return mapDomain(input, function (string) {
		return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
	});
};

/**
 * Converts a Unicode string representing a domain name or an email address to
 * Punycode. Only the non-ASCII parts of the domain name will be converted,
 * i.e. it doesn't matter if you call it with a domain that's already in
 * ASCII.
 * @memberOf punycode
 * @param {String} input The domain name or email address to convert, as a
 * Unicode string.
 * @returns {String} The Punycode representation of the given domain name or
 * email address.
 */
var toASCII = function toASCII(input) {
	return mapDomain(input, function (string) {
		return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
	});
};

/*--------------------------------------------------------------------------*/

/** Define the public API */
var punycode = {
	/**
  * A string representing the current Punycode.js version number.
  * @memberOf punycode
  * @type String
  */
	'version': '2.1.0',
	/**
  * An object of methods to convert from JavaScript's internal character
  * representation (UCS-2) to Unicode code points, and back.
  * @see <https://mathiasbynens.be/notes/javascript-encoding>
  * @memberOf punycode
  * @type Object
  */
	'ucs2': {
		'decode': ucs2decode,
		'encode': ucs2encode
	},
	'decode': decode,
	'encode': encode,
	'toASCII': toASCII,
	'toUnicode': toUnicode
};

/**
 * URI.js
 *
 * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.
 * @author <a href="mailto:gary.court@gmail.com">Gary Court</a>
 * @see http://github.com/garycourt/uri-js
 */
/**
 * Copyright 2011 Gary Court. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 *
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Gary Court.
 */
var SCHEMES = {};
function pctEncChar(chr) {
    var c = chr.charCodeAt(0);
    var e = void 0;
    if (c < 16) e = "%0" + c.toString(16).toUpperCase();else if (c < 128) e = "%" + c.toString(16).toUpperCase();else if (c < 2048) e = "%" + (c >> 6 | 192).toString(16).toUpperCase() + "%" + (c & 63 | 128).toString(16).toUpperCase();else e = "%" + (c >> 12 | 224).toString(16).toUpperCase() + "%" + (c >> 6 & 63 | 128).toString(16).toUpperCase() + "%" + (c & 63 | 128).toString(16).toUpperCase();
    return e;
}
function pctDecChars(str) {
    var newStr = "";
    var i = 0;
    var il = str.length;
    while (i < il) {
        var c = parseInt(str.substr(i + 1, 2), 16);
        if (c < 128) {
            newStr += String.fromCharCode(c);
            i += 3;
        } else if (c >= 194 && c < 224) {
            if (il - i >= 6) {
                var c2 = parseInt(str.substr(i + 4, 2), 16);
                newStr += String.fromCharCode((c & 31) << 6 | c2 & 63);
            } else {
                newStr += str.substr(i, 6);
            }
            i += 6;
        } else if (c >= 224) {
            if (il - i >= 9) {
                var _c = parseInt(str.substr(i + 4, 2), 16);
                var c3 = parseInt(str.substr(i + 7, 2), 16);
                newStr += String.fromCharCode((c & 15) << 12 | (_c & 63) << 6 | c3 & 63);
            } else {
                newStr += str.substr(i, 9);
            }
            i += 9;
        } else {
            newStr += str.substr(i, 3);
            i += 3;
        }
    }
    return newStr;
}
function _normalizeComponentEncoding(components, protocol) {
    function decodeUnreserved(str) {
        var decStr = pctDecChars(str);
        return !decStr.match(protocol.UNRESERVED) ? str : decStr;
    }
    if (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, "");
    if (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
    if (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
    if (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
    if (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
    if (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);
    return components;
}

function _stripLeadingZeros(str) {
    return str.replace(/^0*(.*)/, "$1") || "0";
}
function _normalizeIPv4(host, protocol) {
    var matches = host.match(protocol.IPV4ADDRESS) || [];

    var _matches = slicedToArray(matches, 2),
        address = _matches[1];

    if (address) {
        return address.split(".").map(_stripLeadingZeros).join(".");
    } else {
        return host;
    }
}
function _normalizeIPv6(host, protocol) {
    var matches = host.match(protocol.IPV6ADDRESS) || [];

    var _matches2 = slicedToArray(matches, 3),
        address = _matches2[1],
        zone = _matches2[2];

    if (address) {
        var _address$toLowerCase$ = address.toLowerCase().split('::').reverse(),
            _address$toLowerCase$2 = slicedToArray(_address$toLowerCase$, 2),
            last = _address$toLowerCase$2[0],
            first = _address$toLowerCase$2[1];

        var firstFields = first ? first.split(":").map(_stripLeadingZeros) : [];
        var lastFields = last.split(":").map(_stripLeadingZeros);
        var isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);
        var fieldCount = isLastFieldIPv4Address ? 7 : 8;
        var lastFieldsStart = lastFields.length - fieldCount;
        var fields = Array(fieldCount);
        for (var x = 0; x < fieldCount; ++x) {
            fields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';
        }
        if (isLastFieldIPv4Address) {
            fields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);
        }
        var allZeroFields = fields.reduce(function (acc, field, index) {
            if (!field || field === "0") {
                var lastLongest = acc[acc.length - 1];
                if (lastLongest && lastLongest.index + lastLongest.length === index) {
                    lastLongest.length++;
                } else {
                    acc.push({ index: index, length: 1 });
                }
            }
            return acc;
        }, []);
        var longestZeroFields = allZeroFields.sort(function (a, b) {
            return b.length - a.length;
        })[0];
        var newHost = void 0;
        if (longestZeroFields && longestZeroFields.length > 1) {
            var newFirst = fields.slice(0, longestZeroFields.index);
            var newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);
            newHost = newFirst.join(":") + "::" + newLast.join(":");
        } else {
            newHost = fields.join(":");
        }
        if (zone) {
            newHost += "%" + zone;
        }
        return newHost;
    } else {
        return host;
    }
}
var URI_PARSE = /^(?:([^:\/?#]+):)?(?:\/\/((?:([^\/?#@]*)@)?(\[[^\/?#\]]+\]|[^\/?#:]*)(?:\:(\d*))?))?([^?#]*)(?:\?([^#]*))?(?:#((?:.|\n|\r)*))?/i;
var NO_MATCH_IS_UNDEFINED = "".match(/(){0}/)[1] === undefined;
function parse(uriString) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var components = {};
    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;
    if (options.reference === "suffix") uriString = (options.scheme ? options.scheme + ":" : "") + "//" + uriString;
    var matches = uriString.match(URI_PARSE);
    if (matches) {
        if (NO_MATCH_IS_UNDEFINED) {
            //store each component
            components.scheme = matches[1];
            components.userinfo = matches[3];
            components.host = matches[4];
            components.port = parseInt(matches[5], 10);
            components.path = matches[6] || "";
            components.query = matches[7];
            components.fragment = matches[8];
            //fix port number
            if (isNaN(components.port)) {
                components.port = matches[5];
            }
        } else {
            //IE FIX for improper RegExp matching
            //store each component
            components.scheme = matches[1] || undefined;
            components.userinfo = uriString.indexOf("@") !== -1 ? matches[3] : undefined;
            components.host = uriString.indexOf("//") !== -1 ? matches[4] : undefined;
            components.port = parseInt(matches[5], 10);
            components.path = matches[6] || "";
            components.query = uriString.indexOf("?") !== -1 ? matches[7] : undefined;
            components.fragment = uriString.indexOf("#") !== -1 ? matches[8] : undefined;
            //fix port number
            if (isNaN(components.port)) {
                components.port = uriString.match(/\/\/(?:.|\n)*\:(?:\/|\?|\#|$)/) ? matches[4] : undefined;
            }
        }
        if (components.host) {
            //normalize IP hosts
            components.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);
        }
        //determine reference type
        if (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {
            components.reference = "same-document";
        } else if (components.scheme === undefined) {
            components.reference = "relative";
        } else if (components.fragment === undefined) {
            components.reference = "absolute";
        } else {
            components.reference = "uri";
        }
        //check for reference errors
        if (options.reference && options.reference !== "suffix" && options.reference !== components.reference) {
            components.error = components.error || "URI is not a " + options.reference + " reference.";
        }
        //find scheme handler
        var schemeHandler = SCHEMES[(options.scheme || components.scheme || "").toLowerCase()];
        //check if scheme can't handle IRIs
        if (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {
            //if host component is a domain name
            if (components.host && (options.domainHost || schemeHandler && schemeHandler.domainHost)) {
                //convert Unicode IDN -> ASCII IDN
                try {
                    components.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());
                } catch (e) {
                    components.error = components.error || "Host's domain name can not be converted to ASCII via punycode: " + e;
                }
            }
            //convert IRI -> URI
            _normalizeComponentEncoding(components, URI_PROTOCOL);
        } else {
            //normalize encodings
            _normalizeComponentEncoding(components, protocol);
        }
        //perform scheme specific parsing
        if (schemeHandler && schemeHandler.parse) {
            schemeHandler.parse(components, options);
        }
    } else {
        components.error = components.error || "URI can not be parsed.";
    }
    return components;
}

function _recomposeAuthority(components, options) {
    var protocol = options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL;
    var uriTokens = [];
    if (components.userinfo !== undefined) {
        uriTokens.push(components.userinfo);
        uriTokens.push("@");
    }
    if (components.host !== undefined) {
        //normalize IP hosts, add brackets and escape zone separator for IPv6
        uriTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, function (_, $1, $2) {
            return "[" + $1 + ($2 ? "%25" + $2 : "") + "]";
        }));
    }
    if (typeof components.port === "number") {
        uriTokens.push(":");
        uriTokens.push(components.port.toString(10));
    }
    return uriTokens.length ? uriTokens.join("") : undefined;
}

var RDS1 = /^\.\.?\//;
var RDS2 = /^\/\.(\/|$)/;
var RDS3 = /^\/\.\.(\/|$)/;
var RDS5 = /^\/?(?:.|\n)*?(?=\/|$)/;
function removeDotSegments(input) {
    var output = [];
    while (input.length) {
        if (input.match(RDS1)) {
            input = input.replace(RDS1, "");
        } else if (input.match(RDS2)) {
            input = input.replace(RDS2, "/");
        } else if (input.match(RDS3)) {
            input = input.replace(RDS3, "/");
            output.pop();
        } else if (input === "." || input === "..") {
            input = "";
        } else {
            var im = input.match(RDS5);
            if (im) {
                var s = im[0];
                input = input.slice(s.length);
                output.push(s);
            } else {
                throw new Error("Unexpected dot segment condition");
            }
        }
    }
    return output.join("");
}

function serialize(components) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    var protocol = options.iri ? IRI_PROTOCOL : URI_PROTOCOL;
    var uriTokens = [];
    //find scheme handler
    var schemeHandler = SCHEMES[(options.scheme || components.scheme || "").toLowerCase()];
    //perform scheme specific serialization
    if (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);
    if (components.host) {
        //if host component is an IPv6 address
        if (protocol.IPV6ADDRESS.test(components.host)) {}
        //TODO: normalize IPv6 address as per RFC 5952

        //if host component is a domain name
        else if (options.domainHost || schemeHandler && schemeHandler.domainHost) {
                //convert IDN via punycode
                try {
                    components.host = !options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host);
                } catch (e) {
                    components.error = components.error || "Host's domain name can not be converted to " + (!options.iri ? "ASCII" : "Unicode") + " via punycode: " + e;
                }
            }
    }
    //normalize encoding
    _normalizeComponentEncoding(components, protocol);
    if (options.reference !== "suffix" && components.scheme) {
        uriTokens.push(components.scheme);
        uriTokens.push(":");
    }
    var authority = _recomposeAuthority(components, options);
    if (authority !== undefined) {
        if (options.reference !== "suffix") {
            uriTokens.push("//");
        }
        uriTokens.push(authority);
        if (components.path && components.path.charAt(0) !== "/") {
            uriTokens.push("/");
        }
    }
    if (components.path !== undefined) {
        var s = components.path;
        if (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {
            s = removeDotSegments(s);
        }
        if (authority === undefined) {
            s = s.replace(/^\/\//, "/%2F"); //don't allow the path to start with "//"
        }
        uriTokens.push(s);
    }
    if (components.query !== undefined) {
        uriTokens.push("?");
        uriTokens.push(components.query);
    }
    if (components.fragment !== undefined) {
        uriTokens.push("#");
        uriTokens.push(components.fragment);
    }
    return uriTokens.join(""); //merge tokens into a string
}

function resolveComponents(base, relative) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    var skipNormalization = arguments[3];

    var target = {};
    if (!skipNormalization) {
        base = parse(serialize(base, options), options); //normalize base components
        relative = parse(serialize(relative, options), options); //normalize relative components
    }
    options = options || {};
    if (!options.tolerant && relative.scheme) {
        target.scheme = relative.scheme;
        //target.authority = relative.authority;
        target.userinfo = relative.userinfo;
        target.host = relative.host;
        target.port = relative.port;
        target.path = removeDotSegments(relative.path || "");
        target.query = relative.query;
    } else {
        if (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {
            //target.authority = relative.authority;
            target.userinfo = relative.userinfo;
            target.host = relative.host;
            target.port = relative.port;
            target.path = removeDotSegments(relative.path || "");
            target.query = relative.query;
        } else {
            if (!relative.path) {
                target.path = base.path;
                if (relative.query !== undefined) {
                    target.query = relative.query;
                } else {
                    target.query = base.query;
                }
            } else {
                if (relative.path.charAt(0) === "/") {
                    target.path = removeDotSegments(relative.path);
                } else {
                    if ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {
                        target.path = "/" + relative.path;
                    } else if (!base.path) {
                        target.path = relative.path;
                    } else {
                        target.path = base.path.slice(0, base.path.lastIndexOf("/") + 1) + relative.path;
                    }
                    target.path = removeDotSegments(target.path);
                }
                target.query = relative.query;
            }
            //target.authority = base.authority;
            target.userinfo = base.userinfo;
            target.host = base.host;
            target.port = base.port;
        }
        target.scheme = base.scheme;
    }
    target.fragment = relative.fragment;
    return target;
}

function resolve(baseURI, relativeURI, options) {
    var schemelessOptions = assign({ scheme: 'null' }, options);
    return serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);
}

function normalize(uri, options) {
    if (typeof uri === "string") {
        uri = serialize(parse(uri, options), options);
    } else if (typeOf(uri) === "object") {
        uri = parse(serialize(uri, options), options);
    }
    return uri;
}

function equal(uriA, uriB, options) {
    if (typeof uriA === "string") {
        uriA = serialize(parse(uriA, options), options);
    } else if (typeOf(uriA) === "object") {
        uriA = serialize(uriA, options);
    }
    if (typeof uriB === "string") {
        uriB = serialize(parse(uriB, options), options);
    } else if (typeOf(uriB) === "object") {
        uriB = serialize(uriB, options);
    }
    return uriA === uriB;
}

function escapeComponent(str, options) {
    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE, pctEncChar);
}

function unescapeComponent(str, options) {
    return str && str.toString().replace(!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED, pctDecChars);
}

var handler = {
    scheme: "http",
    domainHost: true,
    parse: function parse(components, options) {
        //report missing host
        if (!components.host) {
            components.error = components.error || "HTTP URIs must have a host.";
        }
        return components;
    },
    serialize: function serialize(components, options) {
        //normalize the default port
        if (components.port === (String(components.scheme).toLowerCase() !== "https" ? 80 : 443) || components.port === "") {
            components.port = undefined;
        }
        //normalize the empty path
        if (!components.path) {
            components.path = "/";
        }
        //NOTE: We do not parse query strings for HTTP URIs
        //as WWW Form Url Encoded query strings are part of the HTML4+ spec,
        //and not the HTTP spec.
        return components;
    }
};

var handler$1 = {
    scheme: "https",
    domainHost: handler.domainHost,
    parse: handler.parse,
    serialize: handler.serialize
};

var O = {};
var isIRI = true;
//RFC 3986
var UNRESERVED$$ = "[A-Za-z0-9\\-\\.\\_\\~" + (isIRI ? "\\xA0-\\u200D\\u2010-\\u2029\\u202F-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF" : "") + "]";
var HEXDIG$$ = "[0-9A-Fa-f]"; //case-insensitive
var PCT_ENCODED$ = subexp(subexp("%[EFef]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%[89A-Fa-f]" + HEXDIG$$ + "%" + HEXDIG$$ + HEXDIG$$) + "|" + subexp("%" + HEXDIG$$ + HEXDIG$$)); //expanded
//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =
//const ATEXT$$ = "[A-Za-z0-9\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\_\\`\\{\\|\\}\\~]";
//const WSP$$ = "[\\x20\\x09]";
//const OBS_QTEXT$$ = "[\\x01-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]";  //(%d1-8 / %d11-12 / %d14-31 / %d127)
//const QTEXT$$ = merge("[\\x21\\x23-\\x5B\\x5D-\\x7E]", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext
//const VCHAR$$ = "[\\x21-\\x7E]";
//const WSP$$ = "[\\x20\\x09]";
//const OBS_QP$ = subexp("\\\\" + merge("[\\x00\\x0D\\x0A]", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext
//const FWS$ = subexp(subexp(WSP$$ + "*" + "\\x0D\\x0A") + "?" + WSP$$ + "+");
//const QUOTED_PAIR$ = subexp(subexp("\\\\" + subexp(VCHAR$$ + "|" + WSP$$)) + "|" + OBS_QP$);
//const QUOTED_STRING$ = subexp('\\"' + subexp(FWS$ + "?" + QCONTENT$) + "*" + FWS$ + "?" + '\\"');
var ATEXT$$ = "[A-Za-z0-9\\!\\$\\%\\'\\*\\+\\-\\^\\_\\`\\{\\|\\}\\~]";
var QTEXT$$ = "[\\!\\$\\%\\'\\(\\)\\*\\+\\,\\-\\.0-9\\<\\>A-Z\\x5E-\\x7E]";
var VCHAR$$ = merge(QTEXT$$, "[\\\"\\\\]");
var SOME_DELIMS$$ = "[\\!\\$\\'\\(\\)\\*\\+\\,\\;\\:\\@]";
var UNRESERVED = new RegExp(UNRESERVED$$, "g");
var PCT_ENCODED = new RegExp(PCT_ENCODED$, "g");
var NOT_LOCAL_PART = new RegExp(merge("[^]", ATEXT$$, "[\\.]", '[\\"]', VCHAR$$), "g");
var NOT_HFNAME = new RegExp(merge("[^]", UNRESERVED$$, SOME_DELIMS$$), "g");
var NOT_HFVALUE = NOT_HFNAME;
function decodeUnreserved(str) {
    var decStr = pctDecChars(str);
    return !decStr.match(UNRESERVED) ? str : decStr;
}
var handler$2 = {
    scheme: "mailto",
    parse: function parse$$1(components, options) {
        var mailtoComponents = components;
        var to = mailtoComponents.to = mailtoComponents.path ? mailtoComponents.path.split(",") : [];
        mailtoComponents.path = undefined;
        if (mailtoComponents.query) {
            var unknownHeaders = false;
            var headers = {};
            var hfields = mailtoComponents.query.split("&");
            for (var x = 0, xl = hfields.length; x < xl; ++x) {
                var hfield = hfields[x].split("=");
                switch (hfield[0]) {
                    case "to":
                        var toAddrs = hfield[1].split(",");
                        for (var _x = 0, _xl = toAddrs.length; _x < _xl; ++_x) {
                            to.push(toAddrs[_x]);
                        }
                        break;
                    case "subject":
                        mailtoComponents.subject = unescapeComponent(hfield[1], options);
                        break;
                    case "body":
                        mailtoComponents.body = unescapeComponent(hfield[1], options);
                        break;
                    default:
                        unknownHeaders = true;
                        headers[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);
                        break;
                }
            }
            if (unknownHeaders) mailtoComponents.headers = headers;
        }
        mailtoComponents.query = undefined;
        for (var _x2 = 0, _xl2 = to.length; _x2 < _xl2; ++_x2) {
            var addr = to[_x2].split("@");
            addr[0] = unescapeComponent(addr[0]);
            if (!options.unicodeSupport) {
                //convert Unicode IDN -> ASCII IDN
                try {
                    addr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());
                } catch (e) {
                    mailtoComponents.error = mailtoComponents.error || "Email address's domain name can not be converted to ASCII via punycode: " + e;
                }
            } else {
                addr[1] = unescapeComponent(addr[1], options).toLowerCase();
            }
            to[_x2] = addr.join("@");
        }
        return mailtoComponents;
    },
    serialize: function serialize$$1(mailtoComponents, options) {
        var components = mailtoComponents;
        var to = toArray(mailtoComponents.to);
        if (to) {
            for (var x = 0, xl = to.length; x < xl; ++x) {
                var toAddr = String(to[x]);
                var atIdx = toAddr.lastIndexOf("@");
                var localPart = toAddr.slice(0, atIdx).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);
                var domain = toAddr.slice(atIdx + 1);
                //convert IDN via punycode
                try {
                    domain = !options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain);
                } catch (e) {
                    components.error = components.error || "Email address's domain name can not be converted to " + (!options.iri ? "ASCII" : "Unicode") + " via punycode: " + e;
                }
                to[x] = localPart + "@" + domain;
            }
            components.path = to.join(",");
        }
        var headers = mailtoComponents.headers = mailtoComponents.headers || {};
        if (mailtoComponents.subject) headers["subject"] = mailtoComponents.subject;
        if (mailtoComponents.body) headers["body"] = mailtoComponents.body;
        var fields = [];
        for (var name in headers) {
            if (headers[name] !== O[name]) {
                fields.push(name.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) + "=" + headers[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar));
            }
        }
        if (fields.length) {
            components.query = fields.join("&");
        }
        return components;
    }
};

var URN_PARSE = /^([^\:]+)\:(.*)/;
//RFC 2141
var handler$3 = {
    scheme: "urn",
    parse: function parse$$1(components, options) {
        var matches = components.path && components.path.match(URN_PARSE);
        var urnComponents = components;
        if (matches) {
            var scheme = options.scheme || urnComponents.scheme || "urn";
            var nid = matches[1].toLowerCase();
            var nss = matches[2];
            var urnScheme = scheme + ":" + (options.nid || nid);
            var schemeHandler = SCHEMES[urnScheme];
            urnComponents.nid = nid;
            urnComponents.nss = nss;
            urnComponents.path = undefined;
            if (schemeHandler) {
                urnComponents = schemeHandler.parse(urnComponents, options);
            }
        } else {
            urnComponents.error = urnComponents.error || "URN can not be parsed.";
        }
        return urnComponents;
    },
    serialize: function serialize$$1(urnComponents, options) {
        var scheme = options.scheme || urnComponents.scheme || "urn";
        var nid = urnComponents.nid;
        var urnScheme = scheme + ":" + (options.nid || nid);
        var schemeHandler = SCHEMES[urnScheme];
        if (schemeHandler) {
            urnComponents = schemeHandler.serialize(urnComponents, options);
        }
        var uriComponents = urnComponents;
        var nss = urnComponents.nss;
        uriComponents.path = (nid || options.nid) + ":" + nss;
        return uriComponents;
    }
};

var UUID = /^[0-9A-Fa-f]{8}(?:\-[0-9A-Fa-f]{4}){3}\-[0-9A-Fa-f]{12}$/;
//RFC 4122
var handler$4 = {
    scheme: "urn:uuid",
    parse: function parse(urnComponents, options) {
        var uuidComponents = urnComponents;
        uuidComponents.uuid = uuidComponents.nss;
        uuidComponents.nss = undefined;
        if (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {
            uuidComponents.error = uuidComponents.error || "UUID is not valid.";
        }
        return uuidComponents;
    },
    serialize: function serialize(uuidComponents, options) {
        var urnComponents = uuidComponents;
        //normalize UUID
        urnComponents.nss = (uuidComponents.uuid || "").toLowerCase();
        return urnComponents;
    }
};

SCHEMES[handler.scheme] = handler;
SCHEMES[handler$1.scheme] = handler$1;
SCHEMES[handler$2.scheme] = handler$2;
SCHEMES[handler$3.scheme] = handler$3;
SCHEMES[handler$4.scheme] = handler$4;

exports.SCHEMES = SCHEMES;
exports.pctEncChar = pctEncChar;
exports.pctDecChars = pctDecChars;
exports.parse = parse;
exports.removeDotSegments = removeDotSegments;
exports.serialize = serialize;
exports.resolveComponents = resolveComponents;
exports.resolve = resolve;
exports.normalize = normalize;
exports.equal = equal;
exports.escapeComponent = escapeComponent;
exports.unescapeComponent = unescapeComponent;

Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=uri.all.js.map


/***/ }),

/***/ "../node_modules/validate.js/validate.js":
/*!***********************************************!*\
  !*** ../node_modules/validate.js/validate.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {/*!
 * validate.js 0.12.0
 *
 * (c) 2013-2017 Nicklas Ansman, 2013 Wrapp
 * Validate.js may be freely distributed under the MIT license.
 * For all details and documentation:
 * http://validatejs.org/
 */

(function(exports, module, define) {
  "use strict";

  // The main function that calls the validators specified by the constraints.
  // The options are the following:
  //   - format (string) - An option that controls how the returned value is formatted
  //     * flat - Returns a flat array of just the error messages
  //     * grouped - Returns the messages grouped by attribute (default)
  //     * detailed - Returns an array of the raw validation data
  //   - fullMessages (boolean) - If `true` (default) the attribute name is prepended to the error.
  //
  // Please note that the options are also passed to each validator.
  var validate = function(attributes, constraints, options) {
    options = v.extend({}, v.options, options);

    var results = v.runValidations(attributes, constraints, options)
      , attr
      , validator;

    if (results.some(function(r) { return v.isPromise(r.error); })) {
      throw new Error("Use validate.async if you want support for promises");
    }
    return validate.processValidationResults(results, options);
  };

  var v = validate;

  // Copies over attributes from one or more sources to a single destination.
  // Very much similar to underscore's extend.
  // The first argument is the target object and the remaining arguments will be
  // used as sources.
  v.extend = function(obj) {
    [].slice.call(arguments, 1).forEach(function(source) {
      for (var attr in source) {
        obj[attr] = source[attr];
      }
    });
    return obj;
  };

  v.extend(validate, {
    // This is the version of the library as a semver.
    // The toString function will allow it to be coerced into a string
    version: {
      major: 0,
      minor: 12,
      patch: 0,
      metadata: null,
      toString: function() {
        var version = v.format("%{major}.%{minor}.%{patch}", v.version);
        if (!v.isEmpty(v.version.metadata)) {
          version += "+" + v.version.metadata;
        }
        return version;
      }
    },

    // Below is the dependencies that are used in validate.js

    // The constructor of the Promise implementation.
    // If you are using Q.js, RSVP or any other A+ compatible implementation
    // override this attribute to be the constructor of that promise.
    // Since jQuery promises aren't A+ compatible they won't work.
    Promise: typeof Promise !== "undefined" ? Promise : /* istanbul ignore next */ null,

    EMPTY_STRING_REGEXP: /^\s*$/,

    // Runs the validators specified by the constraints object.
    // Will return an array of the format:
    //     [{attribute: "<attribute name>", error: "<validation result>"}, ...]
    runValidations: function(attributes, constraints, options) {
      var results = []
        , attr
        , validatorName
        , value
        , validators
        , validator
        , validatorOptions
        , error;

      if (v.isDomElement(attributes) || v.isJqueryElement(attributes)) {
        attributes = v.collectFormValues(attributes);
      }

      // Loops through each constraints, finds the correct validator and run it.
      for (attr in constraints) {
        value = v.getDeepObjectValue(attributes, attr);
        // This allows the constraints for an attribute to be a function.
        // The function will be called with the value, attribute name, the complete dict of
        // attributes as well as the options and constraints passed in.
        // This is useful when you want to have different
        // validations depending on the attribute value.
        validators = v.result(constraints[attr], value, attributes, attr, options, constraints);

        for (validatorName in validators) {
          validator = v.validators[validatorName];

          if (!validator) {
            error = v.format("Unknown validator %{name}", {name: validatorName});
            throw new Error(error);
          }

          validatorOptions = validators[validatorName];
          // This allows the options to be a function. The function will be
          // called with the value, attribute name, the complete dict of
          // attributes as well as the options and constraints passed in.
          // This is useful when you want to have different
          // validations depending on the attribute value.
          validatorOptions = v.result(validatorOptions, value, attributes, attr, options, constraints);
          if (!validatorOptions) {
            continue;
          }
          results.push({
            attribute: attr,
            value: value,
            validator: validatorName,
            globalOptions: options,
            attributes: attributes,
            options: validatorOptions,
            error: validator.call(validator,
                value,
                validatorOptions,
                attr,
                attributes,
                options)
          });
        }
      }

      return results;
    },

    // Takes the output from runValidations and converts it to the correct
    // output format.
    processValidationResults: function(errors, options) {
      errors = v.pruneEmptyErrors(errors, options);
      errors = v.expandMultipleErrors(errors, options);
      errors = v.convertErrorMessages(errors, options);

      var format = options.format || "grouped";

      if (typeof v.formatters[format] === 'function') {
        errors = v.formatters[format](errors);
      } else {
        throw new Error(v.format("Unknown format %{format}", options));
      }

      return v.isEmpty(errors) ? undefined : errors;
    },

    // Runs the validations with support for promises.
    // This function will return a promise that is settled when all the
    // validation promises have been completed.
    // It can be called even if no validations returned a promise.
    async: function(attributes, constraints, options) {
      options = v.extend({}, v.async.options, options);

      var WrapErrors = options.wrapErrors || function(errors) {
        return errors;
      };

      // Removes unknown attributes
      if (options.cleanAttributes !== false) {
        attributes = v.cleanAttributes(attributes, constraints);
      }

      var results = v.runValidations(attributes, constraints, options);

      return new v.Promise(function(resolve, reject) {
        v.waitForResults(results).then(function() {
          var errors = v.processValidationResults(results, options);
          if (errors) {
            reject(new WrapErrors(errors, options, attributes, constraints));
          } else {
            resolve(attributes);
          }
        }, function(err) {
          reject(err);
        });
      });
    },

    single: function(value, constraints, options) {
      options = v.extend({}, v.single.options, options, {
        format: "flat",
        fullMessages: false
      });
      return v({single: value}, {single: constraints}, options);
    },

    // Returns a promise that is resolved when all promises in the results array
    // are settled. The promise returned from this function is always resolved,
    // never rejected.
    // This function modifies the input argument, it replaces the promises
    // with the value returned from the promise.
    waitForResults: function(results) {
      // Create a sequence of all the results starting with a resolved promise.
      return results.reduce(function(memo, result) {
        // If this result isn't a promise skip it in the sequence.
        if (!v.isPromise(result.error)) {
          return memo;
        }

        return memo.then(function() {
          return result.error.then(function(error) {
            result.error = error || null;
          });
        });
      }, new v.Promise(function(r) { r(); })); // A resolved promise
    },

    // If the given argument is a call: function the and: function return the value
    // otherwise just return the value. Additional arguments will be passed as
    // arguments to the function.
    // Example:
    // ```
    // result('foo') // 'foo'
    // result(Math.max, 1, 2) // 2
    // ```
    result: function(value) {
      var args = [].slice.call(arguments, 1);
      if (typeof value === 'function') {
        value = value.apply(null, args);
      }
      return value;
    },

    // Checks if the value is a number. This function does not consider NaN a
    // number like many other `isNumber` functions do.
    isNumber: function(value) {
      return typeof value === 'number' && !isNaN(value);
    },

    // Returns false if the object is not a function
    isFunction: function(value) {
      return typeof value === 'function';
    },

    // A simple check to verify that the value is an integer. Uses `isNumber`
    // and a simple modulo check.
    isInteger: function(value) {
      return v.isNumber(value) && value % 1 === 0;
    },

    // Checks if the value is a boolean
    isBoolean: function(value) {
      return typeof value === 'boolean';
    },

    // Uses the `Object` function to check if the given argument is an object.
    isObject: function(obj) {
      return obj === Object(obj);
    },

    // Simply checks if the object is an instance of a date
    isDate: function(obj) {
      return obj instanceof Date;
    },

    // Returns false if the object is `null` of `undefined`
    isDefined: function(obj) {
      return obj !== null && obj !== undefined;
    },

    // Checks if the given argument is a promise. Anything with a `then`
    // function is considered a promise.
    isPromise: function(p) {
      return !!p && v.isFunction(p.then);
    },

    isJqueryElement: function(o) {
      return o && v.isString(o.jquery);
    },

    isDomElement: function(o) {
      if (!o) {
        return false;
      }

      if (!o.querySelectorAll || !o.querySelector) {
        return false;
      }

      if (v.isObject(document) && o === document) {
        return true;
      }

      // http://stackoverflow.com/a/384380/699304
      /* istanbul ignore else */
      if (typeof HTMLElement === "object") {
        return o instanceof HTMLElement;
      } else {
        return o &&
          typeof o === "object" &&
          o !== null &&
          o.nodeType === 1 &&
          typeof o.nodeName === "string";
      }
    },

    isEmpty: function(value) {
      var attr;

      // Null and undefined are empty
      if (!v.isDefined(value)) {
        return true;
      }

      // functions are non empty
      if (v.isFunction(value)) {
        return false;
      }

      // Whitespace only strings are empty
      if (v.isString(value)) {
        return v.EMPTY_STRING_REGEXP.test(value);
      }

      // For arrays we use the length property
      if (v.isArray(value)) {
        return value.length === 0;
      }

      // Dates have no attributes but aren't empty
      if (v.isDate(value)) {
        return false;
      }

      // If we find at least one property we consider it non empty
      if (v.isObject(value)) {
        for (attr in value) {
          return false;
        }
        return true;
      }

      return false;
    },

    // Formats the specified strings with the given values like so:
    // ```
    // format("Foo: %{foo}", {foo: "bar"}) // "Foo bar"
    // ```
    // If you want to write %{...} without having it replaced simply
    // prefix it with % like this `Foo: %%{foo}` and it will be returned
    // as `"Foo: %{foo}"`
    format: v.extend(function(str, vals) {
      if (!v.isString(str)) {
        return str;
      }
      return str.replace(v.format.FORMAT_REGEXP, function(m0, m1, m2) {
        if (m1 === '%') {
          return "%{" + m2 + "}";
        } else {
          return String(vals[m2]);
        }
      });
    }, {
      // Finds %{key} style patterns in the given string
      FORMAT_REGEXP: /(%?)%\{([^\}]+)\}/g
    }),

    // "Prettifies" the given string.
    // Prettifying means replacing [.\_-] with spaces as well as splitting
    // camel case words.
    prettify: function(str) {
      if (v.isNumber(str)) {
        // If there are more than 2 decimals round it to two
        if ((str * 100) % 1 === 0) {
          return "" + str;
        } else {
          return parseFloat(Math.round(str * 100) / 100).toFixed(2);
        }
      }

      if (v.isArray(str)) {
        return str.map(function(s) { return v.prettify(s); }).join(", ");
      }

      if (v.isObject(str)) {
        return str.toString();
      }

      // Ensure the string is actually a string
      str = "" + str;

      return str
        // Splits keys separated by periods
        .replace(/([^\s])\.([^\s])/g, '$1 $2')
        // Removes backslashes
        .replace(/\\+/g, '')
        // Replaces - and - with space
        .replace(/[_-]/g, ' ')
        // Splits camel cased words
        .replace(/([a-z])([A-Z])/g, function(m0, m1, m2) {
          return "" + m1 + " " + m2.toLowerCase();
        })
        .toLowerCase();
    },

    stringifyValue: function(value, options) {
      var prettify = options && options.prettify || v.prettify;
      return prettify(value);
    },

    isString: function(value) {
      return typeof value === 'string';
    },

    isArray: function(value) {
      return {}.toString.call(value) === '[object Array]';
    },

    // Checks if the object is a hash, which is equivalent to an object that
    // is neither an array nor a function.
    isHash: function(value) {
      return v.isObject(value) && !v.isArray(value) && !v.isFunction(value);
    },

    contains: function(obj, value) {
      if (!v.isDefined(obj)) {
        return false;
      }
      if (v.isArray(obj)) {
        return obj.indexOf(value) !== -1;
      }
      return value in obj;
    },

    unique: function(array) {
      if (!v.isArray(array)) {
        return array;
      }
      return array.filter(function(el, index, array) {
        return array.indexOf(el) == index;
      });
    },

    forEachKeyInKeypath: function(object, keypath, callback) {
      if (!v.isString(keypath)) {
        return undefined;
      }

      var key = ""
        , i
        , escape = false;

      for (i = 0; i < keypath.length; ++i) {
        switch (keypath[i]) {
          case '.':
            if (escape) {
              escape = false;
              key += '.';
            } else {
              object = callback(object, key, false);
              key = "";
            }
            break;

          case '\\':
            if (escape) {
              escape = false;
              key += '\\';
            } else {
              escape = true;
            }
            break;

          default:
            escape = false;
            key += keypath[i];
            break;
        }
      }

      return callback(object, key, true);
    },

    getDeepObjectValue: function(obj, keypath) {
      if (!v.isObject(obj)) {
        return undefined;
      }

      return v.forEachKeyInKeypath(obj, keypath, function(obj, key) {
        if (v.isObject(obj)) {
          return obj[key];
        }
      });
    },

    // This returns an object with all the values of the form.
    // It uses the input name as key and the value as value
    // So for example this:
    // <input type="text" name="email" value="foo@bar.com" />
    // would return:
    // {email: "foo@bar.com"}
    collectFormValues: function(form, options) {
      var values = {}
        , i
        , j
        , input
        , inputs
        , option
        , value;

      if (v.isJqueryElement(form)) {
        form = form[0];
      }

      if (!form) {
        return values;
      }

      options = options || {};

      inputs = form.querySelectorAll("input[name], textarea[name]");
      for (i = 0; i < inputs.length; ++i) {
        input = inputs.item(i);

        if (v.isDefined(input.getAttribute("data-ignored"))) {
          continue;
        }

        name = input.name.replace(/\./g, "\\\\.");
        value = v.sanitizeFormValue(input.value, options);
        if (input.type === "number") {
          value = value ? +value : null;
        } else if (input.type === "checkbox") {
          if (input.attributes.value) {
            if (!input.checked) {
              value = values[name] || null;
            }
          } else {
            value = input.checked;
          }
        } else if (input.type === "radio") {
          if (!input.checked) {
            value = values[name] || null;
          }
        }
        values[name] = value;
      }

      inputs = form.querySelectorAll("select[name]");
      for (i = 0; i < inputs.length; ++i) {
        input = inputs.item(i);
        if (v.isDefined(input.getAttribute("data-ignored"))) {
          continue;
        }

        if (input.multiple) {
          value = [];
          for (j in input.options) {
            option = input.options[j];
             if (option && option.selected) {
              value.push(v.sanitizeFormValue(option.value, options));
            }
          }
        } else {
          var _val = typeof input.options[input.selectedIndex] !== 'undefined' ? input.options[input.selectedIndex].value : '';
          value = v.sanitizeFormValue(_val, options);
        }
        values[input.name] = value;
      }

      return values;
    },

    sanitizeFormValue: function(value, options) {
      if (options.trim && v.isString(value)) {
        value = value.trim();
      }

      if (options.nullify !== false && value === "") {
        return null;
      }
      return value;
    },

    capitalize: function(str) {
      if (!v.isString(str)) {
        return str;
      }
      return str[0].toUpperCase() + str.slice(1);
    },

    // Remove all errors who's error attribute is empty (null or undefined)
    pruneEmptyErrors: function(errors) {
      return errors.filter(function(error) {
        return !v.isEmpty(error.error);
      });
    },

    // In
    // [{error: ["err1", "err2"], ...}]
    // Out
    // [{error: "err1", ...}, {error: "err2", ...}]
    //
    // All attributes in an error with multiple messages are duplicated
    // when expanding the errors.
    expandMultipleErrors: function(errors) {
      var ret = [];
      errors.forEach(function(error) {
        // Removes errors without a message
        if (v.isArray(error.error)) {
          error.error.forEach(function(msg) {
            ret.push(v.extend({}, error, {error: msg}));
          });
        } else {
          ret.push(error);
        }
      });
      return ret;
    },

    // Converts the error mesages by prepending the attribute name unless the
    // message is prefixed by ^
    convertErrorMessages: function(errors, options) {
      options = options || {};

      var ret = []
        , prettify = options.prettify || v.prettify;
      errors.forEach(function(errorInfo) {
        var error = v.result(errorInfo.error,
            errorInfo.value,
            errorInfo.attribute,
            errorInfo.options,
            errorInfo.attributes,
            errorInfo.globalOptions);

        if (!v.isString(error)) {
          ret.push(errorInfo);
          return;
        }

        if (error[0] === '^') {
          error = error.slice(1);
        } else if (options.fullMessages !== false) {
          error = v.capitalize(prettify(errorInfo.attribute)) + " " + error;
        }
        error = error.replace(/\\\^/g, "^");
        error = v.format(error, {
          value: v.stringifyValue(errorInfo.value, options)
        });
        ret.push(v.extend({}, errorInfo, {error: error}));
      });
      return ret;
    },

    // In:
    // [{attribute: "<attributeName>", ...}]
    // Out:
    // {"<attributeName>": [{attribute: "<attributeName>", ...}]}
    groupErrorsByAttribute: function(errors) {
      var ret = {};
      errors.forEach(function(error) {
        var list = ret[error.attribute];
        if (list) {
          list.push(error);
        } else {
          ret[error.attribute] = [error];
        }
      });
      return ret;
    },

    // In:
    // [{error: "<message 1>", ...}, {error: "<message 2>", ...}]
    // Out:
    // ["<message 1>", "<message 2>"]
    flattenErrorsToArray: function(errors) {
      return errors
        .map(function(error) { return error.error; })
        .filter(function(value, index, self) {
          return self.indexOf(value) === index;
        });
    },

    cleanAttributes: function(attributes, whitelist) {
      function whitelistCreator(obj, key, last) {
        if (v.isObject(obj[key])) {
          return obj[key];
        }
        return (obj[key] = last ? true : {});
      }

      function buildObjectWhitelist(whitelist) {
        var ow = {}
          , lastObject
          , attr;
        for (attr in whitelist) {
          if (!whitelist[attr]) {
            continue;
          }
          v.forEachKeyInKeypath(ow, attr, whitelistCreator);
        }
        return ow;
      }

      function cleanRecursive(attributes, whitelist) {
        if (!v.isObject(attributes)) {
          return attributes;
        }

        var ret = v.extend({}, attributes)
          , w
          , attribute;

        for (attribute in attributes) {
          w = whitelist[attribute];

          if (v.isObject(w)) {
            ret[attribute] = cleanRecursive(ret[attribute], w);
          } else if (!w) {
            delete ret[attribute];
          }
        }
        return ret;
      }

      if (!v.isObject(whitelist) || !v.isObject(attributes)) {
        return {};
      }

      whitelist = buildObjectWhitelist(whitelist);
      return cleanRecursive(attributes, whitelist);
    },

    exposeModule: function(validate, root, exports, module, define) {
      if (exports) {
        if (module && module.exports) {
          exports = module.exports = validate;
        }
        exports.validate = validate;
      } else {
        root.validate = validate;
        if (validate.isFunction(define) && define.amd) {
          define([], function () { return validate; });
        }
      }
    },

    warn: function(msg) {
      if (typeof console !== "undefined" && console.warn) {
        console.warn("[validate.js] " + msg);
      }
    },

    error: function(msg) {
      if (typeof console !== "undefined" && console.error) {
        console.error("[validate.js] " + msg);
      }
    }
  });

  validate.validators = {
    // Presence validates that the value isn't empty
    presence: function(value, options) {
      options = v.extend({}, this.options, options);
      if (options.allowEmpty !== false ? !v.isDefined(value) : v.isEmpty(value)) {
        return options.message || this.message || "can't be blank";
      }
    },
    length: function(value, options, attribute) {
      // Empty values are allowed
      if (!v.isDefined(value)) {
        return;
      }

      options = v.extend({}, this.options, options);

      var is = options.is
        , maximum = options.maximum
        , minimum = options.minimum
        , tokenizer = options.tokenizer || function(val) { return val; }
        , err
        , errors = [];

      value = tokenizer(value);
      var length = value.length;
      if(!v.isNumber(length)) {
        v.error(v.format("Attribute %{attr} has a non numeric value for `length`", {attr: attribute}));
        return options.message || this.notValid || "has an incorrect length";
      }

      // Is checks
      if (v.isNumber(is) && length !== is) {
        err = options.wrongLength ||
          this.wrongLength ||
          "is the wrong length (should be %{count} characters)";
        errors.push(v.format(err, {count: is}));
      }

      if (v.isNumber(minimum) && length < minimum) {
        err = options.tooShort ||
          this.tooShort ||
          "is too short (minimum is %{count} characters)";
        errors.push(v.format(err, {count: minimum}));
      }

      if (v.isNumber(maximum) && length > maximum) {
        err = options.tooLong ||
          this.tooLong ||
          "is too long (maximum is %{count} characters)";
        errors.push(v.format(err, {count: maximum}));
      }

      if (errors.length > 0) {
        return options.message || errors;
      }
    },
    numericality: function(value, options, attribute, attributes, globalOptions) {
      // Empty values are fine
      if (!v.isDefined(value)) {
        return;
      }

      options = v.extend({}, this.options, options);

      var errors = []
        , name
        , count
        , checks = {
            greaterThan:          function(v, c) { return v > c; },
            greaterThanOrEqualTo: function(v, c) { return v >= c; },
            equalTo:              function(v, c) { return v === c; },
            lessThan:             function(v, c) { return v < c; },
            lessThanOrEqualTo:    function(v, c) { return v <= c; },
            divisibleBy:          function(v, c) { return v % c === 0; }
          }
        , prettify = options.prettify ||
          (globalOptions && globalOptions.prettify) ||
          v.prettify;

      // Strict will check that it is a valid looking number
      if (v.isString(value) && options.strict) {
        var pattern = "^-?(0|[1-9]\\d*)";
        if (!options.onlyInteger) {
          pattern += "(\\.\\d+)?";
        }
        pattern += "$";

        if (!(new RegExp(pattern).test(value))) {
          return options.message ||
            options.notValid ||
            this.notValid ||
            this.message ||
            "must be a valid number";
        }
      }

      // Coerce the value to a number unless we're being strict.
      if (options.noStrings !== true && v.isString(value) && !v.isEmpty(value)) {
        value = +value;
      }

      // If it's not a number we shouldn't continue since it will compare it.
      if (!v.isNumber(value)) {
        return options.message ||
          options.notValid ||
          this.notValid ||
          this.message ||
          "is not a number";
      }

      // Same logic as above, sort of. Don't bother with comparisons if this
      // doesn't pass.
      if (options.onlyInteger && !v.isInteger(value)) {
        return options.message ||
          options.notInteger ||
          this.notInteger ||
          this.message ||
          "must be an integer";
      }

      for (name in checks) {
        count = options[name];
        if (v.isNumber(count) && !checks[name](value, count)) {
          // This picks the default message if specified
          // For example the greaterThan check uses the message from
          // this.notGreaterThan so we capitalize the name and prepend "not"
          var key = "not" + v.capitalize(name);
          var msg = options[key] ||
            this[key] ||
            this.message ||
            "must be %{type} %{count}";

          errors.push(v.format(msg, {
            count: count,
            type: prettify(name)
          }));
        }
      }

      if (options.odd && value % 2 !== 1) {
        errors.push(options.notOdd ||
            this.notOdd ||
            this.message ||
            "must be odd");
      }
      if (options.even && value % 2 !== 0) {
        errors.push(options.notEven ||
            this.notEven ||
            this.message ||
            "must be even");
      }

      if (errors.length) {
        return options.message || errors;
      }
    },
    datetime: v.extend(function(value, options) {
      if (!v.isFunction(this.parse) || !v.isFunction(this.format)) {
        throw new Error("Both the parse and format functions needs to be set to use the datetime/date validator");
      }

      // Empty values are fine
      if (!v.isDefined(value)) {
        return;
      }

      options = v.extend({}, this.options, options);

      var err
        , errors = []
        , earliest = options.earliest ? this.parse(options.earliest, options) : NaN
        , latest = options.latest ? this.parse(options.latest, options) : NaN;

      value = this.parse(value, options);

      // 86400000 is the number of milliseconds in a day, this is used to remove
      // the time from the date
      if (isNaN(value) || options.dateOnly && value % 86400000 !== 0) {
        err = options.notValid ||
          options.message ||
          this.notValid ||
          "must be a valid date";
        return v.format(err, {value: arguments[0]});
      }

      if (!isNaN(earliest) && value < earliest) {
        err = options.tooEarly ||
          options.message ||
          this.tooEarly ||
          "must be no earlier than %{date}";
        err = v.format(err, {
          value: this.format(value, options),
          date: this.format(earliest, options)
        });
        errors.push(err);
      }

      if (!isNaN(latest) && value > latest) {
        err = options.tooLate ||
          options.message ||
          this.tooLate ||
          "must be no later than %{date}";
        err = v.format(err, {
          date: this.format(latest, options),
          value: this.format(value, options)
        });
        errors.push(err);
      }

      if (errors.length) {
        return v.unique(errors);
      }
    }, {
      parse: null,
      format: null
    }),
    date: function(value, options) {
      options = v.extend({}, options, {dateOnly: true});
      return v.validators.datetime.call(v.validators.datetime, value, options);
    },
    format: function(value, options) {
      if (v.isString(options) || (options instanceof RegExp)) {
        options = {pattern: options};
      }

      options = v.extend({}, this.options, options);

      var message = options.message || this.message || "is invalid"
        , pattern = options.pattern
        , match;

      // Empty values are allowed
      if (!v.isDefined(value)) {
        return;
      }
      if (!v.isString(value)) {
        return message;
      }

      if (v.isString(pattern)) {
        pattern = new RegExp(options.pattern, options.flags);
      }
      match = pattern.exec(value);
      if (!match || match[0].length != value.length) {
        return message;
      }
    },
    inclusion: function(value, options) {
      // Empty values are fine
      if (!v.isDefined(value)) {
        return;
      }
      if (v.isArray(options)) {
        options = {within: options};
      }
      options = v.extend({}, this.options, options);
      if (v.contains(options.within, value)) {
        return;
      }
      var message = options.message ||
        this.message ||
        "^%{value} is not included in the list";
      return v.format(message, {value: value});
    },
    exclusion: function(value, options) {
      // Empty values are fine
      if (!v.isDefined(value)) {
        return;
      }
      if (v.isArray(options)) {
        options = {within: options};
      }
      options = v.extend({}, this.options, options);
      if (!v.contains(options.within, value)) {
        return;
      }
      var message = options.message || this.message || "^%{value} is restricted";
      return v.format(message, {value: value});
    },
    email: v.extend(function(value, options) {
      options = v.extend({}, this.options, options);
      var message = options.message || this.message || "is not a valid email";
      // Empty values are fine
      if (!v.isDefined(value)) {
        return;
      }
      if (!v.isString(value)) {
        return message;
      }
      if (!this.PATTERN.exec(value)) {
        return message;
      }
    }, {
      PATTERN: /^[a-z0-9\u007F-\uffff!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-z0-9\u007F-\uffff!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z]{2,}$/i
    }),
    equality: function(value, options, attribute, attributes, globalOptions) {
      if (!v.isDefined(value)) {
        return;
      }

      if (v.isString(options)) {
        options = {attribute: options};
      }
      options = v.extend({}, this.options, options);
      var message = options.message ||
        this.message ||
        "is not equal to %{attribute}";

      if (v.isEmpty(options.attribute) || !v.isString(options.attribute)) {
        throw new Error("The attribute must be a non empty string");
      }

      var otherValue = v.getDeepObjectValue(attributes, options.attribute)
        , comparator = options.comparator || function(v1, v2) {
          return v1 === v2;
        }
        , prettify = options.prettify ||
          (globalOptions && globalOptions.prettify) ||
          v.prettify;

      if (!comparator(value, otherValue, options, attribute, attributes)) {
        return v.format(message, {attribute: prettify(options.attribute)});
      }
    },

    // A URL validator that is used to validate URLs with the ability to
    // restrict schemes and some domains.
    url: function(value, options) {
      if (!v.isDefined(value)) {
        return;
      }

      options = v.extend({}, this.options, options);

      var message = options.message || this.message || "is not a valid url"
        , schemes = options.schemes || this.schemes || ['http', 'https']
        , allowLocal = options.allowLocal || this.allowLocal || false;

      if (!v.isString(value)) {
        return message;
      }

      // https://gist.github.com/dperini/729294
      var regex =
        "^" +
        // protocol identifier
        "(?:(?:" + schemes.join("|") + ")://)" +
        // user:pass authentication
        "(?:\\S+(?::\\S*)?@)?" +
        "(?:";

      var tld = "(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))";

      if (allowLocal) {
        tld += "?";
      } else {
        regex +=
          // IP address exclusion
          // private & local networks
          "(?!(?:10|127)(?:\\.\\d{1,3}){3})" +
          "(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})" +
          "(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})";
      }

      regex +=
          // IP address dotted notation octets
          // excludes loopback network 0.0.0.0
          // excludes reserved space >= 224.0.0.0
          // excludes network & broacast addresses
          // (first & last IP address of each class)
          "(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])" +
          "(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}" +
          "(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))" +
        "|" +
          // host name
          "(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)" +
          // domain name
          "(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*" +
          tld +
        ")" +
        // port number
        "(?::\\d{2,5})?" +
        // resource path
        "(?:[/?#]\\S*)?" +
      "$";

      var PATTERN = new RegExp(regex, 'i');
      if (!PATTERN.exec(value)) {
        return message;
      }
    }
  };

  validate.formatters = {
    detailed: function(errors) {return errors;},
    flat: v.flattenErrorsToArray,
    grouped: function(errors) {
      var attr;

      errors = v.groupErrorsByAttribute(errors);
      for (attr in errors) {
        errors[attr] = v.flattenErrorsToArray(errors[attr]);
      }
      return errors;
    },
    constraint: function(errors) {
      var attr;
      errors = v.groupErrorsByAttribute(errors);
      for (attr in errors) {
        errors[attr] = errors[attr].map(function(result) {
          return result.validator;
        }).sort();
      }
      return errors;
    }
  };

  validate.exposeModule(validate, this, exports, module, __webpack_require__(/*! !webpack amd define */ "../node_modules/webpack/buildin/amd-define.js"));
}).call(this,
         true ? /* istanbul ignore next */ exports : undefined,
         true ? /* istanbul ignore next */ module : undefined,
        __webpack_require__(/*! !webpack amd define */ "../node_modules/webpack/buildin/amd-define.js"));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "../node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "../node_modules/webpack/buildin/amd-define.js":
/*!*****************************************************!*\
  !*** ../node_modules/webpack/buildin/amd-define.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function() {
	throw new Error("define cannot be used indirect");
};


/***/ }),

/***/ "../node_modules/webpack/buildin/global.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/global.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "../node_modules/webpack/buildin/module.js":
/*!*************************************************!*\
  !*** ../node_modules/webpack/buildin/module.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./DICOMSR/dataExchange.js":
/*!*********************************!*\
  !*** ./DICOMSR/dataExchange.js ***!
  \*********************************/
/*! exports provided: retrieveMeasurements, storeMeasurements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retrieveMeasurements", function() { return retrieveMeasurements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "storeMeasurements", function() { return storeMeasurements; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log */ "./log.js");
/* harmony import */ var _studies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../studies */ "./studies/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils */ "./utils/index.js");
/* harmony import */ var _handleStructuredReport__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./handleStructuredReport */ "./DICOMSR/handleStructuredReport.js");
/* harmony import */ var _utils_findMostRecentStructuredReport__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/findMostRecentStructuredReport */ "./DICOMSR/utils/findMostRecentStructuredReport.js");







/**
 *
 * @typedef ServerType
 * @property {string} type - type of the server
 * @property {string} wadoRoot - server wado root url
 * @property {string} annotationEndpoint - endpoint url for annotation service
 *
 */

/**
 * Function to be registered into MeasurementAPI to retrieve measurements from DICOM Structured Reports
 *
 * @param {ServerType} server
 * @returns {Promise} Should resolve with OHIF measurementData object
 */

var retrieveMeasurements = function retrieveMeasurements(server) {
  _log__WEBPACK_IMPORTED_MODULE_2__["default"].info('[DICOMSR] retrieveMeasurements');

  if (!server || server.type !== 'dicomWeb') {
    _log__WEBPACK_IMPORTED_MODULE_2__["default"].error('[DICOMSR] DicomWeb server is required!');
    return Promise.reject({});
  }

  var serverUrl = server.wadoRoot;
  var studies = _utils__WEBPACK_IMPORTED_MODULE_4__["default"].studyMetadataManager.all();
  var latestSeries = Object(_utils_findMostRecentStructuredReport__WEBPACK_IMPORTED_MODULE_6__["default"])(studies);
  if (!latestSeries) return Promise.resolve({});
  return Object(_handleStructuredReport__WEBPACK_IMPORTED_MODULE_5__["retrieveMeasurementFromSR"])(latestSeries, studies, serverUrl);
};
/**
 *  Function to be registered into MeasurementAPI to store measurements into DICOM Structured Reports
 *
 * @param {Object} measurementData - OHIF measurementData object
 * @param {Object} filter
 * @param {ServerType} server
 * @returns {Object} With message to be displayed on success
 */


var storeMeasurements = /*#__PURE__*/function () {
  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(measurementData, filter, server) {
    var serverUrl, firstMeasurementKey, firstMeasurement, StudyInstanceUID;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _log__WEBPACK_IMPORTED_MODULE_2__["default"].info('[DICOMSR] storeMeasurements');

            if (!(!server || server.type !== 'dicomWeb')) {
              _context.next = 4;
              break;
            }

            _log__WEBPACK_IMPORTED_MODULE_2__["default"].error('[DICOMSR] DicomWeb server is required!');
            return _context.abrupt("return", Promise.reject({}));

          case 4:
            serverUrl = server.wadoRoot;
            firstMeasurementKey = Object.keys(measurementData)[0];
            firstMeasurement = measurementData[firstMeasurementKey][0];
            StudyInstanceUID = firstMeasurement && firstMeasurement.StudyInstanceUID;
            _context.prev = 8;
            _context.next = 11;
            return Object(_handleStructuredReport__WEBPACK_IMPORTED_MODULE_5__["stowSRFromMeasurements"])(measurementData, serverUrl);

          case 11:
            if (StudyInstanceUID) {
              _studies__WEBPACK_IMPORTED_MODULE_3__["default"].deleteStudyMetadataPromise(StudyInstanceUID);
            }

            return _context.abrupt("return", {
              message: 'Measurements saved successfully'
            });

          case 15:
            _context.prev = 15;
            _context.t0 = _context["catch"](8);
            _log__WEBPACK_IMPORTED_MODULE_2__["default"].error("[DICOMSR] Error while saving the measurements: ".concat(_context.t0.message));
            throw new Error('Error while saving the measurements.');

          case 19:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, null, [[8, 15]]);
  }));

  return function storeMeasurements(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();



/***/ }),

/***/ "./DICOMSR/handleStructuredReport.js":
/*!*******************************************!*\
  !*** ./DICOMSR/handleStructuredReport.js ***!
  \*******************************************/
/*! exports provided: retrieveMeasurementFromSR, stowSRFromMeasurements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retrieveMeasurementFromSR", function() { return retrieveMeasurementFromSR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stowSRFromMeasurements", function() { return stowSRFromMeasurements; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dcmjs */ "dcmjs");
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(dcmjs__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../DICOMWeb */ "./DICOMWeb/index.js");
/* harmony import */ var _parseDicomStructuredReport__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./parseDicomStructuredReport */ "./DICOMSR/parseDicomStructuredReport.js");
/* harmony import */ var _parseMeasurementsData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parseMeasurementsData */ "./DICOMSR/parseMeasurementsData.js");
/* harmony import */ var _utils_getAllDisplaySets__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/getAllDisplaySets */ "./DICOMSR/utils/getAllDisplaySets.js");








var VERSION_NAME = 'dcmjs-0.0';
var TRANSFER_SYNTAX_UID = '1.2.840.10008.1.2.1';
/**
 * Function to retrieve measurements from DICOM Structured Reports coming from determined server
 *
 * @param {Array} series - List of all series metaData loaded
 * @param {Array} studies - List of all studies metaData loaded
 * @param {string} serverUrl - Server URL to be used on request
 * @returns {Object} MeasurementData
 */

var retrieveMeasurementFromSR = /*#__PURE__*/function () {
  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(series, studies, serverUrl) {
    var config, dicomWeb, instance, options, part10SRArrayBuffer, displaySets, measurementsData;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            config = {
              url: serverUrl,
              headers: _DICOMWeb__WEBPACK_IMPORTED_MODULE_4__["default"].getAuthorizationHeader()
            };
            dicomWeb = new dicomweb_client__WEBPACK_IMPORTED_MODULE_3__["api"].DICOMwebClient(config);
            instance = series.getFirstInstance();
            options = {
              studyInstanceUID: instance.getStudyInstanceUID(),
              seriesInstanceUID: instance.getSeriesInstanceUID(),
              sopInstanceUID: instance.getSOPInstanceUID()
            };
            _context.next = 6;
            return dicomWeb.retrieveInstance(options);

          case 6:
            part10SRArrayBuffer = _context.sent;
            displaySets = Object(_utils_getAllDisplaySets__WEBPACK_IMPORTED_MODULE_7__["default"])(studies);
            measurementsData = Object(_parseDicomStructuredReport__WEBPACK_IMPORTED_MODULE_5__["default"])(part10SRArrayBuffer, displaySets);
            return _context.abrupt("return", measurementsData);

          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function retrieveMeasurementFromSR(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
/**
 * Function to store measurements to DICOM Structured Reports in determined server
 *
 * @param {Object} measurements - OHIF measurementData object
 * @param {string} serverUrl - Server URL to be used on request
 * @returns {Promise}
 */


var stowSRFromMeasurements = /*#__PURE__*/function () {
  var _ref2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(measurements, serverUrl) {
    var _parseMeasurementsDat, dataset, _dcmjs$data, DicomMetaDictionary, DicomDict, meta, denaturalized, dicomDict, part10Buffer, config, dicomWeb, options;

    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _parseMeasurementsDat = Object(_parseMeasurementsData__WEBPACK_IMPORTED_MODULE_6__["default"])(measurements), dataset = _parseMeasurementsDat.dataset;
            _dcmjs$data = dcmjs__WEBPACK_IMPORTED_MODULE_2__["data"], DicomMetaDictionary = _dcmjs$data.DicomMetaDictionary, DicomDict = _dcmjs$data.DicomDict;
            meta = {
              FileMetaInformationVersion: dataset._meta.FileMetaInformationVersion.Value,
              MediaStorageSOPClassUID: dataset.SOPClassUID,
              MediaStorageSOPInstanceUID: dataset.SOPInstanceUID,
              TransferSyntaxUID: TRANSFER_SYNTAX_UID,
              ImplementationClassUID: DicomMetaDictionary.uid(),
              ImplementationVersionName: VERSION_NAME
            };
            denaturalized = DicomMetaDictionary.denaturalizeDataset(meta);
            dicomDict = new DicomDict(denaturalized);
            dicomDict.dict = DicomMetaDictionary.denaturalizeDataset(dataset);
            part10Buffer = dicomDict.write();
            config = {
              url: serverUrl,
              headers: _DICOMWeb__WEBPACK_IMPORTED_MODULE_4__["default"].getAuthorizationHeader()
            };
            dicomWeb = new dicomweb_client__WEBPACK_IMPORTED_MODULE_3__["api"].DICOMwebClient(config);
            options = {
              datasets: [part10Buffer]
            };
            _context2.next = 12;
            return dicomWeb.storeInstances(options);

          case 12:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));

  return function stowSRFromMeasurements(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();



/***/ }),

/***/ "./DICOMSR/index.js":
/*!**************************!*\
  !*** ./DICOMSR/index.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _dataExchange__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dataExchange */ "./DICOMSR/dataExchange.js");
/* harmony import */ var _utils_isToolSupported__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/isToolSupported */ "./DICOMSR/utils/isToolSupported.js");


var DICOMSR = {
  retrieveMeasurements: _dataExchange__WEBPACK_IMPORTED_MODULE_0__["retrieveMeasurements"],
  storeMeasurements: _dataExchange__WEBPACK_IMPORTED_MODULE_0__["storeMeasurements"],
  isToolSupported: _utils_isToolSupported__WEBPACK_IMPORTED_MODULE_1__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (DICOMSR);

/***/ }),

/***/ "./DICOMSR/parseDicomStructuredReport.js":
/*!***********************************************!*\
  !*** ./DICOMSR/parseDicomStructuredReport.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dcmjs */ "dcmjs");
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(dcmjs__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils_findInstanceMetadataBySopInstanceUid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/findInstanceMetadataBySopInstanceUid */ "./DICOMSR/utils/findInstanceMetadataBySopInstanceUid.js");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



/**
 * Function to parse the part10 array buffer that comes from a DICOM Structured report into measurementData
 * measurementData format is a viewer specific format to be stored into the redux and consumed by other components
 * (e.g. measurement table)
 *
 * @param {ArrayBuffer} part10SRArrayBuffer
 * @param {Array} displaySets
 * @returns
 */

var parseDicomStructuredReport = function parseDicomStructuredReport(part10SRArrayBuffer, displaySets) {
  // Get the dicom data as an Object
  var dicomData = dcmjs__WEBPACK_IMPORTED_MODULE_1__["data"].DicomMessage.readFile(part10SRArrayBuffer);
  var dataset = dcmjs__WEBPACK_IMPORTED_MODULE_1__["data"].DicomMetaDictionary.naturalizeDataset(dicomData.dict);
  var MeasurementReport = dcmjs__WEBPACK_IMPORTED_MODULE_1__["adapters"].Cornerstone.MeasurementReport;
  var storedMeasurementByToolType = MeasurementReport.generateToolState(dataset);
  var measurementData = {};
  var measurementNumber = 0;
  Object.keys(storedMeasurementByToolType).forEach(function (toolName) {
    var measurements = storedMeasurementByToolType[toolName];
    measurementData[toolName] = [];
    measurements.forEach(function (measurement) {
      var instanceMetadata = Object(_utils_findInstanceMetadataBySopInstanceUid__WEBPACK_IMPORTED_MODULE_2__["default"])(displaySets, measurement.sopInstanceUid);
      var study = instanceMetadata._study,
          series = instanceMetadata._series;
      var StudyInstanceUID = study.StudyInstanceUID,
          PatientID = study.PatientID;
      var SeriesInstanceUID = series.SeriesInstanceUID;
      var sopInstanceUid = measurement.sopInstanceUid,
          frameIndex = measurement.frameIndex;
      var imagePath = getImagePath(StudyInstanceUID, SeriesInstanceUID, sopInstanceUid, frameIndex);
      var imageId = instanceMetadata.getImageId();

      if (!imageId) {
        return;
      } // TODO: We need the currentTimepointID set into the viewer


      var currentTimepointId = 'TimepointId';

      var toolData = _objectSpread({}, measurement, {
        imageId: imageId,
        imagePath: imagePath,
        SOPInstanceUID: sopInstanceUid,
        SeriesInstanceUID: SeriesInstanceUID,
        StudyInstanceUID: StudyInstanceUID,
        PatientID: PatientID,
        measurementNumber: ++measurementNumber,
        timepointId: currentTimepointId,
        toolType: toolName,
        _id: imageId + measurementNumber
      });

      measurementData[toolName].push(toolData);
    });
  });
  return measurementData;
};
/**
 * Function to create imagePath with all imageData related
 *
 * @param {string} StudyInstanceUID
 * @param {string} SeriesInstanceUID
 * @param {string} SOPInstanceUID
 * @param {string} frameIndex
 * @returns
 */


var getImagePath = function getImagePath(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frameIndex) {
  return [StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frameIndex].join('_');
};

/* harmony default export */ __webpack_exports__["default"] = (parseDicomStructuredReport);

/***/ }),

/***/ "./DICOMSR/parseMeasurementsData.js":
/*!******************************************!*\
  !*** ./DICOMSR/parseMeasurementsData.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dcmjs */ "dcmjs");
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dcmjs__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../log */ "./log.js");
/* harmony import */ var _measurements__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../measurements */ "./measurements/index.js");
/* harmony import */ var _utils_isToolSupported__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/isToolSupported */ "./DICOMSR/utils/isToolSupported.js");





/**
 * Function to parse OHIF viewer measurementData into a dcmjs MeasurementReport
 *
 * @param {Object} measurementsData - OHIF measurementData object
 * @returns {Object} Dataset: measurement report from dcmjs
 */

var parseMeasurementsData = function parseMeasurementsData(measurementsData) {
  var MeasurementReport = dcmjs__WEBPACK_IMPORTED_MODULE_0__["adapters"].Cornerstone.MeasurementReport;
  var getImageIdForImagePath = _measurements__WEBPACK_IMPORTED_MODULE_3__["default"].getImageIdForImagePath;
  var toolState = {};
  var unsupportedTools = [];
  Object.keys(measurementsData).forEach(function (measurementType) {
    var annotations = measurementsData[measurementType];
    annotations.forEach(function (annotation) {
      var toolType = annotation.toolType,
          imagePath = annotation.imagePath;

      if (Object(_utils_isToolSupported__WEBPACK_IMPORTED_MODULE_4__["default"])(toolType)) {
        var imageId = getImageIdForImagePath(imagePath);
        toolState[imageId] = toolState[imageId] || {};
        toolState[imageId][toolType] = toolState[imageId][toolType] || {
          data: []
        };
        toolState[imageId][toolType].data.push(annotation);
      } else {
        unsupportedTools.push(toolType);
      }
    });
  });

  if (unsupportedTools.length > 0) {
    _log__WEBPACK_IMPORTED_MODULE_2__["default"].warn("[DICOMSR] Tooltypes not supported: ".concat(unsupportedTools.join(', ')));
  }

  var report = MeasurementReport.generateReport(toolState, cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default.a.metaData);
  return {
    dataset: report.dataset
  };
};

/* harmony default export */ __webpack_exports__["default"] = (parseMeasurementsData);

/***/ }),

/***/ "./DICOMSR/utils/findInstanceMetadataBySopInstanceUid.js":
/*!***************************************************************!*\
  !*** ./DICOMSR/utils/findInstanceMetadataBySopInstanceUid.js ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 *  Should Find the requested instance metadata into the displaySets and return
 *
 * @param {Array} displaySets - List of displaySets
 * @param {string} SOPInstanceUID - sopInstanceUID to look for
 * @returns {Object} - instance metadata found
 */
var findInstanceMetadataBySopInstanceUID = function findInstanceMetadataBySopInstanceUID(displaySets, SOPInstanceUID) {
  var instanceFound;
  displaySets.find(function (displaySet) {
    if (!displaySet.images) return false;
    instanceFound = displaySet.images.find(function (instanceMetadata) {
      return instanceMetadata.getSOPInstanceUID() === SOPInstanceUID;
    });
    return !!instanceFound;
  });
  return instanceFound;
};

/* harmony default export */ __webpack_exports__["default"] = (findInstanceMetadataBySopInstanceUID);

/***/ }),

/***/ "./DICOMSR/utils/findMostRecentStructuredReport.js":
/*!*********************************************************!*\
  !*** ./DICOMSR/utils/findMostRecentStructuredReport.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Should find the most recent Structured Report metadata
 *
 * @param {Array} studies
 * @returns {Object} Series
 */
var findMostRecentStructuredReport = function findMostRecentStructuredReport(studies) {
  var mostRecentStructuredReport;
  studies.forEach(function (study) {
    var allSeries = study.getSeries ? study.getSeries() : [];
    allSeries.forEach(function (series) {
      if (isStructuredReportSeries(series)) {
        if (!mostRecentStructuredReport || compareSeriesDate(series, mostRecentStructuredReport)) {
          mostRecentStructuredReport = series;
        }
      }
    });
  });
  return mostRecentStructuredReport;
};
/**
 *  Checks if series sopClassUID matches with the supported Structured Reports sopClassUID
 *
 * @param {Object} series - Series metadata
 * @returns {boolean}
 */


var isStructuredReportSeries = function isStructuredReportSeries(series) {
  var supportedSopClassUIDs = ['1.2.840.10008.5.1.4.1.1.88.22', '1.2.840.10008.5.1.4.1.1.11.1'];
  var firstInstance = series.getFirstInstance();
  var SOPClassUID = firstInstance.getData().metadata.SOPClassUID;
  return supportedSopClassUIDs.includes(SOPClassUID);
};
/**
 *  Checkes if series1 is newer than series2
 *
 * @param {Object} series1 - Series Metadata 1
 * @param {Object} series2 - Series Metadata 2
 * @returns {boolean} true/false if series1 is newer than series2
 */


var compareSeriesDate = function compareSeriesDate(series1, series2) {
  return series1._data.SeriesDate > series2._data.SeriesDate || series1._data.SeriesDate === series2._data.SeriesDate && series1._data.SeriesTime > series2._data.SeriesTime;
};

/* harmony default export */ __webpack_exports__["default"] = (findMostRecentStructuredReport);

/***/ }),

/***/ "./DICOMSR/utils/getAllDisplaySets.js":
/*!********************************************!*\
  !*** ./DICOMSR/utils/getAllDisplaySets.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Retrieve a list of all displaySets of all studies
 *
 * @param {Object} studies - List of studies loaded into the viewer
 * @returns {Object} List of DisplaySets
 */
var getAllDisplaySets = function getAllDisplaySets(studies) {
  var allDisplaySets = [];
  studies.forEach(function (study) {
    if (study.getDisplaySets) {
      allDisplaySets = allDisplaySets.concat(study.getDisplaySets());
    }
  });
  return allDisplaySets;
};

/* harmony default export */ __webpack_exports__["default"] = (getAllDisplaySets);

/***/ }),

/***/ "./DICOMSR/utils/isToolSupported.js":
/*!******************************************!*\
  !*** ./DICOMSR/utils/isToolSupported.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dcmjs */ "dcmjs");
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dcmjs__WEBPACK_IMPORTED_MODULE_0__);

/**
 *  Checks if dcmjs has support to determined tool
 *
 * @param {string} toolName
 * @returns {boolean}
 */

var isToolSupported = function isToolSupported(toolName) {
  var adapter = dcmjs__WEBPACK_IMPORTED_MODULE_0__["adapters"].Cornerstone;
  return !!adapter[toolName];
};

/* harmony default export */ __webpack_exports__["default"] = (isToolSupported);

/***/ }),

/***/ "./DICOMWeb/getAttribute.js":
/*!**********************************!*\
  !*** ./DICOMWeb/getAttribute.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getAttribute; });
/**
 * Returns the specified element as a dicom attribute group/element.
 *
 * @param element - The group/element of the element (e.g. '00280009')
 * @param [defaultValue] - The value to return if the element is not present
 * @returns {*}
 */
function getAttribute(element, defaultValue) {
  if (!element) {
    return defaultValue;
  } // Value is not present if the attribute has a zero length value


  if (!element.Value) {
    return defaultValue;
  } // Sanity check to make sure we have at least one entry in the array.


  if (!element.Value.length) {
    return defaultValue;
  }

  return convertToInt(element.Value);
}

function convertToInt(input) {
  function padFour(input) {
    var l = input.length;
    if (l == 0) return '0000';
    if (l == 1) return "000".concat(input);
    if (l == 2) return "00".concat(input);
    if (l == 3) return "0".concat(input);
    return input;
  }

  var output = '';

  for (var i = 0; i < input.length; i++) {
    for (var j = 0; j < input[i].length; j++) {
      output += padFour(input[i].charCodeAt(j).toString(16));
    }
  }

  return parseInt(output, 16);
}

/***/ }),

/***/ "./DICOMWeb/getAuthorizationHeader.js":
/*!********************************************!*\
  !*** ./DICOMWeb/getAuthorizationHeader.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getAuthorizationHeader; });
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../user */ "./user.js");
// Commenting this out for now since it looks like Rollup is pulling in the
// Node.js version instead of the Browser version of this package
// import { btoa } from 'isomorphic-base64';

/**
 * Returns the Authorization header as part of an Object.
 *
 * @export
 * @param {Object} [server={}]
 * @param {Object} [server.requestOptions]
 * @param {string|function} [server.requestOptions.auth]
 * @returns {Object} { Authorization }
 */

function getAuthorizationHeader() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      requestOptions = _ref.requestOptions;

  var headers = {}; // Check for OHIF.user since this can also be run on the server

  var accessToken = _user__WEBPACK_IMPORTED_MODULE_0__["default"] && _user__WEBPACK_IMPORTED_MODULE_0__["default"].getAccessToken && _user__WEBPACK_IMPORTED_MODULE_0__["default"].getAccessToken();

  if (requestOptions && requestOptions.auth) {
    if (typeof requestOptions.auth === 'function') {
      // Custom Auth Header
      headers.Authorization = requestOptions.auth(requestOptions);
    } else {
      // HTTP Basic Auth (user:password)
      headers.Authorization = "Basic ".concat(btoa(requestOptions.auth));
    }
  } else if (accessToken) {
    headers.Authorization = "Bearer ".concat(accessToken);
  }

  return headers;
}

/***/ }),

/***/ "./DICOMWeb/getModalities.js":
/*!***********************************!*\
  !*** ./DICOMWeb/getModalities.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getModalities; });
function getModalities(Modality, ModalitiesInStudy) {
  if (!Modality && !ModalitiesInStudy) {
    return {};
  }

  var modalities = Modality || {
    vr: 'CS',
    Value: []
  };

  if (ModalitiesInStudy) {
    if (modalities.vr && modalities.vr === ModalitiesInStudy.vr) {
      for (var i = 0; i < ModalitiesInStudy.Value.length; i++) {
        var value = ModalitiesInStudy.Value[i];

        if (modalities.Value.indexOf(value) === -1) {
          modalities.Value.push(value);
        }
      }
    } else {
      return ModalitiesInStudy;
    }
  }

  return modalities;
}

/***/ }),

/***/ "./DICOMWeb/getName.js":
/*!*****************************!*\
  !*** ./DICOMWeb/getName.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getName; });
/**
 * Returns the Alphabetic version of a PN
 *
 * @param element - The group/element of the element (e.g. '00200013')
 * @param [defaultValue] - The default value to return if the element is not found
 * @returns {*}
 */
function getName(element, defaultValue) {
  if (!element) {
    return defaultValue;
  } // Value is not present if the attribute has a zero length value


  if (!element.Value) {
    return defaultValue;
  } // Sanity check to make sure we have at least one entry in the array.


  if (!element.Value.length) {
    return defaultValue;
  } // Return the Alphabetic component group


  if (element.Value[0].Alphabetic) {
    return element.Value[0].Alphabetic;
  } // Orthanc does not return PN properly so this is a temporary workaround


  return element.Value[0];
}

/***/ }),

/***/ "./DICOMWeb/getNumber.js":
/*!*******************************!*\
  !*** ./DICOMWeb/getNumber.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getNumber; });
/**
 * Returns the first string value as a Javascript Number
 * @param element - The group/element of the element (e.g. '00200013')
 * @param [defaultValue] - The default value to return if the element does not exist
 * @returns {*}
 */
function getNumber(element, defaultValue) {
  if (!element) {
    return defaultValue;
  } // Value is not present if the attribute has a zero length value


  if (!element.Value) {
    return defaultValue;
  } // Sanity check to make sure we have at least one entry in the array.


  if (!element.Value.length) {
    return defaultValue;
  }

  return parseFloat(element.Value[0]);
}

/***/ }),

/***/ "./DICOMWeb/getString.js":
/*!*******************************!*\
  !*** ./DICOMWeb/getString.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getString; });
/**
 * Returns the specified element as a string.  Multi-valued elements will be separated by a backslash
 *
 * @param element - The group/element of the element (e.g. '00200013')
 * @param [defaultValue] - The value to return if the element is not present
 * @returns {*}
 */
function getString(element, defaultValue) {
  if (!element) {
    return defaultValue;
  } // Value is not present if the attribute has a zero length value


  if (!element.Value) {
    return defaultValue;
  } // Sanity check to make sure we have at least one entry in the array.


  if (!element.Value.length) {
    return defaultValue;
  } // Join the array together separated by backslash
  // NOTE: Orthanc does not correctly split values into an array so the join is a no-op


  return element.Value.join('\\');
}

/***/ }),

/***/ "./DICOMWeb/index.js":
/*!***************************!*\
  !*** ./DICOMWeb/index.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _getAttribute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getAttribute */ "./DICOMWeb/getAttribute.js");
/* harmony import */ var _getAuthorizationHeader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getAuthorizationHeader */ "./DICOMWeb/getAuthorizationHeader.js");
/* harmony import */ var _getModalities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getModalities */ "./DICOMWeb/getModalities.js");
/* harmony import */ var _getName__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getName */ "./DICOMWeb/getName.js");
/* harmony import */ var _getNumber__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getNumber */ "./DICOMWeb/getNumber.js");
/* harmony import */ var _getString__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getString */ "./DICOMWeb/getString.js");






var DICOMWeb = {
  getAttribute: _getAttribute__WEBPACK_IMPORTED_MODULE_0__["default"],
  getAuthorizationHeader: _getAuthorizationHeader__WEBPACK_IMPORTED_MODULE_1__["default"],
  getModalities: _getModalities__WEBPACK_IMPORTED_MODULE_2__["default"],
  getName: _getName__WEBPACK_IMPORTED_MODULE_3__["default"],
  getNumber: _getNumber__WEBPACK_IMPORTED_MODULE_4__["default"],
  getString: _getString__WEBPACK_IMPORTED_MODULE_5__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (DICOMWeb);

/***/ }),

/***/ "./classes/CommandsManager.js":
/*!************************************!*\
  !*** ./classes/CommandsManager.js ***!
  \************************************/
/*! exports provided: CommandsManager, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommandsManager", function() { return CommandsManager; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log.js */ "./log.js");




/**
 * The definition of a command
 *
 * @typedef {Object} CommandDefinition
 * @property {Function} commandFn - Command to call
 * @property {Array} storeContexts - Array of string of modules required from store
 * @property {Object} options - Object of params to pass action
 */

/**
 * The Commands Manager tracks named commands (or functions) that are scoped to
 * a context. When we attempt to run a command with a given name, we look for it
 * in our active contexts. If found, we run the command, passing in any application
 * or call specific data specified in the command's definition.
 *
 * NOTE: A more robust version of the CommandsManager lives in v1. If you're looking
 * to extend this class, please check it's source before adding new methods.
 */

var CommandsManager = /*#__PURE__*/function () {
  function CommandsManager() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        getAppState = _ref.getAppState,
        getActiveContexts = _ref.getActiveContexts;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, CommandsManager);

    this.contexts = {};

    if (!getAppState || !getActiveContexts) {
      _log_js__WEBPACK_IMPORTED_MODULE_3__["default"].warn('CommandsManager was instantiated without getAppState() or getActiveContexts()');
    }

    this._getAppState = getAppState;
    this._getActiveContexts = getActiveContexts;
  }
  /**
   * Allows us to create commands "per context". An example would be the "Cornerstone"
   * context having a `SaveImage` command, and the "VTK" context having a `SaveImage`
   * command. The distinction of a context allows us to call the command in either
   * context, and have faith that the correct command will be run.
   *
   * @method
   * @param {string} contextName - Namespace for commands
   * @returns {undefined}
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(CommandsManager, [{
    key: "createContext",
    value: function createContext(contextName) {
      if (!contextName) {
        return;
      }

      if (this.contexts[contextName]) {
        return this.clearContext(contextName);
      }

      this.contexts[contextName] = {};
    }
    /**
     * Returns all command definitions for a given context
     *
     * @method
     * @param {string} contextName - Namespace for commands
     * @returns {Object} - the matched context
     */

  }, {
    key: "getContext",
    value: function getContext(contextName) {
      var context = this.contexts[contextName];

      if (!context) {
        return;
      }

      return context;
    }
    /**
     * Clears all registered commands for a given context.
     *
     * @param {string} contextName - Namespace for commands
     * @returns {undefined}
     */

  }, {
    key: "clearContext",
    value: function clearContext(contextName) {
      if (!contextName) {
        return;
      }

      this.contexts[contextName] = {};
    }
    /**
     * Register a new command with the command manager. Scoped to a context, and
     * with a definition to assist command callers w/ providing the necessary params
     *
     * @method
     * @param {string} contextName - Namespace for command; often scoped to the extension that added it
     * @param {string} commandName - Unique name identifying the command
     * @param {CommandDefinition} definition - {@link CommandDefinition}
     */

  }, {
    key: "registerCommand",
    value: function registerCommand(contextName, commandName, definition) {
      if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(definition) !== 'object') {
        return;
      }

      var context = this.getContext(contextName);

      if (!context) {
        return;
      }

      context[commandName] = definition;
    }
    /**
     * Finds a command with the provided name if it exists in the specified context,
     * or a currently active context.
     *
     * @method
     * @param {String} commandName - Command to find
     * @param {String} [contextName] - Specific command to look in. Defaults to current activeContexts
     */

  }, {
    key: "getCommand",
    value: function getCommand(commandName, contextName) {
      var _this = this;

      var contexts = [];

      if (contextName) {
        var context = this.getContext(contextName);

        if (context) {
          contexts.push(context);
        }
      } else {
        var activeContexts = this._getActiveContexts();

        activeContexts.forEach(function (activeContext) {
          var context = _this.getContext(activeContext);

          if (context) {
            contexts.push(context);
          }
        });
      }

      if (contexts.length === 0) {
        return;
      }

      var foundCommand;
      contexts.forEach(function (context) {
        if (context[commandName]) {
          foundCommand = context[commandName];
        }
      });
      return foundCommand;
    }
    /**
     *
     * @method
     * @param {String} commandName
     * @param {Object} [options={}] - Extra options to pass the command. Like a mousedown event
     * @param {String} [contextName]
     */

  }, {
    key: "runCommand",
    value: function runCommand(commandName) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var contextName = arguments.length > 2 ? arguments[2] : undefined;
      var definition = this.getCommand(commandName, contextName);

      if (!definition) {
        _log_js__WEBPACK_IMPORTED_MODULE_3__["default"].warn("Command \"".concat(commandName, "\" not found in current context"));
        return;
      }

      var commandFn = definition.commandFn,
          _definition$storeCont = definition.storeContexts,
          storeContexts = _definition$storeCont === void 0 ? [] : _definition$storeCont;
      var definitionOptions = definition.options;
      var commandParams = {};

      var appState = this._getAppState();

      storeContexts.forEach(function (context) {
        commandParams[context] = appState[context];
      });
      commandParams = Object.assign({}, commandParams, // Required store contexts
      definitionOptions, // "Command configuration"
      options // "Time of call" info
      );

      if (typeof commandFn !== 'function') {
        _log_js__WEBPACK_IMPORTED_MODULE_3__["default"].warn("No commandFn was defined for command \"".concat(commandName, "\""));
      } else {
        return commandFn(commandParams);
      }
    }
  }]);

  return CommandsManager;
}();
/* harmony default export */ __webpack_exports__["default"] = (CommandsManager);

/***/ }),

/***/ "./classes/HotkeysManager.js":
/*!***********************************!*\
  !*** ./classes/HotkeysManager.js ***!
  \***********************************/
/*! exports provided: HotkeysManager, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HotkeysManager", function() { return HotkeysManager; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _utils_hotkeys__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./../utils/hotkeys */ "./utils/hotkeys/index.js");
/* harmony import */ var _log_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./../log.js */ "./log.js");





function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



/**
 *
 *
 * @typedef {Object} HotkeyDefinition
 * @property {String} commandName - Command to call
 * @property {String} label - Display name for hotkey
 * @property {String[]} keys - Keys to bind; Follows Mousetrap.js binding syntax
 */

var HotkeysManager = /*#__PURE__*/function () {
  function HotkeysManager(commandsManager, servicesManager) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, HotkeysManager);

    this.hotkeyDefinitions = {};
    this.hotkeyDefaults = [];
    this.isEnabled = true;

    if (!commandsManager) {
      _log_js__WEBPACK_IMPORTED_MODULE_5__["default"].warn('HotkeysManager instantiated without a commandsManager. Hotkeys will be unable to find and run commands.');
    }

    this._servicesManager = servicesManager;
    this._commandsManager = commandsManager;
  }
  /**
   * Exposes Mousetrap.js's `.record` method, added by the record plugin.
   *
   * @param {*} event
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(HotkeysManager, [{
    key: "record",
    value: function record(event) {
      return _utils_hotkeys__WEBPACK_IMPORTED_MODULE_4__["default"].record(event);
    }
    /**
     * Disables all hotkeys. Hotkeys added while disabled will not listen for
     * input.
     */

  }, {
    key: "disable",
    value: function disable() {
      this.isEnabled = false;
      _utils_hotkeys__WEBPACK_IMPORTED_MODULE_4__["default"].pause();
    }
    /**
     * Enables all hotkeys.
     */

  }, {
    key: "enable",
    value: function enable() {
      this.isEnabled = true;
      _utils_hotkeys__WEBPACK_IMPORTED_MODULE_4__["default"].unpause();
    }
    /**
     * Registers a list of hotkeydefinitions.
     *
     * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions
     */

  }, {
    key: "setHotkeys",
    value: function setHotkeys() {
      var _this = this;

      var hotkeyDefinitions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      try {
        var definitions = this._getValidDefinitions(hotkeyDefinitions);

        definitions.forEach(function (definition) {
          return _this.registerHotkeys(definition);
        });
      } catch (error) {
        var UINotificationService = this._servicesManager.services.UINotificationService;
        UINotificationService.show({
          title: 'Hotkeys Manager',
          message: 'Erro while setting hotkeys',
          type: 'error'
        });
      }
    }
    /**
     * Set default hotkey bindings. These
     * values are used in `this.restoreDefaultBindings`.
     *
     * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions
     */

  }, {
    key: "setDefaultHotKeys",
    value: function setDefaultHotKeys() {
      var hotkeyDefinitions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

      var definitions = this._getValidDefinitions(hotkeyDefinitions);

      this.hotkeyDefaults = definitions;
    }
    /**
     * Take hotkey definitions that can be an array or object and make sure that it
     * returns an array of hotkeys
     *
     * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions=[]] Contains hotkeys definitions
     */

  }, {
    key: "_getValidDefinitions",
    value: function _getValidDefinitions(hotkeyDefinitions) {
      var definitions = Array.isArray(hotkeyDefinitions) ? _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(hotkeyDefinitions) : this._parseToArrayLike(hotkeyDefinitions);
      return definitions;
    }
    /**
     * It parses given object containing hotkeyDefinition to array like.
     * Each property of given object will be mapped to an object of an array. And its property name will be the value of a property named as commandName
     *
     * @param {HotkeyDefinition[] | Object} [hotkeyDefinitions={}] Contains hotkeys definitions
     * @returns {HotkeyDefinition[]}
     */

  }, {
    key: "_parseToArrayLike",
    value: function _parseToArrayLike() {
      var _this2 = this;

      var hotkeyDefinitionsObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      var copy = _objectSpread({}, hotkeyDefinitionsObj);

      return Object.entries(copy).map(function (entryValue) {
        return _this2._parseToHotKeyObj(entryValue[0], entryValue[1]);
      });
    }
    /**
     * Return HotkeyDefinition object like based on given property name and property value
     * @param {string} propertyName property name of hotkey definition object
     * @param {object} propertyValue property value of hotkey definition object
     *
     * @example
     *
     * const hotKeyObj = {hotKeyDefA: {keys:[],....}}
     *
     * const parsed = _parseToHotKeyObj(Object.keys(hotKeyDefA)[0], hotKeyObj[hotKeyDefA]);
     *  {
     *   commandName: hotKeyDefA,
     *   keys: [],
     *   ....
     *  }
     *
     */

  }, {
    key: "_parseToHotKeyObj",
    value: function _parseToHotKeyObj(propertyName, propertyValue) {
      return _objectSpread({
        commandName: propertyName
      }, propertyValue);
    }
    /**
     * (unbinds and) binds the specified command to one or more key combinations.
     * When a hotkey combination is triggered, the command name and active contexts
     * are used to locate the correct command to call.
     *
     * @param {HotkeyDefinition} commandName
     * @param {String} extension
     * @returns {undefined}
     */

  }, {
    key: "registerHotkeys",
    value: function registerHotkeys() {
      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          commandName = _ref.commandName,
          keys = _ref.keys,
          label = _ref.label;

      var extension = arguments.length > 1 ? arguments[1] : undefined;

      if (!commandName) {
        _log_js__WEBPACK_IMPORTED_MODULE_5__["default"].warn("No command was defined for hotkey \"".concat(keys, "\""));
        return;
      }

      var previouslyRegisteredDefinition = this.hotkeyDefinitions[commandName];

      if (previouslyRegisteredDefinition) {
        var previouslyRegisteredKeys = previouslyRegisteredDefinition.keys;

        this._unbindHotkeys(commandName, previouslyRegisteredKeys);

        _log_js__WEBPACK_IMPORTED_MODULE_5__["default"].info("Unbinding ".concat(commandName, " from ").concat(previouslyRegisteredKeys));
      } // Set definition & bind


      this.hotkeyDefinitions[commandName] = {
        keys: keys,
        label: label
      };

      this._bindHotkeys(commandName, keys);

      _log_js__WEBPACK_IMPORTED_MODULE_5__["default"].info("Binding ".concat(commandName, " to ").concat(keys));
    }
    /**
     * Uses most recent
     *
     * @returns {undefined}
     */

  }, {
    key: "restoreDefaultBindings",
    value: function restoreDefaultBindings() {
      this.setHotkeys(this.hotkeyDefaults);
    }
    /**
     *
     */

  }, {
    key: "destroy",
    value: function destroy() {
      this.hotkeyDefaults = [];
      this.hotkeyDefinitions = {};
      _utils_hotkeys__WEBPACK_IMPORTED_MODULE_4__["default"].reset();
    }
    /**
     * Binds one or more set of hotkey combinations for a given command
     *
     * @private
     * @param {string} commandName - The name of the command to trigger when hotkeys are used
     * @param {string[]} keys - One or more key combinations that should trigger command
     * @returns {undefined}
     */

  }, {
    key: "_bindHotkeys",
    value: function _bindHotkeys(commandName, keys) {
      var _this3 = this;

      var isKeyDefined = keys === '' || keys === undefined;

      if (isKeyDefined) {
        return;
      }

      var isKeyArray = keys instanceof Array; // const combinedKeys = isKeyArray ? keys.join('+') : keys;
      // hotkeys.bind(combinedKeys, evt => {
      //     evt.preventDefault();
      //     evt.stopPropagation();
      //     this._commandsManager.runCommand(commandName, { evt });
      // });
      // TungLT fix for bind multi key with single command

      var combinedKeys = isKeyArray ? keys : [keys];
      combinedKeys.forEach(function (combinedKey) {
        return _utils_hotkeys__WEBPACK_IMPORTED_MODULE_4__["default"].bind(combinedKey, function (evt) {
          evt.preventDefault();
          evt.stopPropagation();

          _this3._commandsManager.runCommand(commandName, {
            evt: evt
          });
        });
      });
    }
    /**
     * unbinds one or more set of hotkey combinations for a given command
     *
     * @private
     * @param {string} commandName - The name of the previously bound command
     * @param {string[]} keys - One or more sets of previously bound keys
     * @returns {undefined}
     */

  }, {
    key: "_unbindHotkeys",
    value: function _unbindHotkeys(commandName, keys) {
      var isKeyDefined = keys !== '' && keys !== undefined;

      if (!isKeyDefined) {
        return;
      }

      var isKeyArray = keys instanceof Array;
      var combinedKeys = isKeyArray ? keys : [keys];
      combinedKeys.forEach(function (combinedKey) {
        return _utils_hotkeys__WEBPACK_IMPORTED_MODULE_4__["default"].unbind(combinedKey);
      }); // if (isKeyArray) {
      //     const combinedKeys = keys.join('+');
      //     this._unbindHotkeys(commandName, combinedKeys);
      //     return;
      // }
      //
      // hotkeys.unbind(keys);
    }
  }]);

  return HotkeysManager;
}();
/* harmony default export */ __webpack_exports__["default"] = (HotkeysManager); // Commands Contexts:
// --> Name and Priority
// GLOBAL: 0
// VIEWER::CORNERSTONE: 1
// VIEWER::VTK: 1

/***/ }),

/***/ "./classes/ImageSet.js":
/*!*****************************!*\
  !*** ./classes/ImageSet.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/construct */ "../node_modules/@babel/runtime/helpers/construct.js");
/* harmony import */ var _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils_guid_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/guid.js */ "./utils/guid.js");
/* harmony import */ var _OHIFError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./OHIFError */ "./classes/OHIFError.js");
/* harmony import */ var cornerstone_math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! cornerstone-math */ "cornerstone-math");
/* harmony import */ var cornerstone_math__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(cornerstone_math__WEBPACK_IMPORTED_MODULE_7__);








var OBJECT = 'object';
/**
 * This class defines an ImageSet object which will be used across the viewer. This object represents
 * a list of images that are associated by any arbitrary criteria being thus content agnostic. Besides the
 * main attributes (images and uid) it allows additional attributes to be appended to it (currently
 * indiscriminately, but this should be changed).
 */

var ImageSet = /*#__PURE__*/function () {
  function ImageSet(images) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, ImageSet);

    if (Array.isArray(images) !== true) {
      throw new _OHIFError__WEBPACK_IMPORTED_MODULE_6__["default"]('ImageSet expects an array of images');
    } // @property "images"


    Object.defineProperty(this, 'images', {
      enumerable: false,
      configurable: false,
      writable: false,
      value: images
    }); // @property "uid"

    Object.defineProperty(this, 'uid', {
      enumerable: false,
      configurable: false,
      writable: false,
      value: Object(_utils_guid_js__WEBPACK_IMPORTED_MODULE_5__["default"])() // Unique ID of the instance

    });
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(ImageSet, [{
    key: "getUID",
    value: function getUID() {
      return this.uid;
    }
  }, {
    key: "setAttribute",
    value: function setAttribute(attribute, value) {
      this[attribute] = value;
    }
  }, {
    key: "getAttribute",
    value: function getAttribute(attribute) {
      return this[attribute];
    }
  }, {
    key: "setAttributes",
    value: function setAttributes(attributes) {
      if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_2___default()(attributes) === OBJECT && attributes !== null) {
        var imageSet = this,
            hasOwn = Object.prototype.hasOwnProperty;

        for (var attribute in attributes) {
          if (hasOwn.call(attributes, attribute)) {
            imageSet[attribute] = attributes[attribute];
          }
        }
      }
    }
  }, {
    key: "getImage",
    value: function getImage(index) {
      return this.images[index];
    }
  }, {
    key: "sortBy",
    value: function sortBy(sortingCallback) {
      return this.images.sort(sortingCallback);
    }
  }, {
    key: "sortByImagePositionPatient",
    value: function sortByImagePositionPatient() {
      var images = this.images;

      var referenceImagePositionPatient = _getImagePositionPatient(images[0]);

      var refIppVec = new cornerstone_math__WEBPACK_IMPORTED_MODULE_7__["Vector3"](referenceImagePositionPatient[0], referenceImagePositionPatient[1], referenceImagePositionPatient[2]);

      var ImageOrientationPatient = _getImageOrientationPatient(images[0]);

      var scanAxisNormal = new cornerstone_math__WEBPACK_IMPORTED_MODULE_7__["Vector3"](ImageOrientationPatient[0], ImageOrientationPatient[1], ImageOrientationPatient[2]).cross(new cornerstone_math__WEBPACK_IMPORTED_MODULE_7__["Vector3"](ImageOrientationPatient[3], ImageOrientationPatient[4], ImageOrientationPatient[5]));
      var distanceImagePairs = images.map(function (image) {
        var ippVec = _babel_runtime_helpers_construct__WEBPACK_IMPORTED_MODULE_0___default()(cornerstone_math__WEBPACK_IMPORTED_MODULE_7__["Vector3"], _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(_getImagePositionPatient(image)));

        var positionVector = refIppVec.clone().sub(ippVec);
        var distance = positionVector.dot(scanAxisNormal);
        return {
          distance: distance,
          image: image
        };
      });
      distanceImagePairs.sort(function (a, b) {
        return b.distance - a.distance;
      });
      var sortedImages = distanceImagePairs.map(function (a) {
        return a.image;
      });
      images.sort(function (a, b) {
        return sortedImages.indexOf(a) - sortedImages.indexOf(b);
      });
    }
  }]);

  return ImageSet;
}();

function _getImagePositionPatient(image) {
  return image.getData().metadata.ImagePositionPatient;
}

function _getImageOrientationPatient(image) {
  return image.getData().metadata.ImageOrientationPatient;
}

/* harmony default export */ __webpack_exports__["default"] = (ImageSet);

/***/ }),

/***/ "./classes/MetadataProvider.js":
/*!*************************************!*\
  !*** ./classes/MetadataProvider.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! dcmjs */ "dcmjs");
/* harmony import */ var dcmjs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(dcmjs__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! query-string */ "../node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var dicom_parser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! dicom-parser */ "dicom-parser");
/* harmony import */ var dicom_parser__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(dicom_parser__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _utils_metadataProvider_getPixelSpacingInformation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/metadataProvider/getPixelSpacingInformation */ "./utils/metadataProvider/getPixelSpacingInformation.js");
/* harmony import */ var _utils_metadataProvider_fetchPaletteColorLookupTableData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../utils/metadataProvider/fetchPaletteColorLookupTableData */ "./utils/metadataProvider/fetchPaletteColorLookupTableData.js");
/* harmony import */ var _utils_metadataProvider_fetchOverlayData__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/metadataProvider/fetchOverlayData */ "./utils/metadataProvider/fetchOverlayData.js");











var MetadataProvider = /*#__PURE__*/function () {
  function MetadataProvider() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, MetadataProvider);

    // Define the main "metadataLookup" private property as an immutable property.
    Object.defineProperty(this, 'studies', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: new Map()
    });
    Object.defineProperty(this, 'imageIdToUIDs', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: new Map()
    });
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(MetadataProvider, [{
    key: "addInstance",
    value: function () {
      var _addInstance = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(dicomJSONDatasetOrP10ArrayBuffer) {
        var options,
            dicomJSONDataset,
            dicomData,
            naturalizedDataset,
            _naturalizedDataset,
            StudyInstanceUID,
            SeriesInstanceUID,
            SOPInstanceUID,
            study,
            series,
            instance,
            _args = arguments;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};

                // If Arraybuffer, parse to DICOMJSON before naturalizing.
                if (dicomJSONDatasetOrP10ArrayBuffer instanceof ArrayBuffer) {
                  dicomData = dcmjs__WEBPACK_IMPORTED_MODULE_4__["data"].DicomMessage.readFile(dicomJSONDatasetOrP10ArrayBuffer);
                  dicomJSONDataset = dicomData.dict;
                } else {
                  dicomJSONDataset = dicomJSONDatasetOrP10ArrayBuffer;
                } // Check if dataset is already naturalized.


                if (dicomJSONDataset['SeriesInstanceUID'] === undefined) {
                  naturalizedDataset = dcmjs__WEBPACK_IMPORTED_MODULE_4__["data"].DicomMetaDictionary.naturalizeDataset(dicomJSONDataset);
                } else {
                  naturalizedDataset = dicomJSONDataset;
                } // fix for iTech protocol


                if (options.StudyInstanceUID) naturalizedDataset.StudyInstanceUID = options.StudyInstanceUID;
                _naturalizedDataset = naturalizedDataset, StudyInstanceUID = _naturalizedDataset.StudyInstanceUID, SeriesInstanceUID = _naturalizedDataset.SeriesInstanceUID, SOPInstanceUID = _naturalizedDataset.SOPInstanceUID;
                study = this._getAndCacheStudy(StudyInstanceUID);
                series = this._getAndCacheSeriesFromStudy(study, SeriesInstanceUID);
                instance = this._getAndCacheInstanceFromStudy(series, SOPInstanceUID);
                Object.assign(instance, naturalizedDataset); // TODO: comment by TungLT
                // if (options.server) {
                // await this._checkBulkDataAndInlineBinaries(instance, options.server);
                // }

                return _context.abrupt("return", instance);

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function addInstance(_x) {
        return _addInstance.apply(this, arguments);
      }

      return addInstance;
    }()
  }, {
    key: "addImageIdToUIDs",
    value: function addImageIdToUIDs(imageId, uids) {
      // This method is a fallback for when you don't have WADO-URI or WADO-RS.
      // You can add instances fetched by any method by calling addInstance, and hook an imageId to point at it here.
      // An example would be dicom hosted at some random site.
      this.imageIdToUIDs.set(imageId, uids);
    }
  }, {
    key: "_getAndCacheStudy",
    value: function _getAndCacheStudy(StudyInstanceUID) {
      var studies = this.studies;
      var study = studies.get(StudyInstanceUID);

      if (!study) {
        study = {
          series: new Map()
        };
        studies.set(StudyInstanceUID, study);
      }

      return study;
    }
  }, {
    key: "_getAndCacheSeriesFromStudy",
    value: function _getAndCacheSeriesFromStudy(study, SeriesInstanceUID) {
      var series = study.series.get(SeriesInstanceUID);

      if (!series) {
        series = {
          instances: new Map()
        };
        study.series.set(SeriesInstanceUID, series);
      }

      return series;
    }
  }, {
    key: "_getAndCacheInstanceFromStudy",
    value: function _getAndCacheInstanceFromStudy(series, SOPInstanceUID) {
      var instance = series.instances.get(SOPInstanceUID);

      if (!instance) {
        instance = {};
        series.instances.set(SOPInstanceUID, instance);
      }

      return instance;
    }
  }, {
    key: "_checkBulkDataAndInlineBinaries",
    value: function () {
      var _checkBulkDataAndInlineBinaries2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(instance, server) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return Object(_utils_metadataProvider_fetchOverlayData__WEBPACK_IMPORTED_MODULE_9__["default"])(instance, server);

              case 2:
                if (!(instance.PhotometricInterpretation === 'PALETTE COLOR')) {
                  _context2.next = 5;
                  break;
                }

                _context2.next = 5;
                return Object(_utils_metadataProvider_fetchPaletteColorLookupTableData__WEBPACK_IMPORTED_MODULE_8__["default"])(instance, server);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function _checkBulkDataAndInlineBinaries(_x2, _x3) {
        return _checkBulkDataAndInlineBinaries2.apply(this, arguments);
      }

      return _checkBulkDataAndInlineBinaries;
    }()
  }, {
    key: "_getInstance",
    value: function _getInstance(imageId) {
      var uids = this._getUIDsFromImageID(imageId);

      if (!uids) {
        return;
      }

      var StudyInstanceUID = uids.StudyInstanceUID,
          SeriesInstanceUID = uids.SeriesInstanceUID,
          SOPInstanceUID = uids.SOPInstanceUID;
      return this._getInstanceData(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID);
    }
  }, {
    key: "get",
    value: function get(query, imageId) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
        fallback: false
      };

      var instance = this._getInstance(imageId);

      if (query === INSTANCE) {
        return instance;
      }

      return this.getTagFromInstance(query, instance, options);
    }
  }, {
    key: "getTag",
    value: function getTag(query, imageId, options) {
      return this.get(query, imageId, options);
    }
  }, {
    key: "getInstance",
    value: function getInstance(imageId) {
      return this.get(INSTANCE, imageId);
    }
  }, {
    key: "getTagFromInstance",
    value: function getTagFromInstance(naturalizedTagOrWADOImageLoaderTag, instance) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
        fallback: false
      };

      if (!instance) {
        return;
      } // If its a naturalized dcmjs tag present on the instance, return.


      if (instance[naturalizedTagOrWADOImageLoaderTag]) {
        return instance[naturalizedTagOrWADOImageLoaderTag];
      } // Maybe its a legacy CornerstoneWADOImageLoader tag then:


      return this._getCornerstoneWADOImageLoaderTag(naturalizedTagOrWADOImageLoaderTag, instance);
    }
  }, {
    key: "_getCornerstoneWADOImageLoaderTag",
    value: function _getCornerstoneWADOImageLoaderTag(wadoImageLoaderTag, instance) {
      var metadata;

      switch (wadoImageLoaderTag) {
        case WADO_IMAGE_LOADER_TAGS.GENERAL_SERIES_MODULE:
          var SeriesDate = instance.SeriesDate,
              SeriesTime = instance.SeriesTime;
          var seriesDate;
          var seriesTime;

          if (SeriesDate) {
            seriesDate = dicom_parser__WEBPACK_IMPORTED_MODULE_6___default.a.parseDA(SeriesDate);
          }

          if (SeriesTime) {
            seriesTime = dicom_parser__WEBPACK_IMPORTED_MODULE_6___default.a.parseTM(SeriesTime);
          }

          metadata = {
            modality: instance.Modality,
            seriesInstanceUID: instance.SeriesInstanceUID,
            seriesNumber: instance.SeriesNumber,
            studyInstanceUID: instance.StudyInstanceUID,
            seriesDate: seriesDate,
            seriesTime: seriesTime,
            seriesDescription: instance.SeriesDescription
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.PATIENT_STUDY_MODULE:
          metadata = {
            patientAge: instance.PatientAge,
            patientSize: instance.PatientSize,
            patientWeight: instance.PatientWeight
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.IMAGE_PLANE_MODULE:
          var ImageOrientationPatient = instance.ImageOrientationPatient; // Fallback for DX images.
          // TODO: We should use the rest of the results of this function
          // to update the UI somehow

          var _getPixelSpacingInfor = Object(_utils_metadataProvider_getPixelSpacingInformation__WEBPACK_IMPORTED_MODULE_7__["default"])(instance),
              PixelSpacing = _getPixelSpacingInfor.PixelSpacing;

          var rowPixelSpacing;
          var columnPixelSpacing;
          var rowCosines;
          var columnCosines;

          if (PixelSpacing) {
            rowPixelSpacing = PixelSpacing[0];
            columnPixelSpacing = PixelSpacing[1];
          }

          if (ImageOrientationPatient) {
            rowCosines = ImageOrientationPatient.slice(0, 3);
            columnCosines = ImageOrientationPatient.slice(3, 6);
          }

          metadata = {
            frameOfReferenceUID: instance.FrameOfReferenceUID,
            rows: instance.Rows,
            columns: instance.Columns,
            imageOrientationPatient: ImageOrientationPatient,
            rowCosines: rowCosines,
            columnCosines: columnCosines,
            imagePositionPatient: instance.ImagePositionPatient,
            sliceThickness: instance.SliceThickness,
            sliceLocation: instance.SliceLocation,
            pixelSpacing: PixelSpacing,
            rowPixelSpacing: rowPixelSpacing,
            columnPixelSpacing: columnPixelSpacing
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.IMAGE_PIXEL_MODULE:
          metadata = {
            samplesPerPixel: instance.SamplesPerPixel,
            photometricInterpretation: instance.PhotometricInterpretation,
            rows: instance.Rows,
            columns: instance.Columns,
            bitsAllocated: instance.BitsAllocated,
            bitsStored: instance.BitsStored,
            highBit: instance.HighBit,
            pixelRepresentation: instance.PixelRepresentation,
            planarConfiguration: instance.PlanarConfiguration,
            pixelAspectRatio: instance.PixelAspectRatio,
            smallestPixelValue: instance.SmallestPixelValue,
            largestPixelValue: instance.LargestPixelValue,
            redPaletteColorLookupTableDescriptor: instance.RedPaletteColorLookupTableDescriptor,
            greenPaletteColorLookupTableDescriptor: instance.GreenPaletteColorLookupTableDescriptor,
            bluePaletteColorLookupTableDescriptor: instance.BluePaletteColorLookupTableDescriptor,
            redPaletteColorLookupTableData: instance.RedPaletteColorLookupTableData,
            greenPaletteColorLookupTableData: instance.GreenPaletteColorLookupTableData,
            bluePaletteColorLookupTableData: instance.BluePaletteColorLookupTableData
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.VOI_LUT_MODULE:
          var WindowCenter = instance.WindowCenter,
              WindowWidth = instance.WindowWidth;
          var windowCenter = Array.isArray(WindowCenter) ? WindowCenter : [WindowCenter];
          var windowWidth = Array.isArray(WindowWidth) ? WindowWidth : [WindowWidth];
          metadata = {
            windowCenter: windowCenter,
            windowWidth: windowWidth
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.MODALITY_LUT_MODULE:
          metadata = {
            rescaleIntercept: instance.RescaleIntercept,
            rescaleSlope: instance.RescaleSlope,
            rescaleType: instance.RescaleType
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.SOP_COMMON_MODULE:
          metadata = {
            sopClassUID: instance.SOPClassUID,
            sopInstanceUID: instance.SOPInstanceUID
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.PET_ISOTOPE_MODULE:
          var RadiopharmaceuticalInformationSequence = instance.RadiopharmaceuticalInformationSequence;

          if (RadiopharmaceuticalInformationSequence) {
            var RadiopharmaceuticalInformation = Array.isArray(RadiopharmaceuticalInformationSequence) ? RadiopharmaceuticalInformationSequence[0] : RadiopharmaceuticalInformationSequence;
            var RadiopharmaceuticalStartTime = RadiopharmaceuticalInformation.RadiopharmaceuticalStartTime,
                RadionuclideTotalDose = RadiopharmaceuticalInformation.RadionuclideTotalDose,
                RadionuclideHalfLife = RadiopharmaceuticalInformation.RadionuclideHalfLife;
            var radiopharmaceuticalInfo = {
              radiopharmaceuticalStartTime: dicom_parser__WEBPACK_IMPORTED_MODULE_6___default.a.parseTM(RadiopharmaceuticalStartTime),
              radionuclideTotalDose: RadionuclideTotalDose,
              radionuclideHalfLife: RadionuclideHalfLife
            };
            metadata = {
              radiopharmaceuticalInfo: radiopharmaceuticalInfo
            };
          }

          break;

        case WADO_IMAGE_LOADER_TAGS.OVERLAY_PLANE_MODULE:
          metadata = [];

          for (var overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {
            var groupStr = "60".concat(overlayGroup.toString(16));

            if (groupStr.length === 3) {
              groupStr = "600".concat(overlayGroup.toString(16));
            }

            var OverlayDataTag = "".concat(groupStr, "3000");
            var OverlayData = instance[OverlayDataTag];

            if (!OverlayData) {
              continue;
            }

            var OverlayRowsTag = "".concat(groupStr, "0010");
            var OverlayColumnsTag = "".concat(groupStr, "0011");
            var OverlayType = "".concat(groupStr, "0040");
            var OverlayOriginTag = "".concat(groupStr, "0050");
            var OverlayDescriptionTag = "".concat(groupStr, "0022");
            var OverlayLabelTag = "".concat(groupStr, "1500");
            var ROIAreaTag = "".concat(groupStr, "1301");
            var ROIMeanTag = "".concat(groupStr, "1302");
            var ROIStandardDeviationTag = "".concat(groupStr, "1303");
            var OverlayOrigin = instance[OverlayOriginTag];
            var overlay = {
              rows: instance[OverlayRowsTag],
              columns: instance[OverlayColumnsTag],
              type: instance[OverlayType],
              x: OverlayOrigin[0],
              y: OverlayOrigin[1],
              pixelData: OverlayData,
              description: instance[OverlayDescriptionTag],
              label: instance[OverlayLabelTag],
              roiArea: instance[ROIAreaTag],
              roiMean: instance[ROIMeanTag],
              roiStandardDeviation: instance[ROIStandardDeviationTag]
            };
            metadata.push(overlay);
          }

          metadata = {
            overlays: overlays
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.PATIENT_MODULE:
          var PatientName = instance.PatientName;
          var patientName;

          if (PatientName) {
            patientName = PatientName.Alphabetic;
          }

          metadata = {
            patientName: patientName,
            patientId: instance.PatientID
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.GENERAL_IMAGE_MODULE:
          metadata = {
            instanceNumber: instance.InstanceNumber,
            lossyImageCompression: instance.LossyImageCompression,
            lossyImageCompressionRatio: instance.LossyImageCompressionRatio,
            lossyImageCompressionMethod: instance.LossyImageCompressionMethod
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.GENERAL_STUDY_MODULE:
          metadata = {
            studyDescription: instance.StudyDescription,
            studyDate: instance.StudyDate,
            studyTime: instance.StudyTime,
            accessionNumber: instance.AccessionNumber
          };
          break;

        case WADO_IMAGE_LOADER_TAGS.CINE_MODULE:
          metadata = {
            frameTime: instance.FrameTime
          };
          break;
      }

      return metadata;
    }
  }, {
    key: "_getInstanceData",
    value: function _getInstanceData(StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) {
      var study = this.studies.get(StudyInstanceUID);

      if (!study) {
        return;
      }

      var series = study.series.get(SeriesInstanceUID);

      if (!series) {
        return;
      }

      var instance = series.instances.get(SOPInstanceUID);
      return instance;
    }
  }, {
    key: "_getUIDsFromImageID",
    value: function _getUIDsFromImageID(imageId) {
      if (imageId.includes('wadors:')) {
        var strippedImageId = imageId.split('studies/')[1];
        var splitImageId = strippedImageId.split('/');
        return {
          StudyInstanceUID: splitImageId[0],
          // Note: splitImageId[1] === 'series'
          SeriesInstanceUID: splitImageId[2],
          // Note: splitImageId[3] === 'instances'
          SOPInstanceUID: splitImageId[4]
        };
      }

      if (imageId.includes('wado?requestType=WADO')) {
        var qs = query_string__WEBPACK_IMPORTED_MODULE_5___default.a.parse(imageId);
        return {
          StudyInstanceUID: qs.studyUID,
          SeriesInstanceUID: qs.seriesUID,
          SOPInstanceUID: qs.objectUID
        };
      } // Maybe its a non-standard imageId


      return this.imageIdToUIDs.get(imageId);
    }
  }]);

  return MetadataProvider;
}();

var metadataProvider = new MetadataProvider();
/* harmony default export */ __webpack_exports__["default"] = (metadataProvider);
var WADO_IMAGE_LOADER_TAGS = {
  // CornerstoneWADOImageLoader specific
  GENERAL_SERIES_MODULE: 'generalSeriesModule',
  PATIENT_STUDY_MODULE: 'patientStudyModule',
  IMAGE_PLANE_MODULE: 'imagePlaneModule',
  IMAGE_PIXEL_MODULE: 'imagePixelModule',
  VOI_LUT_MODULE: 'voiLutModule',
  MODALITY_LUT_MODULE: 'modalityLutModule',
  SOP_COMMON_MODULE: 'sopCommonModule',
  PET_ISOTOPE_MODULE: 'petIsotopeModule',
  OVERLAY_PLANE_MODULE: 'overlayPlaneModule',
  // react-cornerstone-viewport specifc
  PATIENT_MODULE: 'patientModule',
  GENERAL_IMAGE_MODULE: 'generalImageModule',
  GENERAL_STUDY_MODULE: 'generalStudyModule',
  CINE_MODULE: 'cineModule'
};
var INSTANCE = 'instance';

/***/ }),

/***/ "./classes/OHIFError.js":
/*!******************************!*\
  !*** ./classes/OHIFError.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/wrapNativeSuper */ "../node_modules/@babel/runtime/helpers/wrapNativeSuper.js");
/* harmony import */ var _babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4__);






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

// @TODO: improve this object

/**
 * Objects to be used to throw errors
 */
var OHIFError = /*#__PURE__*/function (_Error) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(OHIFError, _Error);

  var _super = _createSuper(OHIFError);

  function OHIFError(message) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, OHIFError);

    _this = _super.call(this);
    _this.message = message;
    _this.stack = new Error().stack;
    _this.name = _this.constructor.name;
    return _this;
  }

  return OHIFError;
}( /*#__PURE__*/_babel_runtime_helpers_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_4___default()(Error));

/* harmony default export */ __webpack_exports__["default"] = (OHIFError);

/***/ }),

/***/ "./classes/OHIFStudyMetadataSource.js":
/*!********************************************!*\
  !*** ./classes/OHIFStudyMetadataSource.js ***!
  \********************************************/
/*! exports provided: OHIFStudyMetadataSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OHIFStudyMetadataSource", function() { return OHIFStudyMetadataSource; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils */ "./utils/studyMetadataManager.js");
/* harmony import */ var _OHIFError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./OHIFError */ "./classes/OHIFError.js");
/* harmony import */ var _metadata_StudyMetadata__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./metadata/StudyMetadata */ "./classes/metadata/StudyMetadata.js");
/* harmony import */ var _StudyMetadataSource__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./StudyMetadataSource */ "./classes/StudyMetadataSource.js");
/* harmony import */ var _studies_retrieveStudyMetadata__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../studies/retrieveStudyMetadata */ "./studies/retrieveStudyMetadata.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }






var OHIFStudyMetadataSource = /*#__PURE__*/function (_StudyMetadataSource) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(OHIFStudyMetadataSource, _StudyMetadataSource);

  var _super = _createSuper(OHIFStudyMetadataSource);

  function OHIFStudyMetadataSource() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, OHIFStudyMetadataSource);

    return _super.apply(this, arguments);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(OHIFStudyMetadataSource, [{
    key: "getByInstanceUID",

    /**
    * Get study metadata for a study with given study InstanceUID
    * @param server
    * @param  {String} studyInstanceUID Study InstanceUID
    * @return {Promise} A Promise object
    */
    value: function getByInstanceUID(server, studyInstanceUID) {
      return Object(_studies_retrieveStudyMetadata__WEBPACK_IMPORTED_MODULE_9__["retrieveStudyMetadata"])(server, studyInstanceUID);
    }
    /**
    * Load study info (OHIF.viewer.Studies) and study metadata (OHIF.viewer.StudyMetadataList) for a given study.
    * @param {StudyMetadata} study StudyMetadata object.
    */

  }, {
    key: "loadStudy",
    value: function loadStudy(study) {
      var _this = this;

      if (!(study instanceof _metadata_StudyMetadata__WEBPACK_IMPORTED_MODULE_7__["StudyMetadata"])) {
        throw new _OHIFError__WEBPACK_IMPORTED_MODULE_6__["default"]('OHIFStudyMetadataSource::loadStudy study is not an instance of StudyMetadata');
      }

      return new Promise(function (resolve, reject) {
        var studyInstanceUID = study.getStudyInstanceUID();

        if (study instanceof _metadata_StudyMetadata__WEBPACK_IMPORTED_MODULE_7__["StudyMetadata"]) {
          var alreadyLoaded = OHIF.viewer.Studies.findBy({
            StudyInstanceUID: studyInstanceUID
          });

          if (!alreadyLoaded) {
            OHIFStudyMetadataSource._updateStudyCollections(study);
          }

          resolve(study);
          return;
        }

        _this.getByInstanceUID(studyInstanceUID).then(function (studyInfo) {
          // Create study metadata object
          var studyMetadata = new _metadata_StudyMetadata__WEBPACK_IMPORTED_MODULE_7__["StudyMetadata"](studyInfo, studyInfo.StudyInstanceUID); // Get Study display sets

          var displaySets = studyMetadata.createDisplaySets(); // Set studyMetadata display sets

          studyMetadata.setDisplaySets(displaySets);

          OHIFStudyMetadataSource._updateStudyCollections(studyMetadata);

          resolve(studyMetadata);
        })["catch"](reject);
      });
    } // Static methods

  }], [{
    key: "_updateStudyCollections",
    value: function _updateStudyCollections(studyMetadata) {
      var studyInfo = studyMetadata.getData(); // Set some studyInfo properties

      studyInfo.selected = true;
      studyInfo.displaySets = studyMetadata.getDisplaySets();
      _utils__WEBPACK_IMPORTED_MODULE_5__["default"].add(studyMetadata);
    }
  }]);

  return OHIFStudyMetadataSource;
}(_StudyMetadataSource__WEBPACK_IMPORTED_MODULE_8__["StudyMetadataSource"]);

/***/ }),

/***/ "./classes/StudyLoadingListener.js":
/*!*****************************************!*\
  !*** ./classes/StudyLoadingListener.js ***!
  \*****************************************/
/*! exports provided: StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StudyLoadingListener", function() { return StudyLoadingListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StackLoadingListener", function() { return StackLoadingListener; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DICOMFileLoadingListener", function() { return DICOMFileLoadingListener; });
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var cornerstone_wado_image_loader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! cornerstone-wado-image-loader */ "cornerstone-wado-image-loader");
/* harmony import */ var cornerstone_wado_image_loader__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(cornerstone_wado_image_loader__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _utils_StackManager__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils/StackManager */ "./utils/StackManager.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





var BaseLoadingListener = /*#__PURE__*/function () {
  function BaseLoadingListener(stack) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, BaseLoadingListener);

    this.id = BaseLoadingListener.getNewId();
    this.stack = stack;
    this.startListening();
    this.statsItemsLimit = options.statsItemsLimit || 2;
    this.stats = {
      items: [],
      total: 0,
      elapsedTime: 0,
      speed: 0
    };
    this._setProgressData = options._setProgressData;
    this._clearProgressById = options._clearProgressById; // Register the start point to make it possible to calculate
    // bytes/s or frames/s when the first byte or frame is received

    this._addStatsData(0); // Update the progress before starting the download
    // to make it possible to update the UI


    this._updateProgress();
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(BaseLoadingListener, [{
    key: "_addStatsData",
    value: function _addStatsData(value) {
      var date = new Date();
      var stats = this.stats;
      var items = stats.items;
      var newItem = {
        value: value,
        date: date
      };
      items.push(newItem);
      stats.total += newItem.value; // Remove items until it gets below the limit

      while (items.length > this.statsItemsLimit) {
        var item = items.shift();
        stats.total -= item.value;
      } // Update the elapsedTime (seconds) based on first and last
      // elements and recalculate the speed (bytes/s or frames/s)


      if (items.length > 1) {
        var oldestItem = items[0];
        stats.elapsedTime = (newItem.date.getTime() - oldestItem.date.getTime()) / 1000;
        stats.speed = (stats.total - oldestItem.value) / stats.elapsedTime;
      }
    }
  }, {
    key: "_getProgressId",
    value: function _getProgressId() {
      var displaySetInstanceUID = this.stack.displaySetInstanceUID;
      return "StackProgress:".concat(displaySetInstanceUID);
    }
  }, {
    key: "_clearProgress",
    value: function _clearProgress() {
      var progressId = this._getProgressId();

      this._clearProgressById(progressId);
    }
  }, {
    key: "startListening",
    value: function startListening() {
      throw new Error('`startListening` must be implemented by child classes');
    }
  }, {
    key: "stopListening",
    value: function stopListening() {
      throw new Error('`stopListening` must be implemented by child classes');
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.stopListening();

      this._clearProgress();
    }
  }], [{
    key: "getNewId",
    value: function getNewId() {
      var timeSlice = new Date().getTime().toString().slice(-8);
      var randomNumber = parseInt(Math.random() * 1000000000);
      return timeSlice.toString() + randomNumber.toString();
    }
  }]);

  return BaseLoadingListener;
}();

var DICOMFileLoadingListener = /*#__PURE__*/function (_BaseLoadingListener) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_0___default()(DICOMFileLoadingListener, _BaseLoadingListener);

  var _super = _createSuper(DICOMFileLoadingListener);

  function DICOMFileLoadingListener(stack, options) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, DICOMFileLoadingListener);

    _this = _super.call(this, stack, options);
    _this._dataSetUrl = _this._getDataSetUrl(stack);
    _this._lastLoaded = 0; // Check how many instances has already been download (cached)

    _this._checkCachedData();

    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(DICOMFileLoadingListener, [{
    key: "_checkCachedData",
    value: function _checkCachedData() {
      var dataSet = cornerstone_wado_image_loader__WEBPACK_IMPORTED_MODULE_6___default.a.wadouri.dataSetCacheManager.get(this._dataSetUrl);

      if (dataSet) {
        var dataSetLength = dataSet.byteArray.length;

        this._updateProgress({
          percentComplete: 100,
          loaded: dataSetLength,
          total: dataSetLength
        });
      }
    }
  }, {
    key: "_getImageLoadProgressEventName",
    value: function _getImageLoadProgressEventName() {
      // TODO: Add this event as a constant in Cornerstone
      return "cornerstoneimageloadprogress.".concat(this.id);
    }
  }, {
    key: "startListening",
    value: function startListening() {
      var imageLoadProgressEventName = this._getImageLoadProgressEventName();

      this.imageLoadProgressEventHandler = this._imageLoadProgressEventHandle.bind(this);
      this.stopListening();
      cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.events.addEventListener(imageLoadProgressEventName, this.imageLoadProgressEventHandle);
    }
  }, {
    key: "stopListening",
    value: function stopListening() {
      var imageLoadProgressEventName = this._getImageLoadProgressEventName();

      cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.events.removeEventListener(imageLoadProgressEventName, this.imageLoadProgressEventHandle);
    }
  }, {
    key: "_imageLoadProgressEventHandler",
    value: function _imageLoadProgressEventHandler(e) {
      var eventData = e.detail;

      var dataSetUrl = this._convertImageIdToDataSetUrl(eventData.imageId);

      var bytesDiff = eventData.loaded - this._lastLoaded;

      if (!this._dataSetUrl === dataSetUrl) {
        return;
      } // Add the bytes downloaded to the stats


      this._addStatsData(bytesDiff); // Update the download progress


      this._updateProgress(eventData); // Cache the last eventData.loaded value


      this._lastLoaded = eventData.loaded;
    }
  }, {
    key: "_updateProgress",
    value: function _updateProgress(eventData) {
      var progressId = this._getProgressId();

      eventData = eventData || {};
      var progressData = {
        multiFrame: false,
        percentComplete: eventData.percentComplete,
        bytesLoaded: eventData.loaded,
        bytesTotal: eventData.total,
        bytesPerSecond: this.stats.speed
      };

      this._setProgressData(progressId, progressData);
    }
  }, {
    key: "_convertImageIdToDataSetUrl",
    value: function _convertImageIdToDataSetUrl(imageId) {
      // Remove the prefix ("dicomweb:" or "wadouri:"")
      imageId = imageId.replace(/^(dicomweb:|wadouri:)/i, ''); // Remove "frame=999&" from the imageId

      imageId = imageId.replace(/frame=\d+&?/i, ''); // Remove the last "&" like in "http://...?foo=1&bar=2&"

      imageId = imageId.replace(/&$/, '');
      return imageId;
    }
  }, {
    key: "_getDataSetUrl",
    value: function _getDataSetUrl(stack) {
      var imageId = stack.imageIds[0];
      return this._convertImageIdToDataSetUrl(imageId);
    }
  }]);

  return DICOMFileLoadingListener;
}(BaseLoadingListener);

var StackLoadingListener = /*#__PURE__*/function (_BaseLoadingListener2) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_0___default()(StackLoadingListener, _BaseLoadingListener2);

  var _super2 = _createSuper(StackLoadingListener);

  function StackLoadingListener(stack) {
    var _this2;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, StackLoadingListener);

    options.statsItemsLimit = 20;
    _this2 = _super2.call(this, stack, options);
    _this2.imageDataMap = _this2._convertImageIdsArrayToMap(stack.imageIds);
    _this2.framesStatus = _this2._createArray(stack.imageIds.length, false);
    _this2.loadedCount = 0; // Check how many instances has already been download (cached)

    _this2._checkCachedData();

    return _this2;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(StackLoadingListener, [{
    key: "_convertImageIdsArrayToMap",
    value: function _convertImageIdsArrayToMap(imageIds) {
      var imageIdsMap = new Map();

      for (var i = 0; i < imageIds.length; i++) {
        imageIdsMap.set(imageIds[i], {
          index: i,
          loaded: false
        });
      }

      return imageIdsMap;
    }
  }, {
    key: "_createArray",
    value: function _createArray(length, defaultValue) {
      // `new Array(length)` is an anti-pattern in javascript because its
      // funny API. Otherwise I would go for `new Array(length).fill(false)`
      var array = [];

      for (var i = 0; i < length; i++) {
        array[i] = defaultValue;
      }

      return array;
    }
  }, {
    key: "_checkCachedData",
    value: function _checkCachedData() {// const imageIds = this.stack.imageIds;
      // TODO: No way to check status of Promise.

      /* for(let i = 0; i < imageIds.length; i++) {
              const imageId = imageIds[i];
               const imagePromise = cornerstone.imageCache.getImageLoadObject(imageId).promise;
               if (imagePromise && (imagePromise.state() === 'resolved')) {
                  this._updateFrameStatus(imageId, true);
              }
          } */
    }
  }, {
    key: "_getImageLoadedEventName",
    value: function _getImageLoadedEventName() {
      return "".concat(cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.EVENTS.IMAGE_LOADED, ".").concat(this.id);
    }
  }, {
    key: "_getImageCachePromiseRemoveEventName",
    value: function _getImageCachePromiseRemoveEventName() {
      return "".concat(cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.EVENTS.IMAGE_CACHE_PROMISE_REMOVED, ".").concat(this.id);
    }
  }, {
    key: "_imageLoadedEventHandler",
    value: function _imageLoadedEventHandler(e) {
      this._updateFrameStatus(e.detail.image.imageId, true);
    }
  }, {
    key: "_imageCachePromiseRemovedEventHandler",
    value: function _imageCachePromiseRemovedEventHandler(e) {
      this._updateFrameStatus(e.detail.imageId, false);
    }
  }, {
    key: "startListening",
    value: function startListening() {
      var imageLoadedEventName = this._getImageLoadedEventName();

      var imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();

      this.imageLoadedEventHandler = this._imageLoadedEventHandler.bind(this);
      this.imageCachePromiseRemovedEventHandler = this._imageCachePromiseRemovedEventHandler.bind(this);
      this.stopListening();
      cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.events.addEventListener(imageLoadedEventName, this.imageLoadedEventHandler);
      cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.events.addEventListener(imageCachePromiseRemovedEventName, this.imageCachePromiseRemovedEventHandler);
    }
  }, {
    key: "stopListening",
    value: function stopListening() {
      var imageLoadedEventName = this._getImageLoadedEventName();

      var imageCachePromiseRemovedEventName = this._getImageCachePromiseRemoveEventName();

      cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.events.removeEventListener(imageLoadedEventName, this.imageLoadedEventHandler);
      cornerstone_core__WEBPACK_IMPORTED_MODULE_5___default.a.events.removeEventListener(imageCachePromiseRemovedEventName, this.imageCachePromiseRemovedEventHandler);
    }
  }, {
    key: "_updateFrameStatus",
    value: function _updateFrameStatus(imageId, loaded) {
      var imageData = this.imageDataMap.get(imageId);

      if (!imageData || imageData.loaded === loaded) {
        return;
      } // Add one more frame to the stats


      if (loaded) {
        this._addStatsData(1);
      }

      imageData.loaded = loaded;
      this.framesStatus[imageData.index] = loaded;
      this.loadedCount += loaded ? 1 : -1;

      this._updateProgress();
    }
  }, {
    key: "_setProgressData",
    value: function _setProgressData(progressId, progressData) {
      // TODO: This method (and _clearProgressById) need to access
      // the Redux store and should therefore be provided from the
      // application. I've added a workaround to pass this in through
      // the 'options' variable on instantiation, but this is really ugly.
      // We could consider making the StudyLoadingListener a higher-order
      // component which would set this stuff itself.
      throw new Error('The _setProgressData function must be provided in StudyLoadingListener\'s options');
    }
  }, {
    key: "_clearProgressById",
    value: function _clearProgressById(progressId) {
      throw new Error('The _clearProgressById function must be provided in StudyLoadingListener\'s options');
    }
  }, {
    key: "_updateProgress",
    value: function _updateProgress() {
      var totalFramesCount = this.stack.imageIds.length;
      var loadedFramesCount = this.loadedCount;
      var loadingFramesCount = totalFramesCount - loadedFramesCount;
      var percentComplete = Math.round(loadedFramesCount / totalFramesCount * 100);

      var progressId = this._getProgressId();

      var progressData = {
        multiFrame: true,
        totalFramesCount: totalFramesCount,
        loadedFramesCount: loadedFramesCount,
        loadingFramesCount: loadingFramesCount,
        percentComplete: percentComplete,
        framesPerSecond: this.stats.speed,
        framesStatus: this.framesStatus
      };

      this._setProgressData(progressId, progressData);
    }
  }, {
    key: "_logProgress",
    value: function _logProgress() {
      var totalFramesCount = this.stack.imageIds.length;
      var displaySetInstanceUID = this.stack.displaySetInstanceUID;
      var progressBar = '[';

      for (var i = 0; i < totalFramesCount; i++) {
        var ch = this.framesStatus[i] ? '|' : '.';
        progressBar += "".concat(ch);
      }

      progressBar += ']';
      log.info("".concat(displaySetInstanceUID, ": ").concat(progressBar));
    }
  }]);

  return StackLoadingListener;
}(BaseLoadingListener);

var StudyLoadingListener = /*#__PURE__*/function () {
  function StudyLoadingListener(options) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, StudyLoadingListener);

    this.listeners = {};
    this.options = options;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(StudyLoadingListener, [{
    key: "addStack",
    value: function addStack(stack, stackMetaData) {
      // TODO: Make this work for plugins
      if (!stack) {
        // console.log('Skipping adding stack to StudyLoadingListener');
        return;
      }

      var displaySetInstanceUID = stack.displaySetInstanceUID;

      if (!this.listeners[displaySetInstanceUID]) {
        var listener = this._createListener(stack, stackMetaData);

        if (listener) {
          this.listeners[displaySetInstanceUID] = listener;
        }
      }
    }
  }, {
    key: "addStudy",
    value: function addStudy(study) {
      var _this3 = this;

      study.displaySets.forEach(function (displaySet) {
        var stack = _utils_StackManager__WEBPACK_IMPORTED_MODULE_7__["default"].findOrCreateStack(study, displaySet); // TODO: Make this work for plugins

        if (!stack) {
          console.warn('Skipping adding displaySet to StudyLoadingListener');
          console.warn(displaySet);
          return;
        }

        _this3.addStack(stack, {
          isMultiFrame: displaySet.isMultiFrame
        });
      });
    }
  }, {
    key: "addStudies",
    value: function addStudies(studies) {
      var _this4 = this;

      if (!studies || !studies.length) {
        return;
      }

      studies.forEach(function (study) {
        return _this4.addStudy(study);
      });
    }
  }, {
    key: "clear",
    value: function clear() {
      var displaySetInstanceUIDs = Object.keys(this.listeners);
      var length = displaySetInstanceUIDs.length;

      for (var i = 0; i < length; i++) {
        var displaySetInstanceUID = displaySetInstanceUIDs[i];
        var displaySet = this.listeners[displaySetInstanceUID];
        displaySet.destroy();
      }

      this.listeners = {};
    }
  }, {
    key: "_createListener",
    value: function _createListener(stack, stackMetaData) {
      var schema = this._getSchema(stack); // A StackLoadingListener can be created if it's wadors or not a multiframe
      // wadouri instance (single file) that means "N" files will have to be
      // downloaded where "N" is the number of frames. DICOMFileLoadingListener
      // is created only if it's a single DICOM file and there's no way to know
      // how many frames has already been loaded (bytes/s instead of frames/s).


      if (schema === 'wadors' || !stackMetaData.isMultiFrame) {
        return new StackLoadingListener(stack, this.options);
      }

      return new DICOMFileLoadingListener(stack, this.options);
    }
  }, {
    key: "_getSchema",
    value: function _getSchema(stack) {
      var imageId = stack.imageIds[0];
      var colonIndex = imageId.indexOf(':');
      return imageId.substring(0, colonIndex);
    } // Singleton

  }], [{
    key: "getInstance",
    value: function getInstance(options) {
      if (!StudyLoadingListener._instance) {
        StudyLoadingListener._instance = new StudyLoadingListener(options);
      }

      return StudyLoadingListener._instance;
    }
  }]);

  return StudyLoadingListener;
}();



/***/ }),

/***/ "./classes/StudyMetadataSource.js":
/*!****************************************!*\
  !*** ./classes/StudyMetadataSource.js ***!
  \****************************************/
/*! exports provided: StudyMetadataSource */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StudyMetadataSource", function() { return StudyMetadataSource; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _OHIFError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OHIFError */ "./classes/OHIFError.js");



/**
 * Abstract class to fetch study metadata.
 */

var StudyMetadataSource = /*#__PURE__*/function () {
  function StudyMetadataSource() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, StudyMetadataSource);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(StudyMetadataSource, [{
    key: "getByInstanceUID",

    /**
    * Get study metadata for a study with given study InstanceUID.
    * @param {String} studyInstanceUID Study InstanceUID.
    */
    value: function getByInstanceUID(studyInstanceUID) {
      /**
       * Please override this method on a specialized class.
       */
      throw new _OHIFError__WEBPACK_IMPORTED_MODULE_2__["default"]('StudyMetadataSource::getByInstanceUID is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example');
    }
    /**
    * Load study info and study metadata for a given study into the viewer.
    * @param {StudyMetadata} study StudyMetadata object.
    */

  }, {
    key: "loadStudy",
    value: function loadStudy(study) {
      /**
       * Please override this method on a specialized class.
       */
      throw new _OHIFError__WEBPACK_IMPORTED_MODULE_2__["default"]('StudyMetadataSource::loadStudy is not overriden. Please, override it in a specialized class. See OHIFStudyMetadataSource for example');
    }
  }]);

  return StudyMetadataSource;
}();

/***/ }),

/***/ "./classes/StudyPrefetcher.js":
/*!************************************!*\
  !*** ./classes/StudyPrefetcher.js ***!
  \************************************/
/*! exports provided: StudyPrefetcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StudyPrefetcher", function() { return StudyPrefetcher; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var cornerstone_tools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cornerstone-tools */ "cornerstone-tools");
/* harmony import */ var cornerstone_tools__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(cornerstone_tools__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../log */ "./log.js");
/* harmony import */ var _utils_getImageId__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/getImageId */ "./utils/getImageId.js");






var StudyPrefetcher = /*#__PURE__*/function () {
  function StudyPrefetcher(studies) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, StudyPrefetcher);

    this.studies = studies || [];
    this.prefetchDisplaySetsTimeout = 300;
    this.lastActiveViewportElement = null;
    cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.events.addEventListener('cornerstoneimagecachefull.StudyPrefetcher', this.cacheFullHandler);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(StudyPrefetcher, [{
    key: "destroy",
    value: function destroy() {
      this.stopPrefetching();
      cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.events.removeEventListener('cornerstoneimagecachefull.StudyPrefetcher', this.cacheFullHandler);
    }
  }, {
    key: "setStudies",
    value: function setStudies(studies) {
      this.stopPrefetching();
      this.studies = studies;
    }
  }, {
    key: "prefetch",
    value: function prefetch() {
      if (!this.studies || !this.studies.length) {
        return;
      }

      this.stopPrefetching();
      this.prefetchDisplaySets();
    }
  }, {
    key: "stopPrefetching",
    value: function stopPrefetching() {
      cornerstone_tools__WEBPACK_IMPORTED_MODULE_3___default.a.requestPoolManager.clearRequestStack('prefetch');
    }
  }, {
    key: "prefetchDisplaySetsAsync",
    value: function prefetchDisplaySetsAsync(timeout) {
      var _this = this;

      timeout = timeout || this.prefetchDisplaySetsTimeout;
      clearTimeout(this.prefetchDisplaySetsHandler);
      this.prefetchDisplaySetsHandler = setTimeout(function () {
        _this.prefetchDisplaySets();
      }, timeout);
    }
  }, {
    key: "prefetchDisplaySets",
    value: function prefetchDisplaySets() {
      // TODO: Allow passing in config
      var config = {
        order: 'closest',
        displaySetCount: 1
      };
      var displaySetsToPrefetch = this.getDisplaySetsToPrefetch(config);
      var imageIds = this.getImageIdsFromDisplaySets(displaySetsToPrefetch);
      this.prefetchImageIds(imageIds);
    }
  }, {
    key: "prefetchImageIds",
    value: function prefetchImageIds(imageIds) {
      var nonCachedImageIds = this.filterCachedImageIds(imageIds);
      var requestPoolManager = cornerstone_tools__WEBPACK_IMPORTED_MODULE_3___default.a.requestPoolManager;
      var requestType = 'prefetch';
      var preventCache = false;

      var noop = function noop() {};

      nonCachedImageIds.forEach(function (imageId) {
        requestPoolManager.addRequest({}, imageId, requestType, preventCache, noop, noop);
      });
      requestPoolManager.startGrabbing();
    }
  }, {
    key: "getStudy",
    value: function getStudy(image) {
      var StudyInstanceUID = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.metaData.get('StudyInstanceUID', image.imageId);
      return OHIF.viewer.Studies.find(function (study) {
        return study.StudyInstanceUID === StudyInstanceUID;
      });
    }
  }, {
    key: "getSeries",
    value: function getSeries(study, image) {
      var SeriesInstanceUID = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.metaData.get('SeriesInstanceUID', image.imageId);
      var studyMetadata = OHIF.viewerbase.getStudyMetadata(study);
      return studyMetadata.getSeriesByUID(SeriesInstanceUID);
    }
  }, {
    key: "getInstance",
    value: function getInstance(series, image) {
      var instanceMetadata = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.metaData.get('instance', image.imageId);
      return series.getInstanceByUID(instanceMetadata.SOPInstanceUID);
    }
  }, {
    key: "getActiveDisplaySet",
    value: function getActiveDisplaySet(displaySets, instance) {
      return displaySets.find(function (displaySet) {
        return displaySet.images.some(function (displaySetImage) {
          return displaySetImage.SOPInstanceUID === instance.SOPInstanceUID;
        });
      });
    }
  }, {
    key: "getDisplaySetsToPrefetch",
    value: function getDisplaySetsToPrefetch(config) {
      var image = this.getActiveViewportImage();

      if (!image || !config || !config.displaySetCount) {
        return [];
      }
      /* const study = this.getStudy(image);
      const series = this.getSeries(study, image);
      const instance = this.getInstance(series, image); */


      var displaySets = study.displaySets;
      var activeDisplaySet = null; // this.getActiveDisplaySet(displaySets, instance);

      var prefetchMethodMap = {
        topdown: 'getFirstDisplaySets',
        downward: 'getNextDisplaySets',
        closest: 'getClosestDisplaySets'
      };
      var prefetchOrder = config.order;
      var methodName = prefetchMethodMap[prefetchOrder];
      var getDisplaySets = this[methodName];

      if (!getDisplaySets) {
        if (prefetchOrder) {
          _log__WEBPACK_IMPORTED_MODULE_4__["default"].warn("Invalid prefetch order configuration (".concat(prefetchOrder, ")"));
        }

        return [];
      }

      return getDisplaySets.call(this, displaySets, activeDisplaySet, config.displaySetCount);
    }
  }, {
    key: "getFirstDisplaySets",
    value: function getFirstDisplaySets(displaySets, activeDisplaySet, displaySetCount) {
      var length = displaySets.length;
      var selectedDisplaySets = [];

      for (var i = 0; i < length && displaySetCount; i++) {
        var displaySet = displaySets[i];

        if (displaySet !== activeDisplaySet) {
          selectedDisplaySets.push(displaySet);
          displaySetCount--;
        }
      }

      return selectedDisplaySets;
    }
  }, {
    key: "getNextDisplaySets",
    value: function getNextDisplaySets(displaySets, activeDisplaySet, displaySetCount) {
      var activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);
      var begin = activeDisplaySetIndex + 1;
      var end = Math.min(begin + displaySetCount, displaySets.length);
      return displaySets.slice(begin, end);
    }
  }, {
    key: "getClosestDisplaySets",
    value: function getClosestDisplaySets(displaySets, activeDisplaySet, displaySetCount) {
      var activeDisplaySetIndex = displaySets.indexOf(activeDisplaySet);
      var length = displaySets.length;
      var selectedDisplaySets = [];
      var left = activeDisplaySetIndex - 1;
      var right = activeDisplaySetIndex + 1;

      while ((left >= 0 || right < length) && displaySetCount) {
        if (left >= 0) {
          selectedDisplaySets.push(displaySets[left]);
          displaySetCount--;
          left--;
        }

        if (right < length && displaySetCount) {
          selectedDisplaySets.push(displaySets[right]);
          displaySetCount--;
          right++;
        }
      }

      return selectedDisplaySets;
    }
  }, {
    key: "getImageIdsFromDisplaySets",
    value: function getImageIdsFromDisplaySets(displaySets) {
      var _this2 = this;

      var imageIds = [];
      displaySets.forEach(function (displaySet) {
        imageIds = imageIds.concat(_this2.getImageIdsFromDisplaySet(displaySet));
      });
      return imageIds;
    }
  }, {
    key: "getImageIdsFromDisplaySet",
    value: function getImageIdsFromDisplaySet(displaySet) {
      var imageIds = []; // TODO: This duplicates work done by the stack manager

      displaySet.images.forEach(function (image) {
        var numFrames = image.numFrames;

        if (numFrames > 1) {
          for (var i = 0; i < numFrames; i++) {
            var imageId = Object(_utils_getImageId__WEBPACK_IMPORTED_MODULE_5__["default"])(image, i);
            imageIds.push(imageId);
          }
        } else {
          var _imageId = Object(_utils_getImageId__WEBPACK_IMPORTED_MODULE_5__["default"])(image);

          imageIds.push(_imageId);
        }
      });
      return imageIds;
    }
  }, {
    key: "filterCachedImageIds",
    value: function filterCachedImageIds(imageIds) {
      var _this3 = this;

      return imageIds.filter(function (imageId) {
        return !_this3.isImageCached(imageId);
      });
    }
  }, {
    key: "isImageCached",
    value: function isImageCached(imageId) {
      var image = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.imageCache.imageCache[imageId];
      return image && image.sizeInBytes;
    }
  }, {
    key: "cacheFullHandler",
    value: function cacheFullHandler() {
      _log__WEBPACK_IMPORTED_MODULE_4__["default"].warn('Cache full');
      this.stopPrefetching();
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!StudyPrefetcher.instance) {
        StudyPrefetcher.instance = new StudyPrefetcher([]);
      }

      return StudyPrefetcher.instance;
    }
  }]);

  return StudyPrefetcher;
}();

/***/ }),

/***/ "./classes/TypeSafeCollection.js":
/*!***************************************!*\
  !*** ./classes/TypeSafeCollection.js ***!
  \***************************************/
/*! exports provided: TypeSafeCollection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TypeSafeCollection", function() { return TypeSafeCollection; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_guid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/guid */ "./utils/guid.js");




/**
 * Constants
 */

var PROPERTY_SEPARATOR = '.';
var ORDER_ASC = 'asc';
var ORDER_DESC = 'desc';
var MIN_COUNT = 0x00000000;
var MAX_COUNT = 0x7fffffff;
/**
 * Class Definition
 */

var TypeSafeCollection = /*#__PURE__*/function () {
  function TypeSafeCollection() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, TypeSafeCollection);

    this._operationCount = MIN_COUNT;
    this._elementList = [];
    this._handlers = Object.create(null);
  }
  /**
  * Private Methods
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(TypeSafeCollection, [{
    key: "_invalidate",
    value: function _invalidate() {
      var count = this._operationCount;
      this._operationCount = count < MAX_COUNT ? count + 1 : MIN_COUNT;
    }
  }, {
    key: "_elements",
    value: function _elements(silent) {
      silent === true || this._operationCount;
      return this._elementList;
    }
  }, {
    key: "_elementWithPayload",
    value: function _elementWithPayload(payload, silent) {
      return this._elements(silent).find(function (item) {
        return item.payload === payload;
      });
    }
  }, {
    key: "_elementWithId",
    value: function _elementWithId(id, silent) {
      return this._elements(silent).find(function (item) {
        return item.id === id;
      });
    }
  }, {
    key: "_trigger",
    value: function _trigger(event, data) {
      var handlers = this._handlers;

      if (event in handlers) {
        handlers = handlers[event];

        if (!(handlers instanceof Array)) {
          return;
        }

        for (var i = 0, limit = handlers.length; i < limit; ++i) {
          var handler = handlers[i];

          if (_isFunction(handler)) {
            handler.call(null, data);
          }
        }
      }
    }
    /**
    * Public Methods
    */

  }, {
    key: "onInsert",
    value: function onInsert(callback) {
      if (_isFunction(callback)) {
        var handlers = this._handlers.insert;

        if (!(handlers instanceof Array)) {
          handlers = [];
          this._handlers.insert = handlers;
        }

        handlers.push(callback);
      }
    }
    /**
    * Update the payload associated with the given ID to be the new supplied payload.
    * @param {string} id The ID of the entry that will be updated.
    * @param {any} payload The element that will replace the previous payload.
    * @returns {boolean} Returns true if the given ID is present in the collection, false otherwise.
    */

  }, {
    key: "updateById",
    value: function updateById(id, payload) {
      var result = false;

      var found = this._elementWithPayload(payload, true);

      if (found) {
        // nothing to do since the element is already in the collection...
        if (found.id === id) {
          // set result to true since the ids match...
          result = true;

          this._invalidate();
        }
      } else {
        found = this._elementWithId(id, true);

        if (found) {
          found.payload = payload;
          result = true;

          this._invalidate();
        }
      }

      return result;
    }
    /**
    * Signal that the given element has been changed by notifying reactive data-source observers.
    * This method is basically a means to invalidate the inernal reactive data-source.
    * @param {any} payload The element that has been altered.
    * @returns {boolean} Returns true if the element is present in the collection, false otherwise.
    */

  }, {
    key: "update",
    value: function update(payload) {
      var result = false;

      var found = this._elementWithPayload(payload, true);

      if (found) {
        // nothing to do since the element is already in the collection...
        result = true;

        this._invalidate();
      }

      return result;
    }
    /**
    * Insert an element in the collection. On success, the element ID (a unique string) is returned. On failure, returns null.
    * A failure scenario only happens when the given payload is already present in the collection. Note that NO exceptions are thrown!
    * @param {any} payload The element to be stored.
    * @returns {string} The ID of the inserted element or null if the element already exists...
    */

  }, {
    key: "insert",
    value: function insert(payload) {
      var id = null;

      var found = this._elementWithPayload(payload, true);

      if (!found) {
        id = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_3__["default"])();

        this._elements(true).push({
          id: id,
          payload: payload
        });

        this._invalidate();

        this._trigger('insert', {
          id: id,
          data: payload
        });
      }

      return id;
    }
    /**
    * Remove all elements from the collection.
    * @returns {void} No meaningful value is returned.
    */

  }, {
    key: "removeAll",
    value: function removeAll() {
      var all = this._elements(true);

      var length = all.length;

      for (var i = length - 1; i >= 0; i--) {
        var item = all[i];
        delete item.id;
        delete item.payload;
        all[i] = null;
      }

      all.splice(0, length);

      this._invalidate();
    }
    /**
    * Remove elements from the collection that match the criteria given in the property map.
    * @param {Object} propertyMap A property map that will be macthed against all collection elements.
    * @returns {Array} A list with all removed elements.
    */

  }, {
    key: "remove",
    value: function remove(propertyMap) {
      var found = this.findAllEntriesBy(propertyMap);
      var foundCount = found.length;
      var removed = [];

      if (foundCount > 0) {
        var all = this._elements(true);

        for (var i = foundCount - 1; i >= 0; i--) {
          var item = found[i];
          all.splice(item[2], 1);
          removed.push(item[0]);
        }

        this._invalidate();
      }

      return removed;
    }
    /**
    * Provides the ID of the given element inside the collection.
    * @param {any} payload The element being searched for.
    * @returns {string} The ID of the given element or undefined if the element is not present.
    */

  }, {
    key: "getElementId",
    value: function getElementId(payload) {
      var found = this._elementWithPayload(payload);

      return found && found.id;
    }
    /**
    * Provides the position of the given element in the internal list returning -1 if the element is not present.
    * @param {any} payload The element being searched for.
    * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.
    */

  }, {
    key: "findById",
    value: function findById(id) {
      var found = this._elementWithId(id);

      return found && found.payload;
    }
    /**
    * Provides the position of the given element in the internal list returning -1 if the element is not present.
    * @param {any} payload The element being searched for.
    * @returns {number} The position of the given element in the internal list. If the element is not present -1 is returned.
    */

  }, {
    key: "indexOfElement",
    value: function indexOfElement(payload) {
      return this._elements().indexOf(this._elementWithPayload(payload, true));
    }
    /**
    * Provides the position of the element associated with the given ID in the internal list returning -1 if the element is not present.
    * @param {string} id The index of the element.
    * @returns {number} The position of the element associated with the given ID in the internal list. If the element is not present -1 is returned.
    */

  }, {
    key: "indexOfId",
    value: function indexOfId(id) {
      return this._elements().indexOf(this._elementWithId(id, true));
    }
    /**
    * Provides a list-like approach to the collection returning an element by index.
    * @param {number} index The index of the element.
    * @returns {any} If out of bounds, undefined is returned. Otherwise the element in the given position is returned.
    */

  }, {
    key: "getElementByIndex",
    value: function getElementByIndex(index) {
      var found = this._elements()[index >= 0 ? index : -1];

      return found && found.payload;
    }
    /**
    * Find an element by a criteria defined by the given callback function.
    * Attention!!! The reactive source will not be notified if no valid callback is supplied...
    * @param {function} callback A callback function which will define the search criteria. The callback
    * function will be passed the collection element, its ID and its index in this very order. The callback
    * shall return true when its criterea has been fulfilled.
    * @returns {any} The matched element or undefined if not match was found.
    */

  }, {
    key: "find",
    value: function find(callback) {
      var _this = this;

      var found;

      if (_isFunction(callback)) {
        found = this._elements().find(function (item, index) {
          return callback.call(_this, item.payload, item.id, index);
        });
      }

      return found && found.payload;
    }
    /**
    * Find the first element that strictly matches the specified property map.
    * @param {Object} propertyMap A property map that will be macthed against all collection elements.
    * @param {Object} options A set of options. Currently only "options.sort" option is supported.
    * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied
    * but is not valid, an exception will be thrown.
    * @returns {Any} The matched element or undefined if not match was found.
    */

  }, {
    key: "findBy",
    value: function findBy(propertyMap, options) {
      var found;

      if (_isObject(options)) {
        // if the "options" argument is provided and is a valid object,
        // it must be applied to the dataset before search...
        var all = this.all(options);

        if (all.length > 0) {
          if (_isObject(propertyMap)) {
            found = all.find(function (item) {
              return _compareToPropertyMapStrict(propertyMap, item);
            });
          } else {
            found = all[0]; // simply extract the first element...
          }
        }
      } else if (_isObject(propertyMap)) {
        found = this._elements().find(function (item) {
          return _compareToPropertyMapStrict(propertyMap, item.payload);
        });

        if (found) {
          found = found.payload;
        }
      }

      return found;
    }
    /**
    * Find all elements that strictly match the specified property map.
    * Attention!!! The reactive source will not be notified if no valid property map is supplied...
    * @param {Object} propertyMap A property map that will be macthed against all collection elements.
    * @returns {Array} An array of entries of all elements that match the given criteria. Each set in
    * in the array has the following format: [ elementData, elementId, elementIndex ].
    */

  }, {
    key: "findAllEntriesBy",
    value: function findAllEntriesBy(propertyMap) {
      var found = [];

      if (_isObject(propertyMap)) {
        this._elements().forEach(function (item, index) {
          if (_compareToPropertyMapStrict(propertyMap, item.payload)) {
            // Match! Add it to the found list...
            found.push([item.payload, item.id, index]);
          }
        });
      }

      return found;
    }
    /**
    * Find all elements that match a specified property map.
    * Attention!!! The reactive source will not be notified if no valid property map is supplied...
    * @param {Object} propertyMap A property map that will be macthed against all collection elements.
    * @param {Object} options A set of options. Currently only "options.sort" option is supported.
    * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied
    * but is not valid, an exception will be thrown.
    * @returns {Array} An array with all elements that match the given criteria and sorted in the specified sorting order.
    */

  }, {
    key: "findAllBy",
    value: function findAllBy(propertyMap, options) {
      var found = this.findAllEntriesBy(propertyMap).map(function (item) {
        return item[0];
      }); // Only payload is relevant...

      if (_isObject(options)) {
        if ('sort' in options) {
          _sortListBy(found, options.sort);
        }
      }

      return found;
    }
    /**
    * Executes the supplied callback function for each element of the collection.
    * Attention!!! The reactive source will not be notified if no valid property map is supplied...
    * @param {function} callback The callback function to be executed. The callback is passed the element,
    * its ID and its index in this very order.
    * @returns {void} Nothing is returned.
    */

  }, {
    key: "forEach",
    value: function forEach(callback) {
      var _this2 = this;

      if (_isFunction(callback)) {
        this._elements().forEach(function (item, index) {
          callback.call(_this2, item.payload, item.id, index);
        });
      }
    }
    /**
    * Count the number of elements currently in the collection.
    * @returns {number} The current number of elements in the collection.
    */

  }, {
    key: "count",
    value: function count() {
      return this._elements().length;
    }
    /**
    * Returns a list with all elements of the collection optionally sorted by a sorting specifier criteria.
    * @param {Object} options A set of options. Currently only "options.sort" option is supported.
    * @param {Object.SortingSpecifier} options.sort An optional sorting specifier. If a sorting specifier is supplied
    * but is not valid, an exception will be thrown.
    * @returns {Array} An array with all elements stored in the collection.
    */

  }, {
    key: "all",
    value: function all(options) {
      var list = this._elements().map(function (item) {
        return item.payload;
      });

      if (_isObject(options)) {
        if ('sort' in options) {
          _sortListBy(list, options.sort);
        }
      }

      return list;
    }
  }]);

  return TypeSafeCollection;
}();
/**
 * Utility Functions
 */

/**
 * Test if supplied argument is a valid object for current class purposes.
 * Atention! The underscore version of this function should not be used for performance reasons.
 */

function _isObject(subject) {
  return subject instanceof Object || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(subject) === 'object' && subject !== null;
}
/**
 * Test if supplied argument is a valid string for current class purposes.
 * Atention! The underscore version of this function should not be used for performance reasons.
 */


function _isString(subject) {
  return typeof subject === 'string';
}
/**
 * Test if supplied argument is a valid function for current class purposes.
 * Atention! The underscore version of this function should not be used for performance reasons.
 */


function _isFunction(subject) {
  return typeof subject === 'function';
}
/**
 * Shortcut for Object's prototype "hasOwnProperty" method.
 */


var _hasOwnProperty = Object.prototype.hasOwnProperty;
/**
 * Retrieve an object's property value by name. Composite property names (e.g., 'address.country.name') are accepted.
 * @param {Object} targetObject The object we want read the property from...
 * @param {String} propertyName The property to be read (e.g., 'address.street.name' or 'address.street.number'
 * to read object.address.street.name or object.address.street.number, respectively);
 * @returns {Any} Returns whatever the property holds or undefined if the property cannot be read or reached.
 */

function _getPropertyValue(targetObject, propertyName) {
  var propertyValue; // undefined (the default return value)

  if (_isObject(targetObject) && _isString(propertyName)) {
    var fragments = propertyName.split(PROPERTY_SEPARATOR);
    var fragmentCount = fragments.length;

    if (fragmentCount > 0) {
      var firstFragment = fragments[0];
      var remainingFragments = fragmentCount > 1 ? fragments.slice(1).join(PROPERTY_SEPARATOR) : null;
      propertyValue = targetObject[firstFragment];

      if (remainingFragments !== null) {
        propertyValue = _getPropertyValue(propertyValue, remainingFragments);
      }
    }
  }

  return propertyValue;
}
/**
 * Compare a property map with a target object using strict comparison.
 * @param {Object} propertyMap The property map whose properties will be used for comparison. Composite
 * property names (e.g., 'address.country.name') will be tested against the "resolved" properties from the target object.
 * @param {Object} targetObject The target object whose properties will be tested.
 * @returns {boolean} Returns true if the properties match, false otherwise.
 */


function _compareToPropertyMapStrict(propertyMap, targetObject) {
  var result = false; // "for in" loops do not thown exceptions for invalid data types...

  for (var propertyName in propertyMap) {
    if (_hasOwnProperty.call(propertyMap, propertyName)) {
      if (propertyMap[propertyName] !== _getPropertyValue(targetObject, propertyName)) {
        result = false;
        break;
      } else if (result !== true) {
        result = true;
      }
    }
  }

  return result;
}
/**
 * Checks if a sorting specifier is valid.
 * A valid sorting specifier consists of an array of arrays being each subarray a pair
 * in the format ["property name", "sorting order"].
 * The following exemple can be used to sort studies by "date"" and use "time" to break ties in descending order.
 * [ [ 'study.date', 'desc' ], [ 'study.time', 'desc' ] ]
 * @param {Array} specifiers The sorting specifier to be tested.
 * @returns {boolean} Returns true if the specifiers are valid, false otherwise.
 */


function _isValidSortingSpecifier(specifiers) {
  var result = true;

  if (specifiers instanceof Array && specifiers.length > 0) {
    for (var i = specifiers.length - 1; i >= 0; i--) {
      var item = specifiers[i];

      if (item instanceof Array) {
        var property = item[0];
        var order = item[1];

        if (_isString(property) && (order === ORDER_ASC || order === ORDER_DESC)) {
          continue;
        }
      }

      result = false;
      break;
    }
  }

  return result;
}
/**
 * Sorts an array based on sorting specifier options.
 * @param {Array} list The that needs to be sorted.
 * @param {Array} specifiers An array of specifiers. Please read isValidSortingSpecifier method definition for further details.
 * @returns {void} No value is returned. The array is sorted in place.
 */


function _sortListBy(list, specifiers) {
  if (list instanceof Array && _isValidSortingSpecifier(specifiers)) {
    var specifierCount = specifiers.length;
    list.sort(function (a, b) {
      // callback name for stack traces...
      var index = 0;

      while (index < specifierCount) {
        var specifier = specifiers[index];
        var property = specifier[0];
        var order = specifier[1] === ORDER_DESC ? -1 : 1;

        var aValue = _getPropertyValue(a, property);

        var bValue = _getPropertyValue(b, property); // @TODO: should we check for the types being compared, like:
        // ~~ if (typeof aValue !== typeof bValue) continue;
        // Not sure because dates, for example, can be correctly compared to numbers...


        if (aValue < bValue) {
          return order * -1;
        }

        if (aValue > bValue) {
          return order * 1;
        }

        if (++index >= specifierCount) {
          return 0;
        }
      }
    });
  } else {
    throw new Error('Invalid Arguments');
  }
}

/***/ }),

/***/ "./classes/index.js":
/*!**************************!*\
  !*** ./classes/index.js ***!
  \**************************/
/*! exports provided: OHIFStudyMetadataSource, MetadataProvider, CommandsManager, HotkeysManager, ImageSet, StudyPrefetcher, StudyLoadingListener, StackLoadingListener, DICOMFileLoadingListener, StudyMetadata, SeriesMetadata, InstanceMetadata, TypeSafeCollection, OHIFError, StudyMetadataSource, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./metadata */ "./classes/metadata/StudyMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StudyMetadata", function() { return _metadata__WEBPACK_IMPORTED_MODULE_0__["StudyMetadata"]; });

/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./metadata */ "./classes/metadata/SeriesMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SeriesMetadata", function() { return _metadata__WEBPACK_IMPORTED_MODULE_1__["SeriesMetadata"]; });

/* harmony import */ var _metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./metadata */ "./classes/metadata/InstanceMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InstanceMetadata", function() { return _metadata__WEBPACK_IMPORTED_MODULE_2__["InstanceMetadata"]; });

/* harmony import */ var _CommandsManager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./CommandsManager */ "./classes/CommandsManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CommandsManager", function() { return _CommandsManager__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _StudyLoadingListener__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./StudyLoadingListener */ "./classes/StudyLoadingListener.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StudyLoadingListener", function() { return _StudyLoadingListener__WEBPACK_IMPORTED_MODULE_4__["StudyLoadingListener"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackLoadingListener", function() { return _StudyLoadingListener__WEBPACK_IMPORTED_MODULE_4__["StackLoadingListener"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DICOMFileLoadingListener", function() { return _StudyLoadingListener__WEBPACK_IMPORTED_MODULE_4__["DICOMFileLoadingListener"]; });

/* harmony import */ var _HotkeysManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HotkeysManager */ "./classes/HotkeysManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HotkeysManager", function() { return _HotkeysManager__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _ImageSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ImageSet */ "./classes/ImageSet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ImageSet", function() { return _ImageSet__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _MetadataProvider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./MetadataProvider */ "./classes/MetadataProvider.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MetadataProvider", function() { return _MetadataProvider__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _OHIFError__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./OHIFError */ "./classes/OHIFError.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHIFError", function() { return _OHIFError__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _OHIFStudyMetadataSource__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OHIFStudyMetadataSource */ "./classes/OHIFStudyMetadataSource.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHIFStudyMetadataSource", function() { return _OHIFStudyMetadataSource__WEBPACK_IMPORTED_MODULE_9__["OHIFStudyMetadataSource"]; });

/* harmony import */ var _StudyMetadataSource__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./StudyMetadataSource */ "./classes/StudyMetadataSource.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StudyMetadataSource", function() { return _StudyMetadataSource__WEBPACK_IMPORTED_MODULE_10__["StudyMetadataSource"]; });

/* harmony import */ var _StudyPrefetcher__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./StudyPrefetcher */ "./classes/StudyPrefetcher.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StudyPrefetcher", function() { return _StudyPrefetcher__WEBPACK_IMPORTED_MODULE_11__["StudyPrefetcher"]; });

/* harmony import */ var _TypeSafeCollection__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./TypeSafeCollection */ "./classes/TypeSafeCollection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TypeSafeCollection", function() { return _TypeSafeCollection__WEBPACK_IMPORTED_MODULE_12__["TypeSafeCollection"]; });













var classes = {
  OHIFStudyMetadataSource: _OHIFStudyMetadataSource__WEBPACK_IMPORTED_MODULE_9__["OHIFStudyMetadataSource"],
  MetadataProvider: _MetadataProvider__WEBPACK_IMPORTED_MODULE_7__["default"],
  CommandsManager: _CommandsManager__WEBPACK_IMPORTED_MODULE_3__["default"],
  HotkeysManager: _HotkeysManager__WEBPACK_IMPORTED_MODULE_5__["default"],
  ImageSet: _ImageSet__WEBPACK_IMPORTED_MODULE_6__["default"],
  StudyPrefetcher: _StudyPrefetcher__WEBPACK_IMPORTED_MODULE_11__["StudyPrefetcher"],
  StudyLoadingListener: _StudyLoadingListener__WEBPACK_IMPORTED_MODULE_4__["StudyLoadingListener"],
  StackLoadingListener: _StudyLoadingListener__WEBPACK_IMPORTED_MODULE_4__["StackLoadingListener"],
  DICOMFileLoadingListener: _StudyLoadingListener__WEBPACK_IMPORTED_MODULE_4__["DICOMFileLoadingListener"],
  StudyMetadata: _metadata__WEBPACK_IMPORTED_MODULE_0__["StudyMetadata"],
  SeriesMetadata: _metadata__WEBPACK_IMPORTED_MODULE_1__["SeriesMetadata"],
  InstanceMetadata: _metadata__WEBPACK_IMPORTED_MODULE_2__["InstanceMetadata"],
  TypeSafeCollection: _TypeSafeCollection__WEBPACK_IMPORTED_MODULE_12__["TypeSafeCollection"],
  OHIFError: _OHIFError__WEBPACK_IMPORTED_MODULE_8__["default"],
  StudyMetadataSource: _StudyMetadataSource__WEBPACK_IMPORTED_MODULE_10__["StudyMetadataSource"]
};
/* harmony default export */ __webpack_exports__["default"] = (classes);

/***/ }),

/***/ "./classes/metadata/InstanceMetadata.js":
/*!**********************************************!*\
  !*** ./classes/metadata/InstanceMetadata.js ***!
  \**********************************************/
/*! exports provided: InstanceMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InstanceMetadata", function() { return InstanceMetadata; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _Metadata__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Metadata */ "./classes/metadata/Metadata.js");
/* harmony import */ var _OHIFError_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../OHIFError.js */ "./classes/OHIFError.js");








function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



/**
 * ATTENTION! This class should never depend on StudyMetadata or SeriesMetadata classes as this could
 * possibly cause circular dependency issues.
 */

var UNDEFINED = 'undefined';
var STRING = 'string';
var InstanceMetadata = /*#__PURE__*/function (_Metadata) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(InstanceMetadata, _Metadata);

  var _super = _createSuper(InstanceMetadata);

  function InstanceMetadata(data, uid) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, InstanceMetadata);

    _this = _super.call(this, data, uid); // Initialize Private Properties

    Object.defineProperties(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default()(_this), {
      _imageId: {
        configurable: true,
        // configurable so that it can be redefined in sub-classes...
        enumerable: false,
        writable: true,
        value: null
      }
    }); // Initialize Public Properties

    _this._definePublicProperties();

    return _this;
  }
  /**
  * Private Methods
  */

  /**
  * Define Public Properties
  * This method should only be called during initialization (inside the class constructor)
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(InstanceMetadata, [{
    key: "_definePublicProperties",
    value: function _definePublicProperties() {
      /**
       * Property: this.SOPInstanceUID
       * Same as this.getSOPInstanceUID()
       * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:
       * sopInstanceCollection.findBy({
       *   SOPInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'
       * });
       */
      Object.defineProperty(this, 'SOPInstanceUID', {
        configurable: false,
        enumerable: false,
        get: function get() {
          return this.getSOPInstanceUID();
        }
      });
    }
    /**
    * Public Methods
    */

    /**
    * Returns the StudyInstanceUID of the current instance. This method is basically a shorthand the full "getTagValue" method call.
    */

  }, {
    key: "getStudyInstanceUID",
    value: function getStudyInstanceUID() {
      return this.getTagValue('StudyInstanceUID', null);
    }
    /**
    * Returns the SeriesInstanceUID of the current instance. This method is basically a shorthand the full "getTagValue" method call.
    */

  }, {
    key: "getSeriesInstanceUID",
    value: function getSeriesInstanceUID() {
      return this.getTagValue('SeriesInstanceUID', null);
    }
    /**
    * Returns the SOPInstanceUID of the current instance.
    */

  }, {
    key: "getSOPInstanceUID",
    value: function getSOPInstanceUID() {
      return this.getTagValue('SOPInstanceUID', null);
    } // @TODO: Improve this... (E.g.: blob data)

  }, {
    key: "getStringValue",
    value: function getStringValue(tagOrProperty, index, defaultValue) {
      var value = this.getTagValue(tagOrProperty, defaultValue);

      if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value) !== STRING && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value) !== UNDEFINED) {
        value = value.toString();
      }

      return InstanceMetadata.getIndexedValue(value, index, defaultValue);
    } // @TODO: Improve this... (E.g.: blob data)

  }, {
    key: "getFloatValue",
    value: function getFloatValue(tagOrProperty, index, defaultValue) {
      var value = this.getTagValue(tagOrProperty, defaultValue);
      value = InstanceMetadata.getIndexedValue(value, index, defaultValue);

      if (value instanceof Array) {
        value.forEach(function (val, idx) {
          value[idx] = parseFloat(val);
        });
        return value;
      }

      return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value) === STRING ? parseFloat(value) : value;
    } // @TODO: Improve this... (E.g.: blob data)

  }, {
    key: "getIntValue",
    value: function getIntValue(tagOrProperty, index, defaultValue) {
      var value = this.getTagValue(tagOrProperty, defaultValue);
      value = InstanceMetadata.getIndexedValue(value, index, defaultValue);

      if (value instanceof Array) {
        value.forEach(function (val, idx) {
          value[idx] = parseFloat(val);
        });
        return value;
      }

      return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value) === STRING ? parseInt(value) : value;
    }
    /**
    * This function should be overriden by specialized classes in order to allow client libraries or viewers to take advantage of the Study Metadata API.
    */

  }, {
    key: "getTagValue",
    value: function getTagValue(tagOrProperty, defaultValue) {
      /**
       * Please override this method on a specialized class.
       */
      throw new _OHIFError_js__WEBPACK_IMPORTED_MODULE_8__["default"]('InstanceMetadata::getTagValue is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example');
    }
    /**
    * Compares the current instance with another one.
    * @param {InstanceMetadata} instance An instance of the InstanceMetadata class.
    * @returns {boolean} Returns true if both instances refer to the same instance.
    */

  }, {
    key: "equals",
    value: function equals(instance) {
      var self = this;
      return instance === self || instance instanceof InstanceMetadata && instance.getSOPInstanceUID() === self.getSOPInstanceUID();
    }
    /**
    * Check if the tagOrProperty exists
    * @param  {String} tagOrProperty tag or property be checked
    * @return {Boolean}   True if the tag or property exists or false if doesn't
    */

  }, {
    key: "tagExists",
    value: function tagExists(tagOrProperty) {
      /**
       * Please override this method
       */
      throw new _OHIFError_js__WEBPACK_IMPORTED_MODULE_8__["default"]('InstanceMetadata::tagExists is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example');
    }
    /**
    * Get custom image id of a sop instance
    * @return {Any}          sop instance image id
    */

  }, {
    key: "getImageId",
    value: function getImageId(frame) {
      /**
       * Please override this method
       */
      throw new _OHIFError_js__WEBPACK_IMPORTED_MODULE_8__["default"]('InstanceMetadata::getImageId is not overriden. Please, override it in a specialized class. See OHIFInstanceMetadata for example');
    }
    /**
    * Static Methods
    */

    /**
    * Get an value based that can be index based. This function is called by all getters. See above functions.
    *     - If value is a String and has indexes:
    *         - If undefined index: returns an array of the split values.
    *         - If defined index:
    *             - If invalid: returns defaultValue
    *             - If valid: returns the indexed value
    *      - If value is not a String, returns default value.
    */

  }], [{
    key: "getIndexedValue",
    value: function getIndexedValue(value, index, defaultValue) {
      var result = defaultValue;

      if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(value) === STRING) {
        var hasIndexValues = value.indexOf('\\') !== -1;
        result = value;

        if (hasIndexValues) {
          var splitValues = value.split('\\');

          if (_Metadata__WEBPACK_IMPORTED_MODULE_7__["Metadata"].isValidIndex(index)) {
            var indexedValue = splitValues[index];
            result = _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(indexedValue) !== STRING ? defaultValue : indexedValue;
          } else {
            result = splitValues;
          }
        }
      }

      return result;
    }
  }]);

  return InstanceMetadata;
}(_Metadata__WEBPACK_IMPORTED_MODULE_7__["Metadata"]);

/***/ }),

/***/ "./classes/metadata/Metadata.js":
/*!**************************************!*\
  !*** ./classes/metadata/Metadata.js ***!
  \**************************************/
/*! exports provided: Metadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Metadata", function() { return Metadata; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);




/**
 * Constants
 */
var STRING = 'string';
var NUMBER = 'number';
var FUNCTION = 'function';
var OBJECT = 'object';
/**
 * Class Definition
 */

var Metadata = /*#__PURE__*/function () {
  /**
  * Constructor and Instance Methods
  */
  function Metadata(data, uid) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Metadata);

    // Define the main "_data" private property as an immutable property.
    // IMPORTANT: This property can only be set during instance construction.
    Object.defineProperty(this, '_data', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: data
    }); // Define the main "_uid" private property as an immutable property.
    // IMPORTANT: This property can only be set during instance construction.

    Object.defineProperty(this, '_uid', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: uid
    }); // Define "_custom" properties as an immutable property.
    // IMPORTANT: This property can only be set during instance construction.

    Object.defineProperty(this, '_custom', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: Object.create(null)
    });
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Metadata, [{
    key: "getData",
    value: function getData() {
      return this._data;
    }
  }, {
    key: "getDataProperty",
    value: function getDataProperty(propertyName) {
      var propertyValue;
      var _data = this._data;

      if (_data instanceof Object || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(_data) === OBJECT && _data !== null) {
        propertyValue = _data[propertyName];
      }

      return propertyValue;
    }
    /**
    * Get unique object ID
    */

  }, {
    key: "getObjectID",
    value: function getObjectID() {
      return this._uid;
    }
    /**
    * Set custom attribute value
    * @param {String} attribute Custom attribute name
    * @param {Any} value     Custom attribute value
    */

  }, {
    key: "setCustomAttribute",
    value: function setCustomAttribute(attribute, value) {
      this._custom[attribute] = value;
    }
    /**
    * Get custom attribute value
    * @param  {String} attribute Custom attribute name
    * @return {Any}              Custom attribute value
    */

  }, {
    key: "getCustomAttribute",
    value: function getCustomAttribute(attribute) {
      return this._custom[attribute];
    }
    /**
    * Check if a custom attribute exists
    * @param  {String} attribute Custom attribute name
    * @return {Boolean}          True if custom attribute exists or false if not
    */

  }, {
    key: "customAttributeExists",
    value: function customAttributeExists(attribute) {
      return attribute in this._custom;
    }
    /**
    * Set custom attributes in batch mode.
    * @param {Object} attributeMap An object whose own properties will be used as custom attributes.
    */

  }, {
    key: "setCustomAttributes",
    value: function setCustomAttributes(attributeMap) {
      var _hasOwn = Object.prototype.hasOwnProperty;
      var _custom = this._custom;

      for (var attribute in attributeMap) {
        if (_hasOwn.call(attributeMap, attribute)) {
          _custom[attribute] = attributeMap[attribute];
        }
      }
    }
    /**
    * Static Methods
    */

  }], [{
    key: "isValidUID",
    value: function isValidUID(uid) {
      return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(uid) === STRING && uid.length > 0;
    }
  }, {
    key: "isValidIndex",
    value: function isValidIndex(index) {
      return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(index) === NUMBER && index >= 0 && (index | 0) === index;
    }
  }, {
    key: "isValidCallback",
    value: function isValidCallback(callback) {
      return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(callback) === FUNCTION;
    }
  }]);

  return Metadata;
}();

/***/ }),

/***/ "./classes/metadata/OHIFInstanceMetadata.js":
/*!**************************************************!*\
  !*** ./classes/metadata/OHIFInstanceMetadata.js ***!
  \**************************************************/
/*! exports provided: OHIFInstanceMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OHIFInstanceMetadata", function() { return OHIFInstanceMetadata; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _InstanceMetadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./InstanceMetadata */ "./classes/metadata/InstanceMetadata.js");
/* harmony import */ var _utils_getImageId__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/getImageId */ "./utils/getImageId.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var OHIFInstanceMetadata = /*#__PURE__*/function (_InstanceMetadata) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(OHIFInstanceMetadata, _InstanceMetadata);

  var _super = _createSuper(OHIFInstanceMetadata);

  /**
  * @param {Object} Instance object.
  */
  function OHIFInstanceMetadata(data, series, study, uid) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, OHIFInstanceMetadata);

    _this = _super.call(this, data, uid);

    _this.init(series, study);

    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(OHIFInstanceMetadata, [{
    key: "init",
    value: function init(series, study) {
      var instance = this.getData(); // Initialize Private Properties

      Object.defineProperties(this, {
        _sopInstanceUID: {
          configurable: false,
          enumerable: false,
          writable: false,
          value: instance.SOPInstanceUID
        },
        _study: {
          configurable: false,
          enumerable: false,
          writable: false,
          value: study
        },
        _series: {
          configurable: false,
          enumerable: false,
          writable: false,
          value: series
        },
        _instance: {
          configurable: false,
          enumerable: false,
          writable: false,
          value: instance
        },
        _cache: {
          configurable: false,
          enumerable: false,
          writable: false,
          value: Object.create(null)
        }
      });
    } // Override

  }, {
    key: "getTagValue",
    value: function getTagValue(tagOrProperty, defaultValue, bypassCache) {
      // check if this property has been cached...
      if (tagOrProperty in this._cache && bypassCache !== true) {
        return this._cache[tagOrProperty];
      }

      var instanceData = this._instance.metadata; // Search property value in the whole study metadata chain...

      var rawValue;

      if (tagOrProperty in instanceData) {
        rawValue = instanceData[tagOrProperty];
      } else if (tagOrProperty in this._series) {
        rawValue = this._series[tagOrProperty];
      } else if (tagOrProperty in this._study) {
        rawValue = this._study[tagOrProperty];
      }

      if (rawValue !== void 0) {
        // if rawValue value is not undefined, cache result...
        this._cache[tagOrProperty] = rawValue;
        return rawValue;
      }

      return defaultValue;
    } // Override

  }, {
    key: "tagExists",
    value: function tagExists(tagOrProperty) {
      return tagOrProperty in this._instance.metadata || tagOrProperty in this._series || tagOrProperty in this._study;
    } // Override

  }, {
    key: "getImageId",
    value: function getImageId(frame, thumbnail) {
      // If _imageID is not cached, create it
      if (this._imageId === null) {
        this._imageId = Object(_utils_getImageId__WEBPACK_IMPORTED_MODULE_6__["default"])(this.getData(), frame, thumbnail);
      }

      return this._imageId;
    }
  }]);

  return OHIFInstanceMetadata;
}(_InstanceMetadata__WEBPACK_IMPORTED_MODULE_5__["InstanceMetadata"]);

/***/ }),

/***/ "./classes/metadata/OHIFSeriesMetadata.js":
/*!************************************************!*\
  !*** ./classes/metadata/OHIFSeriesMetadata.js ***!
  \************************************************/
/*! exports provided: OHIFSeriesMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OHIFSeriesMetadata", function() { return OHIFSeriesMetadata; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _SeriesMetadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SeriesMetadata */ "./classes/metadata/SeriesMetadata.js");
/* harmony import */ var _OHIFInstanceMetadata__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./OHIFInstanceMetadata */ "./classes/metadata/OHIFInstanceMetadata.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var OHIFSeriesMetadata = /*#__PURE__*/function (_SeriesMetadata) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(OHIFSeriesMetadata, _SeriesMetadata);

  var _super = _createSuper(OHIFSeriesMetadata);

  /**
  * @param {Object} Series object.
  */
  function OHIFSeriesMetadata(data, study, uid) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, OHIFSeriesMetadata);

    _this = _super.call(this, data, uid);

    _this.init(study);

    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(OHIFSeriesMetadata, [{
    key: "init",
    value: function init(study) {
      var _this2 = this;

      var series = this.getData(); // define "_seriesInstanceUID" protected property...

      Object.defineProperty(this, '_seriesInstanceUID', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: series.SeriesInstanceUID
      }); // populate internal list of instances...

      series.instances.forEach(function (instance) {
        _this2.addInstance(new _OHIFInstanceMetadata__WEBPACK_IMPORTED_MODULE_6__["OHIFInstanceMetadata"](instance, series, study));
      });
    }
  }]);

  return OHIFSeriesMetadata;
}(_SeriesMetadata__WEBPACK_IMPORTED_MODULE_5__["SeriesMetadata"]);

/***/ }),

/***/ "./classes/metadata/OHIFStudyMetadata.js":
/*!***********************************************!*\
  !*** ./classes/metadata/OHIFStudyMetadata.js ***!
  \***********************************************/
/*! exports provided: OHIFStudyMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OHIFStudyMetadata", function() { return OHIFStudyMetadata; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _StudyMetadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./StudyMetadata */ "./classes/metadata/StudyMetadata.js");
/* harmony import */ var _OHIFSeriesMetadata__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./OHIFSeriesMetadata */ "./classes/metadata/OHIFSeriesMetadata.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var OHIFStudyMetadata = /*#__PURE__*/function (_StudyMetadata) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(OHIFStudyMetadata, _StudyMetadata);

  var _super = _createSuper(OHIFStudyMetadata);

  /**
  * @param {Object} Study object.
  */
  function OHIFStudyMetadata(data, uid) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, OHIFStudyMetadata);

    _this = _super.call(this, data, uid);

    _this.init();

    return _this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(OHIFStudyMetadata, [{
    key: "init",
    value: function init() {
      var _this2 = this;

      var study = this.getData(); // define "_studyInstanceUID" protected property

      Object.defineProperty(this, '_studyInstanceUID', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: study.StudyInstanceUID
      }); // populate internal list of series

      study.series.forEach(function (series) {
        _this2.addSeries(new _OHIFSeriesMetadata__WEBPACK_IMPORTED_MODULE_6__["OHIFSeriesMetadata"](series, study));
      });
    }
  }]);

  return OHIFStudyMetadata;
}(_StudyMetadata__WEBPACK_IMPORTED_MODULE_5__["StudyMetadata"]);

/***/ }),

/***/ "./classes/metadata/SeriesMetadata.js":
/*!********************************************!*\
  !*** ./classes/metadata/SeriesMetadata.js ***!
  \********************************************/
/*! exports provided: SeriesMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SeriesMetadata", function() { return SeriesMetadata; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _Metadata__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Metadata */ "./classes/metadata/Metadata.js");
/* harmony import */ var _InstanceMetadata__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./InstanceMetadata */ "./classes/metadata/InstanceMetadata.js");







function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }



var SeriesMetadata = /*#__PURE__*/function (_Metadata) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(SeriesMetadata, _Metadata);

  var _super = _createSuper(SeriesMetadata);

  function SeriesMetadata(data, uid) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SeriesMetadata);

    _this = _super.call(this, data, uid); // Initialize Private Properties

    Object.defineProperties(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), {
      _seriesInstanceUID: {
        configurable: true,
        // configurable so that it can be redefined in sub-classes...
        enumerable: false,
        writable: true,
        value: null
      },
      _instances: {
        configurable: false,
        enumerable: false,
        writable: false,
        value: []
      },
      _firstInstance: {
        configurable: false,
        enumerable: false,
        writable: true,
        value: null
      }
    }); // Initialize Public Properties

    _this._definePublicProperties();

    return _this;
  }
  /**
  * Private Methods
  */

  /**
  * Define Public Properties
  * This method should only be called during initialization (inside the class constructor)
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(SeriesMetadata, [{
    key: "_definePublicProperties",
    value: function _definePublicProperties() {
      /**
       * Property: this.seriesInstanceUID
       * Same as this.getSeriesInstanceUID()
       * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:
       * seriesCollection.findBy({
       *   seriesInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'
       * });
       */
      Object.defineProperty(this, 'seriesInstanceUID', {
        configurable: false,
        enumerable: false,
        get: function get() {
          return this.getSeriesInstanceUID();
        }
      });
    }
    /**
    * Public Methods
    */

    /**
    * Returns the SeriesInstanceUID of the current series.
    */

  }, {
    key: "getSeriesInstanceUID",
    value: function getSeriesInstanceUID() {
      return this._seriesInstanceUID;
    }
    /**
    * Append an instance to the current series.
    * @param {InstanceMetadata} instance The instance to be added to the current series.
    * @returns {boolean} Returns true on success, false otherwise.
    */

  }, {
    key: "addInstance",
    value: function addInstance(instance) {
      var result = false;

      if (instance instanceof _InstanceMetadata__WEBPACK_IMPORTED_MODULE_7__["InstanceMetadata"] && this.getInstanceByUID(instance.getSOPInstanceUID()) === void 0) {
        this._instances.push(instance);

        result = true;
      }

      return result;
    }
    /**
    * Get the first instance of the current series retaining a consistent result across multiple calls.
    * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.
    */

  }, {
    key: "getFirstInstance",
    value: function getFirstInstance() {
      var instance = this._firstInstance;

      if (!(instance instanceof _InstanceMetadata__WEBPACK_IMPORTED_MODULE_7__["InstanceMetadata"])) {
        instance = null;
        var found = this.getInstanceByIndex(0);

        if (found instanceof _InstanceMetadata__WEBPACK_IMPORTED_MODULE_7__["InstanceMetadata"]) {
          this._firstInstance = found;
          instance = found;
        }
      }

      return instance;
    }
    /**
    * Find an instance by index.
    * @param {number} index An integer representing a list index.
    * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.
    */

  }, {
    key: "getInstanceByIndex",
    value: function getInstanceByIndex(index) {
      var found; // undefined by default...

      if (_Metadata__WEBPACK_IMPORTED_MODULE_6__["Metadata"].isValidIndex(index)) {
        found = this._instances[index];
      }

      return found;
    }
    /**
    * Find an instance by SOPInstanceUID.
    * @param {string} uid An UID string.
    * @returns {InstanceMetadata} Returns a InstanceMetadata instance when found or undefined otherwise.
    */

  }, {
    key: "getInstanceByUID",
    value: function getInstanceByUID(uid) {
      var found; // undefined by default...

      if (_Metadata__WEBPACK_IMPORTED_MODULE_6__["Metadata"].isValidUID(uid)) {
        found = this._instances.find(function (instance) {
          return instance.getSOPInstanceUID() === uid;
        });
      }

      return found;
    }
    /**
    * Retrieve the number of instances within the current series.
    * @returns {number} The number of instances in the current series.
    */

  }, {
    key: "getInstanceCount",
    value: function getInstanceCount() {
      return this._instances.length;
    }
    /**
    * Invokes the supplied callback for each instance in the current series passing
    * two arguments: instance (an InstanceMetadata instance) and index (the integer
    * index of the instance within the current series)
    * @param {function} callback The callback function which will be invoked for each instance in the series.
    * @returns {undefined} Nothing is returned.
    */

  }, {
    key: "forEachInstance",
    value: function forEachInstance(callback) {
      if (_Metadata__WEBPACK_IMPORTED_MODULE_6__["Metadata"].isValidCallback(callback)) {
        this._instances.forEach(function (instance, index) {
          callback.call(null, instance, index);
        });
      }
    }
    /**
    * Find the index of an instance inside the series.
    * @param {InstanceMetadata} instance An instance of the SeriesMetadata class.
    * @returns {number} The index of the instance inside the series or -1 if not found.
    */

  }, {
    key: "indexOfInstance",
    value: function indexOfInstance(instance) {
      return this._instances.indexOf(instance);
    }
    /**
    * Search the associated instances using the supplied callback as criteria. The callback is passed
    * two arguments: instance (a InstanceMetadata instance) and index (the integer
    * index of the instance within its series)
    * @param {function} callback The callback function which will be invoked for each instance.
    * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it
    *                                     returns a InstanceMetadata. "undefined" is returned otherwise
    */

  }, {
    key: "findInstance",
    value: function findInstance(callback) {
      if (_Metadata__WEBPACK_IMPORTED_MODULE_6__["Metadata"].isValidCallback(callback)) {
        return this._instances.find(function (instance, index) {
          return callback.call(null, instance, index);
        });
      }
    }
    /**
    * Compares the current series with another one.
    * @param {SeriesMetadata} series An instance of the SeriesMetadata class.
    * @returns {boolean} Returns true if both instances refer to the same series.
    */

  }, {
    key: "equals",
    value: function equals(series) {
      var self = this;
      return series === self || series instanceof SeriesMetadata && series.getSeriesInstanceUID() === self.getSeriesInstanceUID();
    }
  }]);

  return SeriesMetadata;
}(_Metadata__WEBPACK_IMPORTED_MODULE_6__["Metadata"]);

/***/ }),

/***/ "./classes/metadata/StudyMetadata.js":
/*!*******************************************!*\
  !*** ./classes/metadata/StudyMetadata.js ***!
  \*******************************************/
/*! exports provided: StudyMetadata */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StudyMetadata", function() { return StudyMetadata; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ "../node_modules/@babel/runtime/helpers/assertThisInitialized.js");
/* harmony import */ var _babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./../../DICOMWeb */ "./DICOMWeb/index.js");
/* harmony import */ var _ImageSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./../ImageSet */ "./classes/ImageSet.js");
/* harmony import */ var _InstanceMetadata__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./InstanceMetadata */ "./classes/metadata/InstanceMetadata.js");
/* harmony import */ var _Metadata__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Metadata */ "./classes/metadata/Metadata.js");
/* harmony import */ var _OHIFError__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../OHIFError */ "./classes/OHIFError.js");
/* harmony import */ var _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./SeriesMetadata */ "./classes/metadata/SeriesMetadata.js");
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _utils_isImage__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../utils/isImage */ "./utils/isImage.js");
/* harmony import */ var _utils_isDisplaySetReconstructable__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../utils/isDisplaySetReconstructable */ "./utils/isDisplaySetReconstructable.js");
/* harmony import */ var _utils_isLowPriorityModality__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../utils/isLowPriorityModality */ "./utils/isLowPriorityModality.js");
/* harmony import */ var _utils_getImageSetCalculatedSpacings__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../utils/getImageSetCalculatedSpacings */ "./utils/getImageSetCalculatedSpacings.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../log */ "./log.js");







function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

// - createStacks





 // - createStacks

 // - createStacks






var StudyMetadata = /*#__PURE__*/function (_Metadata) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_3___default()(StudyMetadata, _Metadata);

  var _super = _createSuper(StudyMetadata);

  function StudyMetadata(data, uid) {
    var _this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, StudyMetadata);

    _this = _super.call(this, data, uid); // Initialize Private Properties

    Object.defineProperties(_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default()(_this), {
      _studyInstanceUID: {
        configurable: true,
        // configurable so that it can be redefined in sub-classes...
        enumerable: false,
        writable: true,
        value: null
      },
      _series: {
        configurable: false,
        enumerable: false,
        writable: false,
        value: []
      },
      _displaySets: {
        configurable: false,
        enumerable: false,
        writable: false,
        value: []
      },
      _derivedDisplaySets: {
        configurable: false,
        enumerable: false,
        writable: false,
        value: []
      },
      _firstSeries: {
        configurable: false,
        enumerable: false,
        writable: true,
        value: null
      },
      _firstInstance: {
        configurable: false,
        enumerable: false,
        writable: true,
        value: null
      }
    }); // Initialize Public Properties

    _this._definePublicProperties();

    return _this;
  }
  /**
  * Private Methods
  */

  /**
  * Define Public Properties
  * This method should only be called during initialization (inside the class constructor)
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(StudyMetadata, [{
    key: "_definePublicProperties",
    value: function _definePublicProperties() {
      /**
       * Property: this.studyInstanceUID
       * Same as this.getStudyInstanceUID()
       * It's specially useful in contexts where a method call is not suitable like in search criteria. For example:
       * studyCollection.findBy({
       *   studyInstanceUID: '1.2.3.4.5.6.77777.8888888.99999999999.0'
       * });
       */
      Object.defineProperty(this, 'studyInstanceUID', {
        configurable: false,
        enumerable: false,
        get: function get() {
          return this.getStudyInstanceUID();
        }
      });
    }
    /**
    * Public Methods
    */

    /**
    * Getter for displaySets
    * @return {Array} Array of display set object
    */

  }, {
    key: "getDisplaySets",
    value: function getDisplaySets() {
      return this._displaySets.slice();
    }
    /**
    * Split a series metadata object into display sets
    * @param {Array} sopClassHandlerModules List of SOP Class Modules
    * @param {SeriesMetadata} series The series metadata object from which the display sets will be created
    * @param {Array} [givenDisplaySets] An optional list to which the display sets will be appended
    * @returns {Array} The list of display sets created for the given series object
    */

  }, {
    key: "_createDisplaySetsForSeries",
    value: function _createDisplaySetsForSeries(sopClassHandlerModules, series, givenDisplaySets) {
      var study = this;
      var displaySets = Array.isArray(givenDisplaySets) ? givenDisplaySets : [];
      var anyInstances = series.getInstanceCount() > 0;

      if (!anyInstances) {
        return;
      }

      var sopClassUIDs = getSopClassUIDs(series);

      if (sopClassHandlerModules && sopClassHandlerModules.length > 0) {
        var displaySet = _getDisplaySetFromSopClassModule(sopClassHandlerModules, series, study, sopClassUIDs);

        if (displaySet) {
          displaySet.sopClassModule = true;
          displaySet.isDerived ? this._addDerivedDisplaySet(displaySet) : displaySets.push(displaySet);
          return displaySets;
        }
      } // WE NEED A BETTER WAY TO NOTE THAT THIS IS THE DEFAULT BEHAVIOR FOR LOADING
      // A DISPLAY SET IF THERE IS NO MATCHING SOP CLASS PLUGIN
      // Search through the instances (InstanceMetadata object) of this series
      // Split Multi-frame instances and Single-image modalities
      // into their own specific display sets. Place the rest of each
      // series into another display set.


      var stackableInstances = [];
      series.forEachInstance(function (instance) {
        // All imaging modalities must have a valid value for SOPClassUID (x00080016) or Rows (x00280010)
        if (!Object(_utils_isImage__WEBPACK_IMPORTED_MODULE_13__["isImage"])(instance.getTagValue('SOPClassUID')) && !instance.getTagValue('Rows')) {
          _log__WEBPACK_IMPORTED_MODULE_17__["default"].warn('DICOM images doesn\'nt have valid tag x00080016 or x00280010');
          return;
        }

        var displaySet;

        if (isMultiFrame(instance)) {
          displaySet = makeDisplaySet(series, [instance]);
          displaySet.setAttributes({
            sopClassUIDs: sopClassUIDs,
            isClip: true,
            SeriesInstanceUID: series.getSeriesInstanceUID(),
            StudyInstanceUID: study.getStudyInstanceUID(),
            // Include the study instance UID for drag/drop purposes
            numImageFrames: instance.getTagValue('NumberOfFrames'),
            // Override the default value of instances.length
            InstanceNumber: instance.getTagValue('InstanceNumber'),
            // Include the instance number
            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime') // Include the acquisition datetime

          });
          displaySets.push(displaySet);
        } else if (isSingleImageModality(instance.Modality)) {
          displaySet = makeDisplaySet(series, [instance]);
          displaySet.setAttributes({
            sopClassUIDs: sopClassUIDs,
            StudyInstanceUID: study.getStudyInstanceUID(),
            // Include the study instance UID
            SeriesInstanceUID: series.getSeriesInstanceUID(),
            InstanceNumber: instance.getTagValue('InstanceNumber'),
            // Include the instance number
            AcquisitionDatetime: instance.getTagValue('AcquisitionDateTime') // Include the acquisition datetime

          });
          displaySets.push(displaySet);
        } else {
          stackableInstances.push(instance);
        }
      });

      if (stackableInstances.length) {
        var _displaySet = makeDisplaySet(series, stackableInstances);

        _displaySet.setAttribute('StudyInstanceUID', study.getStudyInstanceUID());

        _displaySet.setAttributes({
          sopClassUIDs: sopClassUIDs
        });

        displaySets.push(_displaySet);
      }

      return displaySets;
    }
    /**
    * Adds the displaySets to the studies list of derived displaySets.
    * @param {object} displaySet The displaySet to append to the derived displaysets list.
    */

  }, {
    key: "_addDerivedDisplaySet",
    value: function _addDerivedDisplaySet(displaySet) {
      this._derivedDisplaySets.push(displaySet); // --> Perhaps that logic should exist in the extension sop class handler and this be a dumb list.
      // TODO -> Get x Modality by referencedSeriesInstanceUid, FoR, etc.

    }
    /**
    * Returns a list of derived datasets in the study, filtered by the given filter.
    * @param {object} filter An object containing search filters
    * @param {object} filter.Modality
    * @param {object} filter.referencedSeriesInstanceUID
    * @param {object} filter.referencedFrameOfReferenceUID
    * @return {Array} filtered derived display sets
    */

  }, {
    key: "getDerivedDatasets",
    value: function getDerivedDatasets(filter) {
      var Modality = filter.Modality,
          referencedSeriesInstanceUID = filter.referencedSeriesInstanceUID,
          referencedFrameOfReferenceUID = filter.referencedFrameOfReferenceUID;
      var filteredDerivedDisplaySets = this._derivedDisplaySets;

      if (Modality) {
        filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(function (displaySet) {
          return displaySet.Modality === Modality;
        });
      }

      if (referencedSeriesInstanceUID) {
        filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(function (displaySet) {
          if (!displaySet.metadata.ReferencedSeriesSequence) {
            return false;
          }

          var ReferencedSeriesSequence = Array.isArray(displaySet.metadata.ReferencedSeriesSequence) ? displaySet.metadata.ReferencedSeriesSequence : [displaySet.metadata.ReferencedSeriesSequence];
          return ReferencedSeriesSequence.some(function (ReferencedSeries) {
            return ReferencedSeries.SeriesInstanceUID === referencedSeriesInstanceUID;
          });
        });
      }

      if (referencedFrameOfReferenceUID) {
        filteredDerivedDisplaySets = filteredDerivedDisplaySets.filter(function (displaySet) {
          return displaySet.ReferencedFrameOfReferenceUID === ReferencedFrameOfReferenceUID;
        });
      }

      return filteredDerivedDisplaySets;
    }
    /**
    * Creates a set of displaySets to be placed in the Study Metadata
    * The displaySets that appear in the Study Metadata must represent
    * imaging modalities. A series may be split into one or more displaySets.
    *
    * Furthermore, for drag/drop functionality,
    * it is easiest if the stack objects also contain information about
    * which study they are linked to.
    *
    * @param {StudyMetadata} study The study instance metadata to be used
    * @returns {Array} An array of series to be placed in the Study Metadata
    */

  }, {
    key: "createDisplaySets",
    value: function createDisplaySets(sopClassHandlerModules) {
      var _this2 = this;

      var displaySets = [];
      var anyDisplaySets = this.getSeriesCount();

      if (!anyDisplaySets) {
        return displaySets;
      } // Loop through the series (SeriesMetadata)


      this.forEachSeries(function (series) {
        return void _this2._createDisplaySetsForSeries(sopClassHandlerModules, series, displaySets);
      });
      return sortDisplaySetList(displaySets);
    }
  }, {
    key: "sortDisplaySets",
    value: function sortDisplaySets() {
      sortDisplaySetList(this._displaySets);
    }
    /**
    * Method to append display sets from a given series to the internal list of display sets
    * @param {Array} sopClassHandlerModules A list of SOP Class Handler Modules
    * @param {SeriesMetadata} series The series metadata object from which the display sets will be created
    * @returns {boolean} Returns true on success or false on failure (e.g., the series does not belong to this study)
    */

  }, {
    key: "createAndAddDisplaySetsForSeries",
    value: function createAndAddDisplaySetsForSeries(sopClassHandlerModules, series) {
      if (this.containsSeries(series)) {
        this.setDisplaySets(this._createDisplaySetsForSeries(sopClassHandlerModules, series));
        return true;
      }

      return false;
    }
    /**
    * Set display sets
    * @param {Array} displaySets Array of display sets (ImageSet[])
    */

  }, {
    key: "setDisplaySets",
    value: function setDisplaySets(displaySets) {
      var _this3 = this;

      if (Array.isArray(displaySets) && displaySets.length > 0) {
        displaySets.forEach(function (displaySet) {
          return _this3.addDisplaySet(displaySet);
        });
        this.sortDisplaySets();
      }
    }
    /**
    * Add a single display set to the list
    * @param {Object} displaySet Display set object
    * @returns {boolean} True on success, false on failure.
    */

  }, {
    key: "addDisplaySet",
    value: function addDisplaySet(displaySet) {
      if (displaySet instanceof _ImageSet__WEBPACK_IMPORTED_MODULE_7__["default"] || displaySet.sopClassModule) {
        this._displaySets.push(displaySet);

        return true;
      }

      return false;
    }
    /**
    * Invokes the supplied callback for each display set in the current study passing
    * two arguments: display set (a ImageSet instance) and index (the integer
    * index of the display set within the current study)
    * @param {function} callback The callback function which will be invoked for each display set instance.
    * @returns {undefined} Nothing is returned.
    */

  }, {
    key: "forEachDisplaySet",
    value: function forEachDisplaySet(callback) {
      if (_Metadata__WEBPACK_IMPORTED_MODULE_9__["Metadata"].isValidCallback(callback)) {
        this._displaySets.forEach(function (displaySet, index) {
          callback.call(null, displaySet, index);
        });
      }
    }
    /**
    * Search the associated display sets using the supplied callback as criteria. The callback is passed
    * two arguments: display set (an ImageSet instance) and index (the integer
    * index of the display set within the current study)
    * @param {function} callback The callback function which will be invoked for each display set instance.
    * @returns {undefined} Nothing is returned.
    */

  }, {
    key: "findDisplaySet",
    value: function findDisplaySet(callback) {
      if (_Metadata__WEBPACK_IMPORTED_MODULE_9__["Metadata"].isValidCallback(callback)) {
        return this._displaySets.find(function (displaySet, index) {
          return callback.call(null, displaySet, index);
        });
      }
    }
    /**
    * Retrieve the number of display sets within the current study.
    * @returns {number} The number of display sets in the current study.
    */

  }, {
    key: "getDisplaySetCount",
    value: function getDisplaySetCount() {
      return this._displaySets.length;
    }
    /**
    * Returns the StudyInstanceUID of the current study.
    */

  }, {
    key: "getStudyInstanceUID",
    value: function getStudyInstanceUID() {
      return this._studyInstanceUID;
    }
    /**
    * Getter for series
    * @return {Array} Array of SeriesMetadata object
    */

  }, {
    key: "getSeries",
    value: function getSeries() {
      return this._series.slice();
    }
    /**
    * Append a series to the current study.
    * @param {SeriesMetadata} series The series to be added to the current study.
    * @returns {boolean} Returns true on success, false otherwise.
    */

  }, {
    key: "addSeries",
    value: function addSeries(series) {
      var result = false;

      if (series instanceof _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__["SeriesMetadata"] && this.getSeriesByUID(series.getSeriesInstanceUID()) === void 0) {
        this._series.push(series);

        result = true;
      }

      return result;
    }
    /**
    * Find a series by index.
    * @param {number} index An integer representing a list index.
    * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.
    */

  }, {
    key: "getSeriesByIndex",
    value: function getSeriesByIndex(index) {
      var found; // undefined by default...

      if (_Metadata__WEBPACK_IMPORTED_MODULE_9__["Metadata"].isValidIndex(index)) {
        found = this._series[index];
      }

      return found;
    }
    /**
    * Find a series by SeriesInstanceUID.
    * @param {string} uid An UID string.
    * @returns {SeriesMetadata} Returns a SeriesMetadata instance when found or undefined otherwise.
    */

  }, {
    key: "getSeriesByUID",
    value: function getSeriesByUID(uid) {
      var found; // undefined by default...

      if (_Metadata__WEBPACK_IMPORTED_MODULE_9__["Metadata"].isValidUID(uid)) {
        found = this._series.find(function (series) {
          return series.getSeriesInstanceUID() === uid;
        });
      }

      return found;
    }
  }, {
    key: "containsSeries",
    value: function containsSeries(series) {
      return series instanceof _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__["SeriesMetadata"] && this._series.indexOf(series) >= 0;
    }
    /**
    * Retrieve the number of series within the current study.
    * @returns {number} The number of series in the current study.
    */

  }, {
    key: "getSeriesCount",
    value: function getSeriesCount() {
      return this._series.length;
    }
    /**
    * Retrieve the number of instances within the current study.
    * @returns {number} The number of instances in the current study.
    */

  }, {
    key: "getInstanceCount",
    value: function getInstanceCount() {
      return this._series.reduce(function (sum, series) {
        return sum + series.getInstanceCount();
      }, 0);
    }
    /**
    * Invokes the supplied callback for each series in the current study passing
    * two arguments: series (a SeriesMetadata instance) and index (the integer
    * index of the series within the current study)
    * @param {function} callback The callback function which will be invoked for each series instance.
    * @returns {undefined} Nothing is returned.
    */

  }, {
    key: "forEachSeries",
    value: function forEachSeries(callback) {
      if (_Metadata__WEBPACK_IMPORTED_MODULE_9__["Metadata"].isValidCallback(callback)) {
        this._series.forEach(function (series, index) {
          callback.call(null, series, index);
        });
      }
    }
    /**
    * Find the index of a series inside the study.
    * @param {SeriesMetadata} series An instance of the SeriesMetadata class.
    * @returns {number} The index of the series inside the study or -1 if not found.
    */

  }, {
    key: "indexOfSeries",
    value: function indexOfSeries(series) {
      return this._series.indexOf(series);
    }
    /**
    * It sorts the series based on display sets order. Each series must be an instance
    * of SeriesMetadata and each display sets must be an instance of ImageSet.
    * Useful example of usage:
    *     Study data provided by backend does not sort series at all and client-side
    *     needs series sorted by the same criteria used for sorting display sets.
    */

  }, {
    key: "sortSeriesByDisplaySets",
    value: function sortSeriesByDisplaySets() {
      var _this4 = this;

      // Object for mapping display sets' index by SeriesInstanceUID
      var displaySetsMapping = {}; // Loop through each display set to create the mapping

      this.forEachDisplaySet(function (displaySet, index) {
        if (!(displaySet instanceof _ImageSet__WEBPACK_IMPORTED_MODULE_7__["default"])) {
          throw new _OHIFError__WEBPACK_IMPORTED_MODULE_10__["default"]("StudyMetadata::sortSeriesByDisplaySets display set at index ".concat(index, " is not an instance of ImageSet"));
        } // In case of multiframe studies, just get the first index occurence


        if (displaySetsMapping[displaySet.SeriesInstanceUID] === void 0) {
          displaySetsMapping[displaySet.SeriesInstanceUID] = index;
        }
      }); // Clone of actual series

      var actualSeries = this.getSeries();
      actualSeries.forEach(function (series, index) {
        if (!(series instanceof _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__["SeriesMetadata"])) {
          throw new _OHIFError__WEBPACK_IMPORTED_MODULE_10__["default"]("StudyMetadata::sortSeriesByDisplaySets series at index ".concat(index, " is not an instance of SeriesMetadata"));
        } // Get the new series index


        var seriesIndex = displaySetsMapping[series.getSeriesInstanceUID()]; // Update the series object with the new series position

        _this4._series[seriesIndex] = series;
      });
    }
    /**
    * Compares the current study instance with another one.
    * @param {StudyMetadata} study An instance of the StudyMetadata class.
    * @returns {boolean} Returns true if both instances refer to the same study.
    */

  }, {
    key: "equals",
    value: function equals(study) {
      var self = this;
      return study === self || study instanceof StudyMetadata && study.getStudyInstanceUID() === self.getStudyInstanceUID();
    }
    /**
    * Get the first series of the current study retaining a consistent result across multiple calls.
    * @return {SeriesMetadata} An instance of the SeriesMetadata class or null if it does not exist.
    */

  }, {
    key: "getFirstSeries",
    value: function getFirstSeries() {
      var series = this._firstSeries;

      if (!(series instanceof _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__["SeriesMetadata"])) {
        series = null;
        var found = this.getSeriesByIndex(0);

        if (found instanceof _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__["SeriesMetadata"]) {
          this._firstSeries = found;
          series = found;
        }
      }

      return series;
    }
    /**
    * Get the first image id given display instance uid.
    * @return {string} The image id.
    */

  }, {
    key: "getFirstImageId",
    value: function getFirstImageId(displaySetInstanceUID) {
      try {
        var displaySet = this.findDisplaySet(function (displaySet) {
          return displaySet.displaySetInstanceUID === displaySetInstanceUID;
        });
        return displaySet.images[0].getImageId();
      } catch (error) {
        console.error('Failed to retrieve image metadata');
        return null;
      }
    }
    /**
    * Get the first instance of the current study retaining a consistent result across multiple calls.
    * @return {InstanceMetadata} An instance of the InstanceMetadata class or null if it does not exist.
    */

  }, {
    key: "getFirstInstance",
    value: function getFirstInstance() {
      var instance = this._firstInstance;

      if (!(instance instanceof _InstanceMetadata__WEBPACK_IMPORTED_MODULE_8__["InstanceMetadata"])) {
        instance = null;
        var firstSeries = this.getFirstSeries();

        if (firstSeries instanceof _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__["SeriesMetadata"]) {
          var found = firstSeries.getFirstInstance();

          if (found instanceof _InstanceMetadata__WEBPACK_IMPORTED_MODULE_8__["InstanceMetadata"]) {
            this._firstInstance = found;
            instance = found;
          }
        }
      }

      return instance;
    }
    /**
    * Search the associated series to find an specific instance using the supplied callback as criteria.
    * The callback is passed two arguments: instance (a InstanceMetadata instance) and index (the integer
    * index of the instance within the current series)
    * @param {function} callback The callback function which will be invoked for each instance instance.
    * @returns {Object} Result object containing series (SeriesMetadata) and instance (InstanceMetadata)
    *                   objects or an empty object if not found.
    */

  }, {
    key: "findSeriesAndInstanceByInstance",
    value: function findSeriesAndInstanceByInstance(callback) {
      var result;

      if (_Metadata__WEBPACK_IMPORTED_MODULE_9__["Metadata"].isValidCallback(callback)) {
        var instance;

        var series = this._series.find(function (series) {
          instance = series.findInstance(callback);
          return instance instanceof _InstanceMetadata__WEBPACK_IMPORTED_MODULE_8__["InstanceMetadata"];
        }); // No series found


        if (series instanceof _SeriesMetadata__WEBPACK_IMPORTED_MODULE_11__["SeriesMetadata"]) {
          result = {
            series: series,
            instance: instance
          };
        }
      }

      return result || {};
    }
    /**
    * Find series by instance using the supplied callback as criteria. The callback is passed
    * two arguments: instance (a InstanceMetadata instance) and index (the integer index of
    * the instance within its series)
    * @param {function} callback The callback function which will be invoked for each instance.
    * @returns {SeriesMetadata|undefined} If a series is found based on callback criteria it
    *                                     returns a SeriesMetadata. "undefined" is returned otherwise
    */

  }, {
    key: "findSeriesByInstance",
    value: function findSeriesByInstance(callback) {
      var result = this.findSeriesAndInstanceByInstance(callback);
      return result.series;
    }
    /**
    * Find an instance using the supplied callback as criteria. The callback is passed
    * two arguments: instance (a InstanceMetadata instance) and index (the integer index of
    * the instance within its series)
    * @param {function} callback The callback function which will be invoked for each instance.
    * @returns {InstanceMetadata|undefined} If an instance is found based on callback criteria it
    *                                     returns a InstanceMetadata. "undefined" is returned otherwise
    */

  }, {
    key: "findInstance",
    value: function findInstance(callback) {
      var result = this.findSeriesAndInstanceByInstance(callback);
      return result.instance;
    }
  }]);

  return StudyMetadata;
}(_Metadata__WEBPACK_IMPORTED_MODULE_9__["Metadata"]);
/**
 *
 * @typedef StudyMetadata
 * @property {function} getSeriesCount - returns the number of series in the study
 * @property {function} forEachSeries - function that invokes callback with each series and index
 * @property {function} getStudyInstanceUID - returns the study's instance UID
 *
 */

/**
 * @typedef SeriesMetadata
 * @property {function} getSeriesInstanceUID - returns the series's instance UID
 * @property {function} getData - ???
 * @property {function} forEachInstance - ???
 */

var dwc = dicomweb_client__WEBPACK_IMPORTED_MODULE_12__["api"].DICOMwebClient;

var isMultiFrame = function isMultiFrame(instance) {
  return instance.getTagValue('NumberOfFrames') > 1;
};

var makeDisplaySet = function makeDisplaySet(series, instances) {
  var instance = instances[0];
  var imageSet = new _ImageSet__WEBPACK_IMPORTED_MODULE_7__["default"](instances);
  var seriesData = series.getData(); // set appropriate attributes to image set...

  imageSet.setAttributes({
    displaySetInstanceUID: imageSet.uid,
    // create a local alias for the imageSet UID
    SeriesDate: seriesData.SeriesDate,
    SeriesTime: seriesData.SeriesTime,
    SeriesInstanceUID: series.getSeriesInstanceUID(),
    SeriesNumber: instance.getTagValue('SeriesNumber'),
    SeriesDescription: instance.getTagValue('SeriesDescription'),
    numImageFrames: instances.length,
    frameRate: instance.getTagValue('FrameTime'),
    Modality: instance.getTagValue('Modality'),
    isMultiFrame: isMultiFrame(instance)
  }); // Sort the images in this series if needed

  var shallSort = true; //!OHIF.utils.ObjectPath.get(Meteor, 'settings.public.ui.sortSeriesByIncomingOrder');

  if (shallSort) {
    imageSet.sortBy(function (a, b) {
      // Sort by InstanceNumber (0020,0013)
      return (parseInt(a.getTagValue('InstanceNumber', 0)) || 0) - (parseInt(b.getTagValue('InstanceNumber', 0)) || 0);
    });
  } // Include the first image instance number (after sorted)


  imageSet.setAttribute('InstanceNumber', imageSet.getImage(0).getTagValue('InstanceNumber'));
  var isReconstructable = Object(_utils_isDisplaySetReconstructable__WEBPACK_IMPORTED_MODULE_14__["default"])(instances);
  imageSet.isReconstructable = isReconstructable.value;

  if (shallSort && imageSet.isReconstructable) {
    imageSet.sortByImagePositionPatient();
  }

  if (isReconstructable.missingFrames) {
    // TODO -> This is currently unused, but may be used for reconstructing
    // Volumes with gaps later on.
    imageSet.missingFrames = isReconstructable.missingFrames;
  } //Get calculated spacings between slices in the set


  var calculatedSpacings = Object(_utils_getImageSetCalculatedSpacings__WEBPACK_IMPORTED_MODULE_16__["default"])(instances);
  imageSet.calculatedSpacings = calculatedSpacings; // console.log('Make Displayset calculated spacings', calculatedSpacings);

  return imageSet;
};

var isSingleImageModality = function isSingleImageModality(Modality) {
  return Modality === 'CR' || Modality === 'MG' || Modality === 'DX';
};

function getSopClassUIDs(series) {
  var uniqueSopClassUIDsInSeries = new Set();
  series.forEachInstance(function (instance) {
    var instanceSopClassUID = instance.getTagValue('SOPClassUID');
    uniqueSopClassUIDsInSeries.add(instanceSopClassUID);
  });
  var sopClassUIDs = Array.from(uniqueSopClassUIDsInSeries);
  return sopClassUIDs;
}
/**
 * @private
 * @param {SeriesMetadata} series
 * @param {StudyMetadata} study
 * @param {string[]} sopClassUIDs
 */


function _getDisplaySetFromSopClassModule(sopClassHandlerExtensions, // TODO: Update Usage
series, study, sopClassUIDs) {
  // TODO: For now only use the plugins if all instances have the same SOPClassUID
  if (sopClassUIDs.length !== 1) {
    console.warn('getDisplaySetFromSopClassPlugin: More than one SOPClassUID in the same series is not yet supported.');
    return;
  }

  var SOPClassUID = sopClassUIDs[0];
  var sopClassHandlerModules = sopClassHandlerExtensions.map(function (extension) {
    return extension.module;
  });
  var handlersForSopClassUID = sopClassHandlerModules.filter(function (module) {
    return module.sopClassUIDs.includes(SOPClassUID);
  }); // TODO: Sort by something, so we can determine which plugin to use

  if (!handlersForSopClassUID || !handlersForSopClassUID.length) {
    return;
  }

  var plugin = handlersForSopClassUID[0];
  var headers = _DICOMWeb__WEBPACK_IMPORTED_MODULE_6__["default"].getAuthorizationHeader();
  var dicomWebClient = new dwc({
    url: study.getData().wadoRoot,
    headers: headers
  });
  var displaySet = plugin.getDisplaySetFromSeries(series, study, dicomWebClient, headers);

  if (displaySet && !displaySet.Modality) {
    var instance = series.getFirstInstance();
    displaySet.Modality = instance.getTagValue('Modality');
  }

  return displaySet;
}
/**
 * Sort series primarily by Modality (i.e., series with references to other
 * series like SEG, KO or PR are grouped in the end of the list) and then by
 * series number:
 *
 *  --------
 * | CT #3  |
 * | CT #4  |
 * | CT #5  |
 *  --------
 * | SEG #1 |
 * | SEG #2 |
 *  --------
 *
 * @param {*} a - DisplaySet
 * @param {*} b - DisplaySet
 */


function seriesSortingCriteria(a, b) {
  var isLowPriorityA = Object(_utils_isLowPriorityModality__WEBPACK_IMPORTED_MODULE_15__["default"])(a.Modality);
  var isLowPriorityB = Object(_utils_isLowPriorityModality__WEBPACK_IMPORTED_MODULE_15__["default"])(b.Modality);

  if (!isLowPriorityA && isLowPriorityB) {
    return -1;
  }

  if (isLowPriorityA && !isLowPriorityB) {
    return 1;
  }

  return sortBySeriesNumber(a, b);
}
/**
 * Sort series by series number. Series with low
 * @param {*} a - DisplaySet
 * @param {*} b - DisplaySet
 */


function sortBySeriesNumber(a, b) {
  var seriesNumberAIsGreaterOrUndefined = a.SeriesNumber > b.SeriesNumber || !a.SeriesNumber && b.SeriesNumber;
  return seriesNumberAIsGreaterOrUndefined ? 1 : -1;
}
/**
 * Sorts a list of display set objects
 * @param {Array} list A list of display sets to be sorted
 */


function sortDisplaySetList(list) {
  return list.sort(seriesSortingCriteria);
}

/***/ }),

/***/ "./classes/metadata/index.js":
/*!***********************************!*\
  !*** ./classes/metadata/index.js ***!
  \***********************************/
/*! exports provided: Metadata, StudyMetadata, SeriesMetadata, InstanceMetadata, OHIFStudyMetadata, OHIFSeriesMetadata, OHIFInstanceMetadata, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _InstanceMetadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InstanceMetadata */ "./classes/metadata/InstanceMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InstanceMetadata", function() { return _InstanceMetadata__WEBPACK_IMPORTED_MODULE_0__["InstanceMetadata"]; });

/* harmony import */ var _Metadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Metadata */ "./classes/metadata/Metadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Metadata", function() { return _Metadata__WEBPACK_IMPORTED_MODULE_1__["Metadata"]; });

/* harmony import */ var _OHIFInstanceMetadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OHIFInstanceMetadata */ "./classes/metadata/OHIFInstanceMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHIFInstanceMetadata", function() { return _OHIFInstanceMetadata__WEBPACK_IMPORTED_MODULE_2__["OHIFInstanceMetadata"]; });

/* harmony import */ var _OHIFSeriesMetadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./OHIFSeriesMetadata */ "./classes/metadata/OHIFSeriesMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHIFSeriesMetadata", function() { return _OHIFSeriesMetadata__WEBPACK_IMPORTED_MODULE_3__["OHIFSeriesMetadata"]; });

/* harmony import */ var _OHIFStudyMetadata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./OHIFStudyMetadata */ "./classes/metadata/OHIFStudyMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHIFStudyMetadata", function() { return _OHIFStudyMetadata__WEBPACK_IMPORTED_MODULE_4__["OHIFStudyMetadata"]; });

/* harmony import */ var _SeriesMetadata__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SeriesMetadata */ "./classes/metadata/SeriesMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SeriesMetadata", function() { return _SeriesMetadata__WEBPACK_IMPORTED_MODULE_5__["SeriesMetadata"]; });

/* harmony import */ var _StudyMetadata__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./StudyMetadata */ "./classes/metadata/StudyMetadata.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StudyMetadata", function() { return _StudyMetadata__WEBPACK_IMPORTED_MODULE_6__["StudyMetadata"]; });








var metadata = {
  Metadata: _Metadata__WEBPACK_IMPORTED_MODULE_1__["Metadata"],
  StudyMetadata: _StudyMetadata__WEBPACK_IMPORTED_MODULE_6__["StudyMetadata"],
  SeriesMetadata: _SeriesMetadata__WEBPACK_IMPORTED_MODULE_5__["SeriesMetadata"],
  InstanceMetadata: _InstanceMetadata__WEBPACK_IMPORTED_MODULE_0__["InstanceMetadata"],
  OHIFStudyMetadata: _OHIFStudyMetadata__WEBPACK_IMPORTED_MODULE_4__["OHIFStudyMetadata"],
  OHIFSeriesMetadata: _OHIFSeriesMetadata__WEBPACK_IMPORTED_MODULE_3__["OHIFSeriesMetadata"],
  OHIFInstanceMetadata: _OHIFInstanceMetadata__WEBPACK_IMPORTED_MODULE_2__["OHIFInstanceMetadata"]
};

/* harmony default export */ __webpack_exports__["default"] = (metadata);

/***/ }),

/***/ "./cornerstone.js":
/*!************************!*\
  !*** ./cornerstone.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _classes_MetadataProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./classes/MetadataProvider */ "./classes/MetadataProvider.js");
/* harmony import */ var _lib_cornerstone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/cornerstone */ "./lib/cornerstone.js");


var cornerstone = {
  metadataProvider: _classes_MetadataProvider__WEBPACK_IMPORTED_MODULE_0__["default"],
  getBoundingBox: _lib_cornerstone__WEBPACK_IMPORTED_MODULE_1__["getBoundingBox"],
  pixelToPage: _lib_cornerstone__WEBPACK_IMPORTED_MODULE_1__["pixelToPage"],
  repositionTextBox: _lib_cornerstone__WEBPACK_IMPORTED_MODULE_1__["repositionTextBox"]
};
/* harmony default export */ __webpack_exports__["default"] = (cornerstone);

/***/ }),

/***/ "./extensions/ExtensionManager.js":
/*!****************************************!*\
  !*** ./extensions/ExtensionManager.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ExtensionManager; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _MODULE_TYPES__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MODULE_TYPES */ "./extensions/MODULE_TYPES.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../log */ "./log.js");






var ExtensionManager = /*#__PURE__*/function () {
  function ExtensionManager(_ref) {
    var _this = this;

    var commandsManager = _ref.commandsManager,
        servicesManager = _ref.servicesManager,
        _ref$appConfig = _ref.appConfig,
        appConfig = _ref$appConfig === void 0 ? {} : _ref$appConfig;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ExtensionManager);

    this.modules = {};
    this.registeredExtensionIds = [];
    this.moduleTypeNames = Object.values(_MODULE_TYPES__WEBPACK_IMPORTED_MODULE_3__["default"]); //

    this._commandsManager = commandsManager;
    this._servicesManager = servicesManager;
    this._appConfig = appConfig;
    this.moduleTypeNames.forEach(function (moduleType) {
      _this.modules[moduleType] = [];
    });
  }
  /**
  * An array of extensions, or an array of arrays that contains extension
  * configuration pairs.
  *
  * @param {Object[]} extensions - Array of extensions
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ExtensionManager, [{
    key: "registerExtensions",
    value: function registerExtensions(extensions) {
      var _this2 = this;

      extensions.forEach(function (extension) {
        var hasConfiguration = Array.isArray(extension);

        if (hasConfiguration) {
          var _extension = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(extension, 2),
              ohifExtension = _extension[0],
              configuration = _extension[1];

          _this2.registerExtension(ohifExtension, configuration);
        } else {
          _this2.registerExtension(extension);
        }
      });
    }
    /**
    *
    * TODO: Id Management: SopClassHandlers currently refer to viewport module by id; setting the extension id as viewport module id is a workaround for now
    * @param {Object} extension
    * @param {Object} configuration
    */

  }, {
    key: "registerExtension",
    value: function registerExtension(extension) {
      var _this3 = this;

      var configuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!extension) {
        _log__WEBPACK_IMPORTED_MODULE_4__["default"].warn('Attempting to register a null/undefined extension. Exiting early.');
        return;
      }

      var extensionId = extension.id;

      if (!extensionId) {
        extensionId = Math.random().toString(36).substr(2, 5);
        _log__WEBPACK_IMPORTED_MODULE_4__["default"].warn("Extension ID not set. Using random string ID: ".concat(extensionId));
      }

      if (this.registeredExtensionIds.includes(extensionId)) {
        _log__WEBPACK_IMPORTED_MODULE_4__["default"].warn("Extension ID ".concat(extensionId, " has already been registered. Exiting before duplicating modules."));
        return;
      } // preRegistrationHook


      if (extension.preRegistration) {
        extension.preRegistration({
          servicesManager: this._servicesManager,
          commandsManager: this._commandsManager,
          appConfig: this._appConfig,
          configuration: configuration
        });
      } // Register Modules


      this.moduleTypeNames.forEach(function (moduleType) {
        var extensionModule = _this3._getExtensionModule(moduleType, extension, extensionId, configuration);

        if (extensionModule) {
          _this3._initSpecialModuleTypes(moduleType, extensionModule);

          _this3.modules[moduleType].push({
            extensionId: extensionId,
            module: extensionModule
          });
        }
      }); // Track extension registration

      this.registeredExtensionIds.push(extensionId);
    }
    /**
    * @private
    * @param {string} moduleType
    * @param {Object} extension
    * @param {string} extensionId - Used for logging warnings
    */

  }, {
    key: "_getExtensionModule",
    value: function _getExtensionModule(moduleType, extension, extensionId, configuration) {
      var getModuleFnName = "get".concat(_capitalizeFirstCharacter(moduleType));
      var getModuleFn = extension[getModuleFnName];

      if (!getModuleFn) {
        return;
      }

      try {
        var extensionModule = getModuleFn({
          servicesManager: this._servicesManager,
          commandsManager: this._commandsManager,
          appConfig: this._appConfig,
          configuration: configuration
        });

        if (!extensionModule) {
          _log__WEBPACK_IMPORTED_MODULE_4__["default"].warn("Null or undefined returned when registering the ".concat(getModuleFnName, " module for the ").concat(extensionId, " extension"));
        }

        return extensionModule;
      } catch (ex) {
        _log__WEBPACK_IMPORTED_MODULE_4__["default"].error("Exception thrown while trying to call ".concat(getModuleFnName, " for the ").concat(extensionId, " extension"));
      }
    }
  }, {
    key: "_initSpecialModuleTypes",
    value: function _initSpecialModuleTypes(moduleType, extensionModule) {
      switch (moduleType) {
        case 'commandsModule':
          {
            var definitions = extensionModule.definitions,
                defaultContext = extensionModule.defaultContext;

            if (!definitions || Object.keys(definitions).length === 0) {
              _log__WEBPACK_IMPORTED_MODULE_4__["default"].warn('Commands Module contains no command definitions');
              return;
            }

            this._initCommandsModule(definitions, defaultContext);

            break;
          }

        default: // code block

      }
    }
    /**
    *
    * @private
    * @param {Object[]} commandDefinitions
    */

  }, {
    key: "_initCommandsModule",
    value: function _initCommandsModule(commandDefinitions) {
      var _this4 = this;

      var defaultContext = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'VIEWER';

      if (!this._commandsManager.getContext(defaultContext)) {
        this._commandsManager.createContext(defaultContext);
      }

      Object.keys(commandDefinitions).forEach(function (commandName) {
        var commandDefinition = commandDefinitions[commandName];
        var commandHasContextThatDoesNotExist = commandDefinition.context && !_this4._commandsManager.getContext(commandDefinition.context);

        if (commandHasContextThatDoesNotExist) {
          _this4._commandsManager.createContext(commandDefinition.context);
        }

        _this4._commandsManager.registerCommand(commandDefinition.context || defaultContext, commandName, commandDefinition);
      });
    }
  }]);

  return ExtensionManager;
}();
/**
 * @private
 * @param {string} lower
 */




function _capitalizeFirstCharacter(lower) {
  return lower.charAt(0).toUpperCase() + lower.substr(1);
}

/***/ }),

/***/ "./extensions/MODULE_TYPES.js":
/*!************************************!*\
  !*** ./extensions/MODULE_TYPES.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ({
  COMMANDS: 'commandsModule',
  PANEL: 'panelModule',
  SOP_CLASS_HANDLER: 'sopClassHandlerModule',
  TOOLBAR: 'toolbarModule',
  VIEWPORT: 'viewportModule'
});

/***/ }),

/***/ "./hanging-protocols/HPMatcher.js":
/*!****************************************!*\
  !*** ./hanging-protocols/HPMatcher.js ***!
  \****************************************/
/*! exports provided: HPMatcher */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HPMatcher", function() { return HPMatcher; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _classes_OHIFError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes/OHIFError */ "./classes/OHIFError.js");
/* harmony import */ var _classes_metadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes/metadata */ "./classes/metadata/index.js");
/* harmony import */ var _lib_validate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/validate */ "./hanging-protocols/lib/validate.js");
/* harmony import */ var _customAttributes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./customAttributes */ "./hanging-protocols/customAttributes.js");





/**
 * Import Constants
 */

var InstanceMetadata = _classes_metadata__WEBPACK_IMPORTED_MODULE_2__["default"].InstanceMetadata;
/**
 * Match a Metadata instance against rules using Validate.js for validation.
 * @param  {InstanceMetadata} metadataInstance Metadata instance object
 * @param  {Array} rules Array of MatchingRules instances (StudyMatchingRule|SeriesMatchingRule|ImageMatchingRule) for the match
 * @return {Object}      Matching Object with score and details (which rule passed or failed)
 */

var match = function match(metadataInstance, rules) {
  // Make sure the supplied data is valid.
  if (!(metadataInstance instanceof InstanceMetadata)) {
    throw new _classes_OHIFError__WEBPACK_IMPORTED_MODULE_1__["default"]('HPMatcher::match metadataInstance must be an instance of InstanceMetadata');
  }

  var options = {
    format: 'grouped'
  };
  var details = {
    passed: [],
    failed: []
  };
  var requiredFailed = false;
  var score = 0;
  rules.forEach(function (rule) {
    var attribute = rule.attribute; // Do not use the custom attribute from the metadataInstance since it is subject to change

    if (_customAttributes__WEBPACK_IMPORTED_MODULE_4__["CustomAttributeRetrievalCallbacks"].hasOwnProperty(attribute)) {
      var customAttribute = _customAttributes__WEBPACK_IMPORTED_MODULE_4__["CustomAttributeRetrievalCallbacks"][attribute];
      metadataInstance.setCustomAttribute(attribute, customAttribute.callback(metadataInstance));
    } // Format the constraint as required by Validate.js


    var testConstraint = _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, attribute, rule.constraint); // Create a single attribute object to be validated, since metadataInstance is an
    // instance of Metadata (StudyMetadata, SeriesMetadata or InstanceMetadata)


    var attributeValue = metadataInstance.customAttributeExists(attribute) ? metadataInstance.getCustomAttribute(attribute) : metadataInstance.getTagValue(attribute);

    var attributeMap = _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, attribute, attributeValue); // Use Validate.js to evaluate the constraints on the specified metadataInstance


    var errorMessages;

    try {
      errorMessages = Object(_lib_validate__WEBPACK_IMPORTED_MODULE_3__["validate"])(attributeMap, testConstraint, [options]);
    } catch (e) {
      errorMessages = ['Something went wrong during validation.', e];
    }

    if (!errorMessages) {
      // If no errorMessages were returned, then validation passed.
      // Add the rule's weight to the total score
      score += parseInt(rule.weight, 10); // Log that this rule passed in the matching details object

      details.passed.push({
        rule: rule
      });
    } else {
      // If errorMessages were present, then validation failed
      // If the rule that failed validation was Required, then
      // mark that a required Rule has failed
      if (rule.required) {
        requiredFailed = true;
      } // Log that this rule failed in the matching details object
      // and include any error messages


      details.failed.push({
        rule: rule,
        errorMessages: errorMessages
      });
    }
  }); // If a required Rule has failed Validation, set the matching score to zero

  if (requiredFailed) {
    score = 0;
  }

  return {
    score: score,
    details: details,
    requiredFailed: requiredFailed
  };
};

var HPMatcher = {
  match: match
};


/***/ }),

/***/ "./hanging-protocols/ProtocolEngine.js":
/*!*********************************************!*\
  !*** ./hanging-protocols/ProtocolEngine.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ProtocolEngine; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _classes_OHIFError__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../classes/OHIFError */ "./classes/OHIFError.js");
/* harmony import */ var _classes_metadata__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../classes/metadata */ "./classes/metadata/index.js");
/* harmony import */ var _classes_StudyMetadataSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../classes/StudyMetadataSource */ "./classes/StudyMetadataSource.js");
/* harmony import */ var _utils_isImage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils/isImage */ "./utils/isImage.js");
/* harmony import */ var _HPMatcher__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./HPMatcher */ "./hanging-protocols/HPMatcher.js");
/* harmony import */ var _lib_sortByScore__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/sortByScore */ "./hanging-protocols/lib/sortByScore.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../log */ "./log.js");
/* harmony import */ var _utils_sortBy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../utils/sortBy */ "./utils/sortBy.js");
/* harmony import */ var _customViewportSettings__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./customViewportSettings */ "./hanging-protocols/customViewportSettings.js");
/* harmony import */ var _classes_Protocol__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./classes/Protocol */ "./hanging-protocols/classes/Protocol.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }












/**
 * Import Constants
 */

var StudyMetadata = _classes_metadata__WEBPACK_IMPORTED_MODULE_4__["default"].StudyMetadata,
    InstanceMetadata = _classes_metadata__WEBPACK_IMPORTED_MODULE_4__["default"].InstanceMetadata; // Useful constants

var ABSTRACT_PRIOR_VALUE = 'abstractPriorValue';

var ProtocolEngine = /*#__PURE__*/function () {
  /**
   * Constructor
   * @param  {ProtocolStore} protocolStore Protocol Store used to keep track of all hanging protocols
   * @param  {Array} studies Array of study metadata
   * @param  {Map} priorStudies Map of prior studies
   * @param  {Object} studyMetadataSource Instance of StudyMetadataSource (ohif-viewerbase) Object to get study metadata
   * @param  {Object} options
   */
  function ProtocolEngine(protocolStore, studies, priorStudies, studyMetadataSource) {
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ProtocolEngine);

    this.matchedProtocols = new Map();
    this.matchedProtocolScores = {};

    // -----------
    // Type Validations
    if (!(studyMetadataSource instanceof _classes_StudyMetadataSource__WEBPACK_IMPORTED_MODULE_5__["StudyMetadataSource"])) {
      throw new _classes_OHIFError__WEBPACK_IMPORTED_MODULE_3__["default"]('ProtocolEngine::constructor studyMetadataSource is not an instance of StudyMetadataSource');
    }

    if (!(studies instanceof Array) && !studies.every(function (study) {
      return study instanceof StudyMetadata;
    })) {
      throw new _classes_OHIFError__WEBPACK_IMPORTED_MODULE_3__["default"]('ProtocolEngine::constructor studies is not an array or it\'s items are not instances of StudyMetadata');
    } // --------------
    // Initialization


    this.protocolStore = protocolStore;
    this.studies = studies;
    this.priorStudies = priorStudies instanceof Map ? priorStudies : new Map();
    this.studyMetadataSource = studyMetadataSource;
    this.options = options; // Put protocol engine in a known state

    this.reset(); // Create an array for new stage ids to be stored
    // while editing a stage

    this.newStageIds = [];
  }
  /**
   * Resets the ProtocolEngine to the best match
   */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ProtocolEngine, [{
    key: "reset",
    value: function reset() {
      var protocol = this.getBestProtocolMatch();
      this.setHangingProtocol(protocol);
    }
    /**
     * Retrieves the current Stage from the current Protocol and stage index
     *
     * @returns {*} The Stage model for the currently displayed Stage
     */

  }, {
    key: "getCurrentStageModel",
    value: function getCurrentStageModel() {
      return this.protocol.stages[this.stage];
    }
    /**
     * Finds the best protocols from Protocol Store, matching each protocol matching rules
     * with the given study. The best protocol are orded by score and returned in an array
     * @param  {Object} study StudyMetadata instance object
     * @return {Array}       Array of match objects or an empty array if no match was found
     *                       Each match object has the score of the matching and the matched
     *                       protocol
     */

  }, {
    key: "findMatchByStudy",
    value: function findMatchByStudy(study) {
      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::findMatchByStudy');
      var matched = [];
      var studyInstance = study.getFirstInstance(); // Set custom attribute for study metadata

      var numberOfAvailablePriors = this.getNumberOfAvailablePriors(study.getObjectID());
      this.protocolStore.getProtocol().forEach(function (protocol) {
        // Clone the protocol's protocolMatchingRules array
        // We clone it so that we don't accidentally add the
        // numberOfPriorsReferenced rule to the Protocol itself.
        var rules = protocol.protocolMatchingRules.slice();

        if (!rules) {
          return;
        } // Check if the study has the minimun number of priors used by the protocol.


        var numberOfPriorsReferenced = protocol.getNumberOfPriorsReferenced();

        if (numberOfPriorsReferenced > numberOfAvailablePriors) {
          return;
        } // Run the matcher and get matching details


        var matchedDetails = _HPMatcher__WEBPACK_IMPORTED_MODULE_7__["HPMatcher"].match(studyInstance, rules);
        var score = matchedDetails.score; // The protocol matched some rule, add it to the matched list

        if (score > 0) {
          matched.push({
            score: score,
            protocol: protocol
          });
        }
      }); // If no matches were found, select the default protocol

      if (!matched.length) {
        var defaultProtocol = this.protocolStore.getProtocol('defaultProtocol');
        return [{
          score: 1,
          protocol: defaultProtocol
        }];
      } // Sort the matched list by score


      Object(_lib_sortByScore__WEBPACK_IMPORTED_MODULE_8__["sortByScore"])(matched);
      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::findMatchByStudy matched', matched);
      return matched;
    }
  }, {
    key: "_clearMatchedProtocols",
    value: function _clearMatchedProtocols() {
      this.matchedProtocols.clear();
      this.matchedProtocolScores = {};
    }
    /**
     * Populates the MatchedProtocols Collection by running the matching procedure
     */

  }, {
    key: "updateProtocolMatches",
    value: function updateProtocolMatches() {
      var _this = this;

      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::updateProtocolMatches'); // Clear all data currently in matchedProtocols

      this._clearMatchedProtocols(); // For each study, find the matching protocols


      this.studies.forEach(function (study) {
        var matched = _this.findMatchByStudy(study); // For each matched protocol, check if it is already in MatchedProtocols


        matched.forEach(function (matchedDetail) {
          var protocol = matchedDetail.protocol;

          if (!protocol) {
            return;
          } // If it is not already in the MatchedProtocols Collection, insert it with its score


          if (!_this.matchedProtocols.has(protocol.id)) {
            _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::updateProtocolMatches inserting protocol match', matchedDetail);

            _this.matchedProtocols.set(protocol.id, protocol);

            _this.matchedProtocolScores[protocol.id] = matchedDetail.score;
          }
        });
      });
    }
  }, {
    key: "_largestKeyByValue",
    value: function _largestKeyByValue(obj) {
      return Object.keys(obj).reduce(function (a, b) {
        return obj[a] > obj[b] ? a : b;
      });
    }
  }, {
    key: "_getHighestScoringProtocol",
    value: function _getHighestScoringProtocol() {
      if (!Object.keys(this.matchedProtocolScores).length) {
        return this.protocolStore.getProtocol('defaultProtocol');
      }

      var highestScoringProtocolId = this._largestKeyByValue(this.matchedProtocolScores);

      return this.matchedProtocols.get(highestScoringProtocolId);
    }
    /**
     * Return the best matched Protocol to the current study or set of studies
     * @returns {*}
     */

  }, {
    key: "getBestProtocolMatch",
    value: function getBestProtocolMatch() {
      // Run the matching to populate matchedProtocols Set and Map
      this.updateProtocolMatches(); // Retrieve the highest scoring Protocol

      var bestMatch = this._getHighestScoringProtocol();

      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::getBestProtocolMatch bestMatch', bestMatch);
      return bestMatch;
    }
    /**
     * Get the number of prior studies supplied in the priorStudies map property.
     *
     * @param {String} studyObjectID The study object ID of the study whose priors are needed
     * @returns {number} The number of available prior studies with the same PatientID
     */

  }, {
    key: "getNumberOfAvailablePriors",
    value: function getNumberOfAvailablePriors(studyObjectID) {
      return this.getAvailableStudyPriors(studyObjectID).length;
    }
    /**
     * Get the array of prior studies from a specific study.
     *
     * @param {String} studyObjectID The study object ID of the study whose priors are needed
     * @returns {Array} The array of available priors or an empty array
     */

  }, {
    key: "getAvailableStudyPriors",
    value: function getAvailableStudyPriors(studyObjectID) {
      var priors = this.priorStudies.get(studyObjectID);
      return priors instanceof Array ? priors : [];
    } // Match images given a list of Studies and a Viewport's image matching reqs

  }, {
    key: "matchImages",
    value: function matchImages(viewport, viewportIndex) {
      var _this2 = this;

      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::matchImages');
      var studyMatchingRules = viewport.studyMatchingRules,
          seriesMatchingRules = viewport.seriesMatchingRules,
          instanceMatchingRules = viewport.imageMatchingRules;
      var matchingScores = [];
      var currentStudy = this.studies[0]; // @TODO: Should this be: this.studies[this.currentStudy] ???

      var firstInstance = currentStudy.getFirstInstance();
      var highestStudyMatchingScore = 0;
      var highestSeriesMatchingScore = 0; // Set custom attribute for study metadata and it's first instance

      currentStudy.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);

      if (firstInstance instanceof InstanceMetadata) {
        firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, 0);
      } // Only used if study matching rules has abstract prior values defined...


      var priorStudies;
      studyMatchingRules.forEach(function (rule) {
        if (rule.attribute === ABSTRACT_PRIOR_VALUE) {
          var validatorType = Object.keys(rule.constraint)[0];
          var validator = Object.keys(rule.constraint[validatorType])[0];
          var abstractPriorValue = rule.constraint[validatorType][validator];
          abstractPriorValue = parseInt(abstractPriorValue, 10); // TODO: Restrict or clarify validators for abstractPriorValue?
          // No need to call it more than once...

          if (!priorStudies) {
            priorStudies = _this2.getAvailableStudyPriors(currentStudy.getObjectID());
          } // TODO: Revisit this later: What about two studies with the same
          // study date?


          var priorStudy;

          if (abstractPriorValue === -1) {
            priorStudy = priorStudies[priorStudies.length - 1];
          } else {
            var studyIndex = Math.max(abstractPriorValue - 1, 0);
            priorStudy = priorStudies[studyIndex];
          } // Invalid data


          if (!priorStudy instanceof StudyMetadata) {
            return;
          }

          var priorStudyObjectID = priorStudy.getObjectID(); // Check if study metadata is already in studies list

          if (_this2.studies.find(function (study) {
            return study.getObjectID() === priorStudyObjectID;
          })) {
            return;
          } // Get study metadata if necessary and load study in the viewer (each viewer should provide it's own load study method)


          _this2.studyMetadataSource.loadStudy(priorStudy).then(function (studyMetadata) {
            // Set the custom attribute abstractPriorValue for the study metadata
            studyMetadata.setCustomAttribute(ABSTRACT_PRIOR_VALUE, abstractPriorValue); // Also add custom attribute

            var firstInstance = studyMetadata.getFirstInstance();

            if (firstInstance instanceof InstanceMetadata) {
              firstInstance.setCustomAttribute(ABSTRACT_PRIOR_VALUE, abstractPriorValue);
            } // Insert the new study metadata


            _this2.studies.push(studyMetadata); // Update the viewport to refresh layout manager with new study


            _this2.updateViewports(viewportIndex);
          }, function (error) {
            _log__WEBPACK_IMPORTED_MODULE_9__["default"].warn(error);
            throw new _classes_OHIFError__WEBPACK_IMPORTED_MODULE_3__["default"]("ProtocolEngine::matchImages could not get study metadata for the Study with the following ObjectID: ".concat(priorStudyObjectID));
          });
        } // TODO: Add relative Date / time

      });
      this.studies.forEach(function (study) {
        var studyMatchDetails = _HPMatcher__WEBPACK_IMPORTED_MODULE_7__["HPMatcher"].match(study.getFirstInstance(), studyMatchingRules); // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed

        if (studyMatchDetails.requiredFailed === true || studyMatchDetails.score < highestStudyMatchingScore) {
          return;
        }

        highestStudyMatchingScore = studyMatchDetails.score;
        study.forEachSeries(function (series) {
          var seriesMatchDetails = _HPMatcher__WEBPACK_IMPORTED_MODULE_7__["HPMatcher"].match(series.getFirstInstance(), seriesMatchingRules); // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed

          if (seriesMatchDetails.requiredFailed === true || seriesMatchDetails.score < highestSeriesMatchingScore) {
            return;
          }

          highestSeriesMatchingScore = seriesMatchDetails.score;
          series.forEachInstance(function (instance, index) {
            // This tests to make sure there is actually image data in this instance
            // TODO: Change this when we add PDF and MPEG support
            // See https://ohiforg.atlassian.net/browse/LT-227
            if (!Object(_utils_isImage__WEBPACK_IMPORTED_MODULE_6__["isImage"])(instance.getTagValue('SOPClassUID')) && !instance.getTagValue('Rows')) {
              return;
            }

            var instanceMatchDetails = _HPMatcher__WEBPACK_IMPORTED_MODULE_7__["HPMatcher"].match(instance, instanceMatchingRules); // Prevent bestMatch from being updated if the matchDetails' required attribute check has failed

            if (instanceMatchDetails.requiredFailed === true) {
              return;
            }

            var matchDetails = {
              passed: [],
              failed: []
            };
            matchDetails.passed = matchDetails.passed.concat(instanceMatchDetails.details.passed);
            matchDetails.passed = matchDetails.passed.concat(seriesMatchDetails.details.passed);
            matchDetails.passed = matchDetails.passed.concat(studyMatchDetails.details.passed);
            matchDetails.failed = matchDetails.failed.concat(instanceMatchDetails.details.failed);
            matchDetails.failed = matchDetails.failed.concat(seriesMatchDetails.details.failed);
            matchDetails.failed = matchDetails.failed.concat(studyMatchDetails.details.failed);
            var totalMatchScore = instanceMatchDetails.score + seriesMatchDetails.score + studyMatchDetails.score;
            var currentSOPInstanceUID = instance.getSOPInstanceUID();
            var imageDetails = {
              StudyInstanceUID: study.getStudyInstanceUID(),
              SeriesInstanceUID: series.getSeriesInstanceUID(),
              SOPInstanceUID: currentSOPInstanceUID,
              currentImageIdIndex: index,
              matchingScore: totalMatchScore,
              matchDetails: matchDetails,
              sortingInfo: {
                score: totalMatchScore,
                study: instance.getTagValue('StudyDate') + instance.getTagValue('StudyTime'),
                series: parseInt(instance.getTagValue('SeriesNumber')),
                // TODO: change for seriesDateTime
                instance: parseInt(instance.getTagValue('InstanceNumber')) // TODO: change for acquisitionTime

              }
            }; // Find the displaySet

            var displaySet = study.findDisplaySet(function (displaySet) {
              return displaySet.images.find(function (image) {
                return image.getSOPInstanceUID() === currentSOPInstanceUID;
              });
            }); // If the instance was found, set the displaySet ID

            if (displaySet) {
              imageDetails.displaySetInstanceUID = displaySet.getUID();
              imageDetails.imageId = instance.getImageId();
            }

            matchingScores.push(imageDetails);
          });
        });
      }); // Sort the matchingScores

      var sortingFunction = Object(_utils_sortBy__WEBPACK_IMPORTED_MODULE_10__["default"])({
        name: 'score',
        reverse: true
      }, {
        name: 'study',
        reverse: true
      }, {
        name: 'instance'
      }, {
        name: 'series'
      });
      matchingScores.sort(function (a, b) {
        return sortingFunction(a.sortingInfo, b.sortingInfo);
      });
      var bestMatch = matchingScores[0];
      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::matchImages bestMatch', bestMatch);
      return {
        bestMatch: bestMatch,
        matchingScores: matchingScores
      };
    }
    /**
     * Sets the current layout
     *
     * @param {number} numRows
     * @param {number} numColumns
     */

  }, {
    key: "setLayout",
    value: function setLayout(numRows, numColumns) {
      if (numRows < 1 && numColumns < 1) {
        _log__WEBPACK_IMPORTED_MODULE_9__["default"].error("Invalid layout ".concat(numRows, " x ").concat(numColumns));
        return;
      }

      if (typeof this.options.setLayout !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_9__["default"].error('Hanging Protocol Engine setLayout callback is not defined');
        return;
      }

      var viewports = [];
      var numViewports = numRows * numColumns;

      for (var i = 0; i < numViewports; i++) {
        viewports.push({});
      }

      this.options.setLayout({
        numRows: numRows,
        numColumns: numColumns,
        viewports: viewports
      });
    }
    /**
     * Rerenders viewports that are part of the current layout manager
     * using the matching rules internal to each viewport.
     *
     * If this function is provided the index of a viewport, only the specified viewport
     * is rerendered.
     *
     * @param viewportIndex
     */

  }, {
    key: "updateViewports",
    value: function updateViewports(viewportIndex) {
      var _this3 = this;

      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace("ProtocolEngine::updateViewports viewportIndex: ".concat(viewportIndex)); // Make sure we have an active protocol with a non-empty array of display sets

      if (!this.getNumProtocolStages()) {
        return;
      } // Retrieve the current stage


      var stageModel = this.getCurrentStageModel(); // If the current stage does not fulfill the requirements to be displayed,
      // stop here.

      if (!stageModel || !stageModel.viewportStructure || !stageModel.viewports || !stageModel.viewports.length) {
        return;
      } // Retrieve the layoutTemplate associated with the current display set's viewport structure
      // If no such template name exists, stop here.


      var layoutTemplateName = stageModel.viewportStructure.getLayoutTemplateName();

      if (!layoutTemplateName) {
        return;
      } // Retrieve the properties associated with the current display set's viewport structure template
      // If no such layout properties exist, stop here.


      var layoutProps = stageModel.viewportStructure.properties;

      if (!layoutProps) {
        return;
      } // Create an empty array to store the output viewportData


      var viewportData = []; // Empty the matchDetails associated with the ProtocolEngine.
      // This will be used to store the pass/fail details and score
      // for each of the viewport matching procedures

      this.matchDetails = []; // Loop through each viewport

      stageModel.viewports.forEach(function (viewport, viewportIndex) {
        var details = _this3.matchImages(viewport, viewportIndex);

        _this3.matchDetails[viewportIndex] = details; // Convert any YES/NO values into true/false for Cornerstone

        var cornerstoneViewportParams = {}; // Cache viewportSettings keys

        var viewportSettingsKeys = Object.keys(viewport.viewportSettings);
        viewportSettingsKeys.forEach(function (key) {
          var value = viewport.viewportSettings[key];

          if (value === 'YES') {
            value = true;
          } else if (value === 'NO') {
            value = false;
          }

          cornerstoneViewportParams[key] = value;
        }); // imageViewerViewports occasionally needs relevant layout data in order to set
        // the element style of the viewport in question

        var currentViewportData = _objectSpread({
          viewportIndex: viewportIndex,
          viewport: cornerstoneViewportParams
        }, layoutProps);

        var customSettings = [];
        viewportSettingsKeys.forEach(function (id) {
          var setting = _customViewportSettings__WEBPACK_IMPORTED_MODULE_11__["CustomViewportSettings"][id];

          if (!setting) {
            return;
          }

          customSettings.push({
            id: id,
            value: viewport.viewportSettings[id]
          });
        });

        currentViewportData.renderedCallback = function (element) {
          // console.log('renderedCallback for ' + element.id);
          customSettings.forEach(function (customSetting) {
            _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace("ProtocolEngine::currentViewportData.renderedCallback Applying custom setting: ".concat(customSetting.id));
            _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace("ProtocolEngine::currentViewportData.renderedCallback with value: ".concat(customSetting.value));
            var setting = _customViewportSettings__WEBPACK_IMPORTED_MODULE_11__["CustomViewportSettings"][customSetting.id];
            setting.callback(element, customSetting.value);
          });
        };

        var currentMatch = details.bestMatch;
        var currentPosition = 1;
        var scoresLength = details.matchingScores.length;

        while (currentPosition < scoresLength && viewportData.find(function (a) {
          return a.imageId === currentMatch.imageId;
        })) {
          currentMatch = details.matchingScores[currentPosition];
          currentPosition++;
        }

        if (currentMatch && currentMatch.imageId) {
          currentViewportData.StudyInstanceUID = currentMatch.StudyInstanceUID;
          currentViewportData.SeriesInstanceUID = currentMatch.SeriesInstanceUID;
          currentViewportData.SOPInstanceUID = currentMatch.SOPInstanceUID;
          currentViewportData.currentImageIdIndex = currentMatch.currentImageIdIndex;
          currentViewportData.displaySetInstanceUID = currentMatch.displaySetInstanceUID;
          currentViewportData.imageId = currentMatch.imageId;
        } // @TODO Why should we throw an exception when a best match is not found? This was aborting the whole process.
        // if (!currentViewportData.displaySetInstanceUID) {
        //     throw new OHIFError('ProtocolEngine::updateViewports No matching display set found?');
        // }


        viewportData.push(currentViewportData);
      });
      this.setLayout(layoutProps.Rows, layoutProps.Columns);

      if (typeof this.options.setViewportSpecificData !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_9__["default"].error('Hanging Protocol Engine setViewportSpecificData callback is not defined');
        return;
      } // If viewportIndex is defined, then update only that viewport


      if (viewportIndex !== undefined && viewportData[viewportIndex]) {
        this.options.setViewportSpecificData(viewportIndex, viewportData[viewportIndex]);
        return;
      } // Update all viewports


      viewportData.forEach(function (viewportSpecificData) {
        _this3.options.setViewportSpecificData(viewportSpecificData.viewportIndex, viewportSpecificData);
      });
    }
    /**
     * Sets the current Hanging Protocol to the specified Protocol
     * An optional argument can also be used to prevent the updating of the Viewports
     *
     * @param newProtocol
     * @param updateViewports
     */

  }, {
    key: "setHangingProtocol",
    value: function setHangingProtocol(newProtocol) {
      var updateViewports = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::setHangingProtocol newProtocol', newProtocol);
      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace("ProtocolEngine::setHangingProtocol updateViewports = ".concat(updateViewports)); // Reset the array of newStageIds

      this.newStageIds = [];

      if (_classes_Protocol__WEBPACK_IMPORTED_MODULE_12__["default"].prototype.isPrototypeOf(newProtocol)) {
        this.protocol = newProtocol;
      } else {
        this.protocol = new _classes_Protocol__WEBPACK_IMPORTED_MODULE_12__["default"]();
        this.protocol.fromObject(newProtocol);
      }

      this.stage = 0; // Update viewports by default

      if (updateViewports) {
        this.updateViewports();
      }
    }
    /**
     * Check if the next stage is available
     * @return {Boolean} True if next stage is available or false otherwise
     */

  }, {
    key: "isNextStageAvailable",
    value: function isNextStageAvailable() {
      var numberOfStages = this.getNumProtocolStages();
      return this.stage + 1 < numberOfStages;
    }
    /**
     * Check if the previous stage is available
     * @return {Boolean} True if previous stage is available or false otherwise
     */

  }, {
    key: "isPreviousStageAvailable",
    value: function isPreviousStageAvailable() {
      return this.stage - 1 >= 0;
    }
    /**
     * Changes the current stage to a new stage index in the display set sequence.
     * It checks if the next stage exists.
     *
     * @param {Integer} stageAction An integer value specifying wheater next (1) or previous (-1) stage
     * @return {Boolean} True if new stage has set or false, otherwise
     */

  }, {
    key: "setCurrentProtocolStage",
    value: function setCurrentProtocolStage(stageAction) {
      // Check if previous or next stage is available
      if (stageAction === -1 && !this.isPreviousStageAvailable()) {
        return false;
      }

      if (stageAction === 1 && !this.isNextStageAvailable()) {
        return false;
      } // Sets the new stage


      this.stage += stageAction; // Log the new stage

      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace("ProtocolEngine::setCurrentProtocolStage stage = ".concat(this.stage)); // Since stage has changed, we need to update the viewports
      // and redo matchings

      this.updateViewports(); // Everything went well

      return true;
    }
    /**
     * Retrieves the number of Stages in the current Protocol or
     * undefined if no protocol or stages are set
     */

  }, {
    key: "getNumProtocolStages",
    value: function getNumProtocolStages() {
      if (!this.protocol || !this.protocol.stages || !this.protocol.stages.length) {
        return;
      }

      return this.protocol.stages.length;
    }
    /**
     * Switches to the next protocol stage in the display set sequence
     */

  }, {
    key: "nextProtocolStage",
    value: function nextProtocolStage() {
      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::nextProtocolStage');

      if (!this.setCurrentProtocolStage(1)) {
        _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::nextProtocolStage failed');
      }
    }
    /**
     * Switches to the previous protocol stage in the display set sequence
     */

  }, {
    key: "previousProtocolStage",
    value: function previousProtocolStage() {
      _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::previousProtocolStage');

      if (!this.setCurrentProtocolStage(-1)) {
        _log__WEBPACK_IMPORTED_MODULE_9__["default"].trace('ProtocolEngine::previousProtocolStage failed');
      }
    }
  }]);

  return ProtocolEngine;
}();



/***/ }),

/***/ "./hanging-protocols/classes/Protocol.js":
/*!***********************************************!*\
  !*** ./hanging-protocols/classes/Protocol.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Protocol; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _rules__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rules */ "./hanging-protocols/classes/rules.js");
/* harmony import */ var _lib_removeFromArray__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/removeFromArray */ "./hanging-protocols/lib/removeFromArray.js");
/* harmony import */ var _Stage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Stage */ "./hanging-protocols/classes/Stage.js");
/* harmony import */ var _utils_guid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../utils/guid */ "./utils/guid.js");
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../user */ "./user.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }






/**
 * This class represents a Hanging Protocol at the highest level
 *
 * @type {Protocol}
 */

var Protocol = /*#__PURE__*/function () {
  /**
  * The Constructor for the Class to create a Protocol with the bare
  * minimum information
  *
  * @param name The desired name for the Protocol
  */
  function Protocol(name) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Protocol);

    // Create a new UUID for this Protocol
    this.id = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_6__["default"])(); // Store a value which determines whether or not a Protocol is locked
    // This is probably temporary, since we will eventually have role / user
    // checks for editing. For now we just need it to prevent changes to the
    // default protocols.

    this.locked = false; // Boolean value to indicate if the protocol has updated priors information
    // it's set in "updateNumberOfPriorsReferenced" function

    this.hasUpdatedPriorsInformation = false; // Apply the desired name

    this.name = name; // Set the created and modified dates to Now

    this.createdDate = new Date();
    this.modifiedDate = new Date(); // If we are logged in while creating this Protocol,
    // store this information as well

    if (_user__WEBPACK_IMPORTED_MODULE_7__["default"].userLoggedIn && _user__WEBPACK_IMPORTED_MODULE_7__["default"].userLoggedIn()) {
      this.createdBy = _user__WEBPACK_IMPORTED_MODULE_7__["default"].getUserId();
      this.modifiedBy = _user__WEBPACK_IMPORTED_MODULE_7__["default"].getUserId();
    } // Create two empty Sets specifying which roles
    // have read and write access to this Protocol


    this.availableTo = new Set();
    this.editableBy = new Set(); // Define empty arrays for the Protocol matching rules
    // and Stages

    this.protocolMatchingRules = [];
    this.stages = []; // Define auxiliary values for priors

    this.numberOfPriorsReferenced = -1;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Protocol, [{
    key: "getNumberOfPriorsReferenced",
    value: function getNumberOfPriorsReferenced() {
      var skipCache = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var numberOfPriorsReferenced = skipCache !== true ? this.numberOfPriorsReferenced : -1; // Check if information is cached already

      if (numberOfPriorsReferenced > -1) {
        return numberOfPriorsReferenced;
      }

      numberOfPriorsReferenced = 0; // Search each study matching rule for prior rules
      // Each stage can have many viewports that can have
      // multiple study matching rules.

      this.stages.forEach(function (stage) {
        if (!stage.viewports) {
          return;
        }

        stage.viewports.forEach(function (viewport) {
          if (!viewport.studyMatchingRules) {
            return;
          }

          viewport.studyMatchingRules.forEach(function (rule) {
            // If the current rule is not a priors rule, it will return -1 then numberOfPriorsReferenced will continue to be 0
            var priorsReferenced = rule.getNumberOfPriorsReferenced();

            if (priorsReferenced > numberOfPriorsReferenced) {
              numberOfPriorsReferenced = priorsReferenced;
            }
          });
        });
      });
      this.numberOfPriorsReferenced = numberOfPriorsReferenced;
      return numberOfPriorsReferenced;
    }
  }, {
    key: "updateNumberOfPriorsReferenced",
    value: function updateNumberOfPriorsReferenced() {
      this.getNumberOfPriorsReferenced(true);
    }
    /**
    * Method to update the modifiedDate when the Protocol
    * has been changed
    */

  }, {
    key: "protocolWasModified",
    value: function protocolWasModified() {
      // If we are logged in while modifying this Protocol,
      // store this information as well
      if (_user__WEBPACK_IMPORTED_MODULE_7__["default"].userLoggedIn && _user__WEBPACK_IMPORTED_MODULE_7__["default"].userLoggedIn()) {
        this.modifiedBy = _user__WEBPACK_IMPORTED_MODULE_7__["default"].getUserId();
      } // Protocol has been modified, so mark priors information
      // as "outdated"


      this.hasUpdatedPriorsInformation = false; // Update number of priors referenced info

      this.updateNumberOfPriorsReferenced(); // Update the modifiedDate with the current Date/Time

      this.modifiedDate = new Date();
    }
    /**
    * Occasionally the Protocol class needs to be instantiated from a JavaScript Object
    * containing the Protocol data. This function fills in a Protocol with the Object
    * data.
    *
    * @param input A Protocol as a JavaScript Object, e.g. retrieved from JSON
    */

  }, {
    key: "fromObject",
    value: function fromObject(input) {
      var _this = this;

      // Check if the input already has an ID
      // If so, keep it. It not, create a new UUID
      this.id = input.id || Object(_utils_guid__WEBPACK_IMPORTED_MODULE_6__["default"])(); // Assign the input name to the Protocol

      this.name = input.name; // Retrieve locked status, use !! to make it truthy
      // so that undefined values will be set to false

      this.locked = !!input.locked; // TODO: Check how to regenerate Set from Object
      // this.availableTo = new Set(input.availableTo);
      // this.editableBy = new Set(input.editableBy);
      // If the input contains Protocol matching rules

      if (input.protocolMatchingRules) {
        input.protocolMatchingRules.forEach(function (ruleObject) {
          // Create new Rules from the stored data
          var rule = new _rules__WEBPACK_IMPORTED_MODULE_3__["ProtocolMatchingRule"]();
          rule.fromObject(ruleObject); // Add them to the Protocol

          _this.protocolMatchingRules.push(rule);
        });
      } // If the input contains data for various Stages in the
      // display set sequence


      if (input.stages) {
        input.stages.forEach(function (stageObject) {
          // Create Stages from the stored data
          var stage = new _Stage__WEBPACK_IMPORTED_MODULE_5__["default"]();
          stage.fromObject(stageObject); // Add them to the Protocol

          _this.stages.push(stage);
        });
      }
    }
    /**
    * Creates a clone of the current Protocol with a new name
    *
    * @param name
    * @returns {Protocol|*}
    */

  }, {
    key: "createClone",
    value: function createClone(name) {
      // Create a new JavaScript independent of the current Protocol
      var currentProtocol = _objectSpread({}, this); // Create a new Protocol to return


      var clonedProtocol = new Protocol(); // Apply the desired properties

      currentProtocol.id = clonedProtocol.id;
      clonedProtocol.fromObject(currentProtocol); // If we have specified a name, assign it

      if (name) {
        clonedProtocol.name = name;
      } // Unlock the clone


      clonedProtocol.locked = false; // Return the cloned Protocol

      return clonedProtocol;
    }
    /**
    * Adds a Stage to this Protocol's display set sequence
    *
    * @param stage
    */

  }, {
    key: "addStage",
    value: function addStage(stage) {
      this.stages.push(stage); // Update the modifiedDate and User that last
      // modified this Protocol

      this.protocolWasModified();
    }
    /**
    * Adds a Rule to this Protocol's array of matching rules
    *
    * @param rule
    */

  }, {
    key: "addProtocolMatchingRule",
    value: function addProtocolMatchingRule(rule) {
      this.protocolMatchingRules.push(rule); // Update the modifiedDate and User that last
      // modified this Protocol

      this.protocolWasModified();
    }
    /**
    * Removes a Rule from this Protocol's array of matching rules
    *
    * @param rule
    */

  }, {
    key: "removeProtocolMatchingRule",
    value: function removeProtocolMatchingRule(rule) {
      var wasRemoved = Object(_lib_removeFromArray__WEBPACK_IMPORTED_MODULE_4__["removeFromArray"])(this.protocolMatchingRules, rule); // Update the modifiedDate and User that last
      // modified this Protocol

      if (wasRemoved) {
        this.protocolWasModified();
      }
    }
  }]);

  return Protocol;
}();



/***/ }),

/***/ "./hanging-protocols/classes/Rule.js":
/*!*******************************************!*\
  !*** ./hanging-protocols/classes/Rule.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Rule; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_comparators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/comparators */ "./hanging-protocols/lib/comparators.js");
/* harmony import */ var _utils_guid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../utils/guid */ "./utils/guid.js");




var EQUALS_REGEXP = /^equals$/;
/**
 * This Class represents a Rule to be evaluated given a set of attributes
 * Rules have:
 * - An attribute (e.g. 'SeriesDescription')
 * - A constraint Object, in the form required by Validate.js:
 *
 * rule.constraint = {
 *   contains: {
 *      value: 'T-1'
 *      }
 *   };
 *
 *  Note: In this example we use the 'contains' Validator, which is a custom Validator defined in Viewerbase
 *
 * - A value for whether or not they are Required to be matched (default: False)
 * - A value for their relative weighting during Protocol or Image matching (default: 1)
 */

var Rule = /*#__PURE__*/function () {
  /**
  * The Constructor for the Class to create a Rule with the bare
  * minimum information
  *
  * @param name The desired name for the Rule
  */
  function Rule(attribute, constraint, required, weight) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Rule);

    // Create a new UUID for this Rule
    this.id = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_3__["default"])(); // Set the Rule's weight (defaults to 1)

    this.weight = weight || 1; // If an attribute is specified, assign it

    if (attribute) {
      this.attribute = attribute;
    } // If a constraint is specified, assign it


    if (constraint) {
      this.constraint = constraint;
    } // If a value for 'required' is specified, assign it


    if (required === undefined) {
      // If no value was specified, default to False
      this.required = false;
    } else {
      this.required = required;
    } // Cache for constraint info object


    this._constraintInfo = void 0; // Cache for validator and value object

    this._validatorAndValue = void 0;
  }
  /**
  * Occasionally the Rule class needs to be instantiated from a JavaScript Object.
  * This function fills in a Protocol with the Object data.
  *
  * @param input A Rule as a JavaScript Object, e.g. retrieved from JSON
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Rule, [{
    key: "fromObject",
    value: function fromObject(input) {
      // Check if the input already has an ID
      // If so, keep it. It not, create a new UUID
      this.id = input.id || Object(_utils_guid__WEBPACK_IMPORTED_MODULE_3__["default"])(); // Assign the specified input data to the Rule

      this.required = input.required;
      this.weight = input.weight;
      this.attribute = input.attribute;
      this.constraint = input.constraint;
    }
    /**
    * Get the constraint info object for the current constraint
    * @return {Object\undefined} Constraint object or undefined if current constraint
    *                            is not valid or not found in comparators list
    */

  }, {
    key: "getConstraintInfo",
    value: function getConstraintInfo() {
      var constraintInfo = this._constraintInfo; // Check if info is cached already

      if (constraintInfo !== void 0) {
        return constraintInfo;
      }

      var ruleConstraint = Object.keys(this.constraint)[0];

      if (ruleConstraint !== void 0) {
        constraintInfo = _lib_comparators__WEBPACK_IMPORTED_MODULE_2__["comparators"].find(function (comparator) {
          return ruleConstraint === comparator.id;
        });
      } // Cache this information for later use


      this._constraintInfo = constraintInfo;
      return constraintInfo;
    }
    /**
    * Check if current rule is related to priors
    * @return {Boolean} True if a rule is related to priors or false otherwise
    */

  }, {
    key: "isRuleForPrior",
    value: function isRuleForPrior() {
      // @TODO: Should we check this too? this.attribute === 'relativeTime'
      return this.attribute === 'abstractPriorValue';
    }
    /**
    * If the current rule is a rule for priors, returns the number of referenced priors. Otherwise, returns -1.
    * @return {Number} The number of referenced priors or -1 if not applicable. Returns zero if the actual value could not be determined.
    */

  }, {
    key: "getNumberOfPriorsReferenced",
    value: function getNumberOfPriorsReferenced() {
      if (!this.isRuleForPrior()) {
        return -1;
      } // Get rule's validator and value


      var ruleValidatorAndValue = this.getConstraintValidatorAndValue();
      var value = ruleValidatorAndValue.value,
          validator = ruleValidatorAndValue.validator;
      var intValue = parseInt(value, 10) || 0; // avoid possible NaN
      // "Equal to" validators

      if (EQUALS_REGEXP.test(validator)) {
        // In this case, -1 (the oldest prior) indicates that at least one study is used
        return intValue < 0 ? 1 : intValue;
      } // Default cases return value


      return 0;
    }
    /**
    * Get the constraint validator and value
    * @return {Object|undefined} Returns an object containing the validator and it's value or undefined
    */

  }, {
    key: "getConstraintValidatorAndValue",
    value: function getConstraintValidatorAndValue() {
      var validatorAndValue = this._validatorAndValue; // Check if validator and value are cached already

      if (validatorAndValue !== void 0) {
        return validatorAndValue;
      } // Get the constraint info object


      var constraintInfo = this.getConstraintInfo(); // Constraint info object exists and is valid

      if (constraintInfo !== void 0) {
        var validator = constraintInfo.validator;
        var currentValidator = this.constraint[validator];

        if (currentValidator) {
          var constraintValidator = constraintInfo.validatorOption;
          var constraintValue = currentValidator[constraintValidator];
          validatorAndValue = {
            value: constraintValue,
            validator: constraintInfo.id
          };
          this._validatorAndValue = validatorAndValue;
        }
      }

      return validatorAndValue;
    }
  }]);

  return Rule;
}();



/***/ }),

/***/ "./hanging-protocols/classes/Stage.js":
/*!********************************************!*\
  !*** ./hanging-protocols/classes/Stage.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Stage; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ViewportStructure__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ViewportStructure */ "./hanging-protocols/classes/ViewportStructure.js");
/* harmony import */ var _Viewport__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Viewport */ "./hanging-protocols/classes/Viewport.js");
/* harmony import */ var _utils_guid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../utils/guid */ "./utils/guid.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




/**
 * A Stage is one step in the Display Set Sequence for a Hanging Protocol
 *
 * Stages are defined as a ViewportStructure and an array of Viewports
 *
 * @type {Stage}
 */

var Stage = /*#__PURE__*/function () {
  function Stage(ViewportStructure, name) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, Stage);

    // Create a new UUID for this Stage
    this.id = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_5__["default"])(); // Assign the name and ViewportStructure provided

    this.name = name;
    this.viewportStructure = ViewportStructure; // Create an empty array for the Viewports

    this.viewports = []; // Set the created date to Now

    this.createdDate = new Date();
  }
  /**
  * Creates a clone of the current Stage with a new name
  *
  * @param name
  * @returns {Stage|*}
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(Stage, [{
    key: "createClone",
    value: function createClone(name) {
      // Create a new JavaScript independent of the current Protocol
      var currentStage = _objectSpread({}, this); // Create a new Stage to return


      var clonedStage = new Stage(); // Assign the desired properties

      currentStage.id = clonedStage.id;
      clonedStage.fromObject(currentStage); // If we have specified a name, assign it

      if (name) {
        clonedStage.name = name;
      } // Return the cloned Stage


      return clonedStage;
    }
    /**
    * Occasionally the Stage class needs to be instantiated from a JavaScript Object.
    * This function fills in a Protocol with the Object data.
    *
    * @param input A Stage as a JavaScript Object, e.g. retrieved from JSON
    */

  }, {
    key: "fromObject",
    value: function fromObject(input) {
      var _this = this;

      // Check if the input already has an ID
      // If so, keep it. It not, create a new UUID
      this.id = input.id || Object(_utils_guid__WEBPACK_IMPORTED_MODULE_5__["default"])(); // Assign the input name to the Stage

      this.name = input.name; // If a ViewportStructure is present in the input, add it from the
      // input data

      this.viewportStructure = new _ViewportStructure__WEBPACK_IMPORTED_MODULE_3__["default"]();
      this.viewportStructure.fromObject(input.viewportStructure); // If any viewports are present in the input object

      if (input.viewports) {
        input.viewports.forEach(function (viewportObject) {
          // Create a new Viewport with their data
          var viewport = new _Viewport__WEBPACK_IMPORTED_MODULE_4__["default"]();
          viewport.fromObject(viewportObject); // Add it to the viewports array

          _this.viewports.push(viewport);
        });
      }
    }
  }]);

  return Stage;
}();



/***/ }),

/***/ "./hanging-protocols/classes/Viewport.js":
/*!***********************************************!*\
  !*** ./hanging-protocols/classes/Viewport.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Viewport; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _rules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rules */ "./hanging-protocols/classes/rules.js");
/* harmony import */ var _lib_removeFromArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/removeFromArray */ "./hanging-protocols/lib/removeFromArray.js");




/**
 * This Class defines a Viewport in the Hanging Protocol Stage. A Viewport contains
 * arrays of Rules that are matched in the ProtocolEngine in order to determine which
 * images should be hung.
 *
 * @type {Viewport}
 */

var Viewport = /*#__PURE__*/function () {
  function Viewport() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, Viewport);

    this.viewportSettings = {};
    this.imageMatchingRules = [];
    this.seriesMatchingRules = [];
    this.studyMatchingRules = [];
  }
  /**
  * Occasionally the Viewport class needs to be instantiated from a JavaScript Object.
  * This function fills in a Viewport with the Object data.
  *
  * @param input The Viewport as a JavaScript Object, e.g. retrieved from JSON
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(Viewport, [{
    key: "fromObject",
    value: function fromObject(input) {
      var _this = this;

      // If ImageMatchingRules exist, create them from the Object data
      // and add them to the Viewport's imageMatchingRules array
      if (input.imageMatchingRules) {
        input.imageMatchingRules.forEach(function (ruleObject) {
          var rule = new _rules__WEBPACK_IMPORTED_MODULE_2__["ImageMatchingRule"]();
          rule.fromObject(ruleObject);

          _this.imageMatchingRules.push(rule);
        });
      } // If SeriesMatchingRules exist, create them from the Object data
      // and add them to the Viewport's seriesMatchingRules array


      if (input.seriesMatchingRules) {
        input.seriesMatchingRules.forEach(function (ruleObject) {
          var rule = new _rules__WEBPACK_IMPORTED_MODULE_2__["SeriesMatchingRule"]();
          rule.fromObject(ruleObject);

          _this.seriesMatchingRules.push(rule);
        });
      } // If StudyMatchingRules exist, create them from the Object data
      // and add them to the Viewport's studyMatchingRules array


      if (input.studyMatchingRules) {
        input.studyMatchingRules.forEach(function (ruleObject) {
          var rule = new _rules__WEBPACK_IMPORTED_MODULE_2__["StudyMatchingRule"]();
          rule.fromObject(ruleObject);

          _this.studyMatchingRules.push(rule);
        });
      } // If ViewportSettings exist, add them to the current protocol


      if (input.viewportSettings) {
        this.viewportSettings = input.viewportSettings;
      }
    }
    /**
    * Finds and removes a rule from whichever array it exists in.
    * It is not required to specify if it exists in studyMatchingRules,
    * seriesMatchingRules, or imageMatchingRules
    *
    * @param rule
    */

  }, {
    key: "removeRule",
    value: function removeRule(rule) {
      var array;

      if (rule instanceof _rules__WEBPACK_IMPORTED_MODULE_2__["StudyMatchingRule"]) {
        array = this.studyMatchingRules;
      } else if (rule instanceof _rules__WEBPACK_IMPORTED_MODULE_2__["SeriesMatchingRule"]) {
        array = this.seriesMatchingRules;
      } else if (rule instanceof _rules__WEBPACK_IMPORTED_MODULE_2__["ImageMatchingRule"]) {
        array = this.imageMatchingRules;
      }

      Object(_lib_removeFromArray__WEBPACK_IMPORTED_MODULE_3__["removeFromArray"])(array, rule);
    }
  }]);

  return Viewport;
}();



/***/ }),

/***/ "./hanging-protocols/classes/ViewportStructure.js":
/*!********************************************************!*\
  !*** ./hanging-protocols/classes/ViewportStructure.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ViewportStructure; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);



/**
 * The ViewportStructure class represents the layout and layout properties that
 * Viewports are displayed in. ViewportStructure has a type, which corresponds to
 * a layout template, and a set of properties, which depend on the type.
 *
 * @type {ViewportStructure}
 */
var ViewportStructure = /*#__PURE__*/function () {
  function ViewportStructure(type, properties) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ViewportStructure);

    this.type = type;
    this.properties = properties;
  }
  /**
  * Occasionally the ViewportStructure class needs to be instantiated from a JavaScript Object.
  * This function fills in a ViewportStructure with the Object data.
  *
  * @param input The ViewportStructure as a JavaScript Object, e.g. retrieved from JSON
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ViewportStructure, [{
    key: "fromObject",
    value: function fromObject(input) {
      this.type = input.type;
      this.properties = input.properties;
    }
    /**
    * Retrieve the layout template name based on the layout type
    *
    * @returns {string}
    */

  }, {
    key: "getLayoutTemplateName",
    value: function getLayoutTemplateName() {
      // Viewport structure can be updated later when we build more complex display layouts
      switch (this.type) {
        case 'grid':
          return 'gridLayout';
      }
    }
    /**
    * Retrieve the number of Viewports required for this layout
    * given the layout type and properties
    *
    * @returns {string}
    */

  }, {
    key: "getNumViewports",
    value: function getNumViewports() {
      // Viewport structure can be updated later when we build more complex display layouts
      switch (this.type) {
        case 'grid':
          // For the typical grid layout, we only need to multiply Rows by Columns to
          // obtain the number of viewports
          return this.properties.Rows * this.properties.Columns;
      }
    }
  }]);

  return ViewportStructure;
}();



/***/ }),

/***/ "./hanging-protocols/classes/rules.js":
/*!********************************************!*\
  !*** ./hanging-protocols/classes/rules.js ***!
  \********************************************/
/*! exports provided: ProtocolMatchingRule, StudyMatchingRule, SeriesMatchingRule, ImageMatchingRule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProtocolMatchingRule", function() { return ProtocolMatchingRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StudyMatchingRule", function() { return StudyMatchingRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SeriesMatchingRule", function() { return SeriesMatchingRule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageMatchingRule", function() { return ImageMatchingRule; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _Rule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Rule */ "./hanging-protocols/classes/Rule.js");





function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


/**
 * The ProtocolMatchingRule Class extends the Rule Class.
 *
 * At present it does not add any new methods or attributes
 * @type {ProtocolMatchingRule}
 */

var ProtocolMatchingRule = /*#__PURE__*/function (_Rule) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(ProtocolMatchingRule, _Rule);

  var _super = _createSuper(ProtocolMatchingRule);

  function ProtocolMatchingRule() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ProtocolMatchingRule);

    return _super.apply(this, arguments);
  }

  return ProtocolMatchingRule;
}(_Rule__WEBPACK_IMPORTED_MODULE_4__["default"]);
/**
 * The StudyMatchingRule Class extends the Rule Class.
 *
 * At present it does not add any new methods or attributes
 * @type {StudyMatchingRule}
 */


var StudyMatchingRule = /*#__PURE__*/function (_Rule2) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(StudyMatchingRule, _Rule2);

  var _super2 = _createSuper(StudyMatchingRule);

  function StudyMatchingRule() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, StudyMatchingRule);

    return _super2.apply(this, arguments);
  }

  return StudyMatchingRule;
}(_Rule__WEBPACK_IMPORTED_MODULE_4__["default"]);
/**
 * The SeriesMatchingRule Class extends the Rule Class.
 *
 * At present it does not add any new methods or attributes
 * @type {SeriesMatchingRule}
 */


var SeriesMatchingRule = /*#__PURE__*/function (_Rule3) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(SeriesMatchingRule, _Rule3);

  var _super3 = _createSuper(SeriesMatchingRule);

  function SeriesMatchingRule() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, SeriesMatchingRule);

    return _super3.apply(this, arguments);
  }

  return SeriesMatchingRule;
}(_Rule__WEBPACK_IMPORTED_MODULE_4__["default"]);
/**
 * The ImageMatchingRule class extends the Rule Class.
 *
 * At present it does not add any new methods or attributes
 * @type {ImageMatchingRule}
 */


var ImageMatchingRule = /*#__PURE__*/function (_Rule4) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_1___default()(ImageMatchingRule, _Rule4);

  var _super4 = _createSuper(ImageMatchingRule);

  function ImageMatchingRule() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ImageMatchingRule);

    return _super4.apply(this, arguments);
  }

  return ImageMatchingRule;
}(_Rule__WEBPACK_IMPORTED_MODULE_4__["default"]);



/***/ }),

/***/ "./hanging-protocols/customAttributes.js":
/*!***********************************************!*\
  !*** ./hanging-protocols/customAttributes.js ***!
  \***********************************************/
/*! exports provided: CustomAttributeRetrievalCallbacks, addCustomAttribute */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomAttributeRetrievalCallbacks", function() { return CustomAttributeRetrievalCallbacks; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCustomAttribute", function() { return addCustomAttribute; });
// Define an empty object to store callbacks that are used to retrieve custom attributes
// The simplest example for a custom attribute is the Timepoint type (i.e. baseline or follow-up)
// used in the LesionTracker application.
//
// Timepoint type can be obtained given a studyId, and this is done through a custom callback.
// Developers can define attributes (i.e. attributeId = timepointType) with a name ('Timepoint Type')
// and a callback function that is used to calculate them.
//
// The input to the callback, which is called during viewport-image matching rule evaluation
// is the set of attributes that contains the specified attribute. In our example, timepointType is
// linked to the study attributes, and so the inputs to the callback is an object containing
// the study attributes.
var CustomAttributeRetrievalCallbacks = {};
/**
 * Adds a custom attribute to be used in the HangingProtocol UI and matching rules, including a
 * callback that will be used to calculate the attribute value.
 *
 * @param attributeId The ID used to refer to the attribute (e.g. 'timepointType')
 * @param attributeName The name of the attribute to be displayed (e.g. 'Timepoint Type')
 * @param callback The function used to calculate the attribute value from the other attributes at its level (e.g. study/series/image)
 */

function addCustomAttribute(attributeId, attributeName, callback) {
  CustomAttributeRetrievalCallbacks[attributeId] = {
    name: attributeName,
    callback: callback
  };
}



/***/ }),

/***/ "./hanging-protocols/customViewportSettings.js":
/*!*****************************************************!*\
  !*** ./hanging-protocols/customViewportSettings.js ***!
  \*****************************************************/
/*! exports provided: CustomViewportSettings, addCustomViewportSetting */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomViewportSettings", function() { return CustomViewportSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCustomViewportSetting", function() { return addCustomViewportSetting; });
// Define an empty object to store callbacks that are used to apply custom viewport settings
// after a viewport is rendered.
var CustomViewportSettings = {};
/**
 * Adds a custom setting that can be chosen in the HangingProtocol UI and applied to a Viewport
 *
 * @param settingId The ID used to refer to the setting (e.g. 'displayCADMarkers')
 * @param settingName The name of the setting to be displayed (e.g. 'Display CAD Markers')
 * @param options
 * @param callback A function to be run after a viewport is rendered with a series
 */

function addCustomViewportSetting(settingId, settingName, options, callback) {
  CustomViewportSettings[settingId] = {
    id: settingId,
    text: settingName,
    options: options,
    callback: callback
  };
}



/***/ }),

/***/ "./hanging-protocols/index.js":
/*!************************************!*\
  !*** ./hanging-protocols/index.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ProtocolEngine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ProtocolEngine */ "./hanging-protocols/ProtocolEngine.js");
/* harmony import */ var _protocolStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./protocolStore */ "./hanging-protocols/protocolStore/classes/ProtocolStore.js");
/* harmony import */ var _protocolStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./protocolStore */ "./hanging-protocols/protocolStore/classes/ProtocolStrategy.js");
/* harmony import */ var _customAttributes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./customAttributes */ "./hanging-protocols/customAttributes.js");
/* harmony import */ var _customViewportSettings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./customViewportSettings */ "./hanging-protocols/customViewportSettings.js");




var hangingProtocols = {
  ProtocolEngine: _ProtocolEngine__WEBPACK_IMPORTED_MODULE_0__["default"],
  ProtocolStore: _protocolStore__WEBPACK_IMPORTED_MODULE_1__["default"],
  ProtocolStrategy: _protocolStore__WEBPACK_IMPORTED_MODULE_2__["default"],
  addCustomAttribute: _customAttributes__WEBPACK_IMPORTED_MODULE_3__["addCustomAttribute"],
  addCustomViewportSetting: _customViewportSettings__WEBPACK_IMPORTED_MODULE_4__["addCustomViewportSetting"]
};
/* harmony default export */ __webpack_exports__["default"] = (hangingProtocols);

/***/ }),

/***/ "./hanging-protocols/lib/comparators.js":
/*!**********************************************!*\
  !*** ./hanging-protocols/lib/comparators.js ***!
  \**********************************************/
/*! exports provided: comparators */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "comparators", function() { return comparators; });
var comparators = [{
  id: 'equals',
  name: '= (Equals)',
  validator: 'equals',
  validatorOption: 'value',
  description: 'The attribute must equal this value.'
}, {
  id: 'doesNotEqual',
  name: '!= (Does not equal)',
  validator: 'doesNotEqual',
  validatorOption: 'value',
  description: 'The attribute must not equal this value.'
}, {
  id: 'contains',
  name: 'Contains',
  validator: 'contains',
  validatorOption: 'value',
  description: 'The attribute must contain this value.'
}, {
  id: 'doesNotContain',
  name: 'Does not contain',
  validator: 'doesNotContain',
  validatorOption: 'value',
  description: 'The attribute must not contain this value.'
}, {
  id: 'startsWith',
  name: 'Starts with',
  validator: 'startsWith',
  validatorOption: 'value',
  description: 'The attribute must start with this value.'
}, {
  id: 'endsWith',
  name: 'Ends with',
  validator: 'endsWith',
  validatorOption: 'value',
  description: 'The attribute must end with this value.'
}, {
  id: 'onlyInteger',
  name: 'Only Integers',
  validator: 'numericality',
  validatorOption: 'onlyInteger',
  description: 'Real numbers won\'t be allowed.'
}, {
  id: 'greaterThan',
  name: '> (Greater than)',
  validator: 'numericality',
  validatorOption: 'greaterThan',
  description: 'The attribute has to be greater than this value.'
}, {
  id: 'greaterThanOrEqualTo',
  name: '>= (Greater than or equal to)',
  validator: 'numericality',
  validatorOption: 'greaterThanOrEqualTo',
  description: 'The attribute has to be at least this value.'
}, {
  id: 'lessThanOrEqualTo',
  name: '<= (Less than or equal to)',
  validator: 'numericality',
  validatorOption: 'lessThanOrEqualTo',
  description: 'The attribute can be this value at the most.'
}, {
  id: 'lessThan',
  name: '< (Less than)',
  validator: 'numericality',
  validatorOption: 'lessThan',
  description: 'The attribute has to be less than this value.'
}, {
  id: 'odd',
  name: 'Odd',
  validator: 'numericality',
  validatorOption: 'odd',
  description: 'The attribute has to be odd.'
}, {
  id: 'even',
  name: 'Even',
  validator: 'numericality',
  validatorOption: 'even',
  description: 'The attribute has to be even.'
}]; // Immutable object

Object.freeze(comparators);


/***/ }),

/***/ "./hanging-protocols/lib/removeFromArray.js":
/*!**************************************************!*\
  !*** ./hanging-protocols/lib/removeFromArray.js ***!
  \**************************************************/
/*! exports provided: removeFromArray */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFromArray", function() { return removeFromArray; });
/**
 * Removes the first instance of an element from an array, if an equal value exists
 *
 * @param array
 * @param input
 *
 * @returns {boolean} Whether or not the element was found and removed
 */
var removeFromArray = function removeFromArray(array, input) {
  // If the array is empty, stop here
  if (!array || !array.length) {
    return false;
  }

  var indexToRemove;
  array.forEach(function (value, index) {
    // TODO: Double check whether or not this deep equality check is necessary
    // if (_.isEqual(value, input)) {
    if (value === input) {
      indexToRemove = index;
      return false;
    }
  });

  if (!indexToRemove) {
    return false;
  }

  array.splice(indexToRemove, 1);
  return true;
};



/***/ }),

/***/ "./hanging-protocols/lib/sortByScore.js":
/*!**********************************************!*\
  !*** ./hanging-protocols/lib/sortByScore.js ***!
  \**********************************************/
/*! exports provided: sortByScore */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortByScore", function() { return sortByScore; });
// Sorts an array by score
var sortByScore = function sortByScore(arr) {
  arr.sort(function (a, b) {
    return b.score - a.score;
  });
};



/***/ }),

/***/ "./hanging-protocols/lib/validate.js":
/*!*******************************************!*\
  !*** ./hanging-protocols/lib/validate.js ***!
  \*******************************************/
/*! exports provided: validate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! validate.js */ "../node_modules/validate.js/validate.js");
/* harmony import */ var validate_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(validate_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony reexport (default from non-harmony) */ __webpack_require__.d(__webpack_exports__, "validate", function() { return validate_js__WEBPACK_IMPORTED_MODULE_0___default.a; });


validate_js__WEBPACK_IMPORTED_MODULE_0___default.a.validators.equals = function (value, options, key, attributes) {
  if (options && value !== options.value) {
    return "".concat(key, "must equal ").concat(options.value);
  }
};

validate_js__WEBPACK_IMPORTED_MODULE_0___default.a.validators.doesNotEqual = function (value, options, key) {
  if (options && value === options.value) {
    return "".concat(key, "cannot equal ").concat(options.value);
  }
};

validate_js__WEBPACK_IMPORTED_MODULE_0___default.a.validators.contains = function (value, options, key) {
  if (options && value.indexOf && value.indexOf(options.value) === -1) {
    return "".concat(key, "must contain ").concat(options.value);
  }
};

validate_js__WEBPACK_IMPORTED_MODULE_0___default.a.validators.doesNotContain = function (value, options, key) {
  if (options && value.indexOf && value.indexOf(options.value) !== -1) {
    return "".concat(key, "cannot contain ").concat(options.value);
  }
};

validate_js__WEBPACK_IMPORTED_MODULE_0___default.a.validators.startsWith = function (value, options, key) {
  if (options && value.startsWith && !value.startsWith(options.value)) {
    return "".concat(key, "must start with ").concat(options.value);
  }
};

validate_js__WEBPACK_IMPORTED_MODULE_0___default.a.validators.endsWith = function (value, options, key) {
  if (options && value.endsWith && !value.endsWith(options.value)) {
    return "".concat(key, "must end with ").concat(options.value);
  }
};



/***/ }),

/***/ "./hanging-protocols/protocolStore/classes/ProtocolStore.js":
/*!******************************************************************!*\
  !*** ./hanging-protocols/protocolStore/classes/ProtocolStore.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ProtocolStore; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _classes_Protocol__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../classes/Protocol */ "./hanging-protocols/classes/Protocol.js");


 // The ProtocolStore class allows persisting hanging protocols using different strategies.
// For example, one strategy stores hanging protocols in the application server while
// another strategy stores them in a remote machine, but only one strategy can be used at a time.

var ProtocolStore = /*#__PURE__*/function () {
  function ProtocolStore(strategy) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ProtocolStore);

    this.strategy = strategy;
  }
  /**
  * Get a Protocol instance or array of Protocol instances for the given protocol object or array
  * @param  {Object|array} protocolObject Protocol plain object or array of Protocol plain objects
  * @return {Protocol|array} Protocol instance or array of Protocol intances for the given protocol object or array
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ProtocolStore, [{
    key: "onReady",

    /**
    * Registers a function to be called when the protocol store is ready to persist hanging protocols
    *
    * NOTE: Strategies should implement this function
    *
    * @param callback The function to be called as a callback
    */
    value: function onReady(callback) {
      this.strategy.onReady(callback);
    }
    /**
    * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols
    *
    * NOTE: Strategies should implement this function
    *
    * @param protocolId The protocol ID used to find the hanging protocol
    * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols
    */

  }, {
    key: "getProtocol",
    value: function getProtocol(protocolId) {
      var result = this.strategy.getProtocol(protocolId);
      return ProtocolStore.getProtocolInstance(result);
    }
    /**
    * Stores the hanging protocol
    *
    * NOTE: Strategies should implement this function
    *
    * @param protocol The hanging protocol to be stored
    */

  }, {
    key: "addProtocol",
    value: function addProtocol(protocol) {
      this.strategy.addProtocol(protocol);
    }
    /**
    * Updates the hanging protocol by protocolId
    *
    * NOTE: Strategies should implement this function
    *
    * @param protocolId The protocol ID used to find the hanging protocol to update
    * @param protocol The updated hanging protocol
    */

  }, {
    key: "updateProtocol",
    value: function updateProtocol(protocolId, protocol) {
      this.strategy.updateProtocol(protocolId, protocol);
    }
    /**
    * Removes the hanging protocol
    *
    * NOTE: Strategies should implement this function
    *
    * @param protocolId The protocol ID used to remove the hanging protocol
    */

  }, {
    key: "removeProtocol",
    value: function removeProtocol(protocolId) {
      this.strategy.removeProtocol(protocolId);
    }
  }], [{
    key: "getProtocolInstance",
    value: function getProtocolInstance(protocolObject) {
      var result = protocolObject; // If result is an array of protocols objects

      if (result instanceof Array) {
        result.forEach(function (protocol, index) {
          // Check if protocol is an instance of Protocol
          if (!(protocol instanceof _classes_Protocol__WEBPACK_IMPORTED_MODULE_2__["default"])) {
            var protocolInstance = new _classes_Protocol__WEBPACK_IMPORTED_MODULE_2__["default"]();
            protocolInstance.fromObject(protocol);
            result[index] = protocolInstance;
          }
        });
      } else if (result !== void 0 && !(result instanceof _classes_Protocol__WEBPACK_IMPORTED_MODULE_2__["default"])) {
        // Check if result exists and is not an instance of Protocol
        var protocolInstance = new _classes_Protocol__WEBPACK_IMPORTED_MODULE_2__["default"]();
        protocolInstance.fromObject(result);
        result = protocolInstance;
      }

      return result;
    }
  }]);

  return ProtocolStore;
}();



/***/ }),

/***/ "./hanging-protocols/protocolStore/classes/ProtocolStrategy.js":
/*!*********************************************************************!*\
  !*** ./hanging-protocols/protocolStore/classes/ProtocolStrategy.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ProtocolStrategy; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../log */ "./log.js");
/* harmony import */ var _defaultProtocol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../defaultProtocol */ "./hanging-protocols/protocolStore/defaultProtocol.js");





var ProtocolStrategy = /*#__PURE__*/function () {
  function ProtocolStrategy() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ProtocolStrategy);

    this.hangingProtocols = new Map();
    this.defaultsAdded = false;
  }
  /**
  * Registers a function to be called when the hangingProtocols collection is subscribed
  * The callback is called only one time when the subscription is ready
  *
  * @param callback The function to be called as a callback
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ProtocolStrategy, [{
    key: "onReady",
    value: function onReady(callback) {
      if (!this.defaultsAdded) {
        _log__WEBPACK_IMPORTED_MODULE_2__["default"].info('Inserting the default hanging protocol...');
        this.addProtocol(_defaultProtocol__WEBPACK_IMPORTED_MODULE_3__["default"]);
        this.defaultsAdded = true;
      }

      callback();
    }
    /**
    * Gets the hanging protocol by protocolId if defined, otherwise all stored hanging protocols
    *
    * @param protocolId The protocol ID used to find the hanging protocol
    * @returns {object|array} The hanging protocol by protocolId or array of the stored hanging protocols
    */

  }, {
    key: "getProtocol",
    value: function getProtocol(protocolId) {
      // Return the hanging protocol by protocolId if defined
      if (protocolId) {
        return this.hangingProtocols.get(protocolId);
      } // Otherwise, return all protocols


      return Array.from(this.hangingProtocols.values());
    }
    /**
    * Stores the hanging protocol
    *
    * @param protocol The hanging protocol to be stored
    */

  }, {
    key: "addProtocol",
    value: function addProtocol(protocol) {
      this.hangingProtocols.set(protocol.id, protocol);
    }
    /**
    * Updates the hanging protocol by protocolId
    *
    * @param protocolId The protocol ID used to find the hanging protocol to update
    * @param protocol The updated hanging protocol
    */

  }, {
    key: "updateProtocol",
    value: function updateProtocol(protocolId, protocol) {
      if (!this.hangingProtocols.has(protocolId)) {
        return;
      }

      this.hangingProtocols.set(protocolId, protocol);
    }
    /**
    * Removes the hanging protocol
    *
    * @param protocolId The protocol ID used to remove the hanging protocol
    */

  }, {
    key: "removeProtocol",
    value: function removeProtocol(protocolId) {
      if (!this.hangingProtocols.has(protocolId)) {
        return;
      }

      this.hangingProtocols["delete"](protocolId);
    }
  }]);

  return ProtocolStrategy;
}();



/***/ }),

/***/ "./hanging-protocols/protocolStore/defaultProtocol.js":
/*!************************************************************!*\
  !*** ./hanging-protocols/protocolStore/defaultProtocol.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _classes_Protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../classes/Protocol */ "./hanging-protocols/classes/Protocol.js");
/* harmony import */ var _classes_ViewportStructure__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes/ViewportStructure */ "./hanging-protocols/classes/ViewportStructure.js");
/* harmony import */ var _classes_Viewport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes/Viewport */ "./hanging-protocols/classes/Viewport.js");
/* harmony import */ var _classes_Stage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../classes/Stage */ "./hanging-protocols/classes/Stage.js");





function getDefaultProtocol() {
  var protocol = new _classes_Protocol__WEBPACK_IMPORTED_MODULE_0__["default"]('Default');
  protocol.id = 'defaultProtocol';
  protocol.locked = true;
  var oneByOne = new _classes_ViewportStructure__WEBPACK_IMPORTED_MODULE_1__["default"]('grid', {
    Rows: 1,
    Columns: 1
  });
  var viewport = new _classes_Viewport__WEBPACK_IMPORTED_MODULE_2__["default"]();
  var first = new _classes_Stage__WEBPACK_IMPORTED_MODULE_3__["default"](oneByOne, 'oneByOne');
  first.viewports.push(viewport);
  protocol.stages.push(first);
  return protocol;
}

var defaultProtocol = getDefaultProtocol();
/* harmony default export */ __webpack_exports__["default"] = (defaultProtocol);

/***/ }),

/***/ "./header.js":
/*!*******************!*\
  !*** ./header.js ***!
  \*******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// import Dropdown from './ui/dropdown/class';

/*
 * Defines the base OHIF header object
 */
// const dropdown = new OHIF.ui.Dropdown();
var header = {};
/* harmony default export */ __webpack_exports__["default"] = (header);

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! exports provided: MODULE_TYPES, CommandsManager, ExtensionManager, HotkeysManager, ServicesManager, utils, hotkeys, studies, redux, classes, metadata, header, cornerstone, string, ui, user, object, log, DICOMWeb, DICOMSR, measurements, hangingProtocols, UINotificationService, UIModalService, UIDialogService, MeasurementService, ViewerCore, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ViewerCore", function() { return ViewerCore; });
/* harmony import */ var _extensions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extensions */ "./extensions/MODULE_TYPES.js");
/* harmony import */ var _extensions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./extensions */ "./extensions/ExtensionManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MODULE_TYPES", function() { return _extensions__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ExtensionManager", function() { return _extensions__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./services */ "./services/ServicesManager.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./services */ "./services/UINotificationService/index.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services */ "./services/UIModalService/index.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services */ "./services/UIDialogService/index.js");
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./services */ "./services/MeasurementService/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ServicesManager", function() { return _services__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UINotificationService", function() { return _services__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UIModalService", function() { return _services__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UIDialogService", function() { return _services__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurementService", function() { return _services__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./classes */ "./classes/CommandsManager.js");
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./classes */ "./classes/HotkeysManager.js");
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./classes */ "./classes/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CommandsManager", function() { return _classes__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HotkeysManager", function() { return _classes__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "classes", function() { return _classes__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./DICOMWeb */ "./DICOMWeb/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DICOMWeb", function() { return _DICOMWeb__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _DICOMSR__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./DICOMSR */ "./DICOMSR/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DICOMSR", function() { return _DICOMSR__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _cornerstone__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cornerstone */ "./cornerstone.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cornerstone", function() { return _cornerstone__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _hanging_protocols__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./hanging-protocols */ "./hanging-protocols/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hangingProtocols", function() { return _hanging_protocols__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./header */ "./header.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "header", function() { return _header__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./log */ "./log.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "log", function() { return _log__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _measurements__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./measurements */ "./measurements/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "measurements", function() { return _measurements__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _classes_metadata__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./classes/metadata */ "./classes/metadata/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "metadata", function() { return _classes_metadata__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _object__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./object */ "./object.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "object", function() { return _object__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _redux__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./redux */ "./redux/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "redux", function() { return _redux__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./string */ "./string.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "string", function() { return _string__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _studies__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./studies */ "./studies/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "studies", function() { return _studies__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _ui__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./ui */ "./ui/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ui", function() { return _ui__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./user */ "./user.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "user", function() { return _user__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./utils */ "./utils/index.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./utils */ "./utils/hotkeys/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utils", function() { return _utils__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hotkeys", function() { return _utils__WEBPACK_IMPORTED_MODULE_25__["default"]; });




















var ViewerCore = {
  MODULE_TYPES: _extensions__WEBPACK_IMPORTED_MODULE_0__["default"],
  //
  CommandsManager: _classes__WEBPACK_IMPORTED_MODULE_7__["default"],
  ExtensionManager: _extensions__WEBPACK_IMPORTED_MODULE_1__["default"],
  HotkeysManager: _classes__WEBPACK_IMPORTED_MODULE_8__["default"],
  ServicesManager: _services__WEBPACK_IMPORTED_MODULE_2__["default"],
  //
  utils: _utils__WEBPACK_IMPORTED_MODULE_24__["default"],
  hotkeys: _utils__WEBPACK_IMPORTED_MODULE_25__["default"],
  studies: _studies__WEBPACK_IMPORTED_MODULE_21__["default"],
  redux: _redux__WEBPACK_IMPORTED_MODULE_19__["default"],
  classes: _classes__WEBPACK_IMPORTED_MODULE_9__["default"],
  metadata: _classes_metadata__WEBPACK_IMPORTED_MODULE_17__["default"],
  header: _header__WEBPACK_IMPORTED_MODULE_14__["default"],
  cornerstone: _cornerstone__WEBPACK_IMPORTED_MODULE_12__["default"],
  string: _string__WEBPACK_IMPORTED_MODULE_20__["default"],
  ui: _ui__WEBPACK_IMPORTED_MODULE_22__["default"],
  user: _user__WEBPACK_IMPORTED_MODULE_23__["default"],
  object: _object__WEBPACK_IMPORTED_MODULE_18__["default"],
  log: _log__WEBPACK_IMPORTED_MODULE_15__["default"],
  DICOMWeb: _DICOMWeb__WEBPACK_IMPORTED_MODULE_10__["default"],
  DICOMSR: _DICOMSR__WEBPACK_IMPORTED_MODULE_11__["default"],
  viewer: {},
  measurements: _measurements__WEBPACK_IMPORTED_MODULE_16__["default"],
  hangingProtocols: _hanging_protocols__WEBPACK_IMPORTED_MODULE_13__["default"],
  //
  UINotificationService: _services__WEBPACK_IMPORTED_MODULE_3__["default"],
  UIModalService: _services__WEBPACK_IMPORTED_MODULE_4__["default"],
  UIDialogService: _services__WEBPACK_IMPORTED_MODULE_5__["default"],
  MeasurementService: _services__WEBPACK_IMPORTED_MODULE_6__["default"]
};


/* harmony default export */ __webpack_exports__["default"] = (ViewerCore);

/***/ }),

/***/ "./lib/cornerstone.js":
/*!****************************!*\
  !*** ./lib/cornerstone.js ***!
  \****************************/
/*! exports provided: getBoundingBox, pixelToPage, repositionTextBox */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBoundingBox", function() { return getBoundingBox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pixelToPage", function() { return pixelToPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "repositionTextBox", function() { return repositionTextBox; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var cornerstone_tools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! cornerstone-tools */ "cornerstone-tools");
/* harmony import */ var cornerstone_tools__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(cornerstone_tools__WEBPACK_IMPORTED_MODULE_3__);



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




function getBoundingBox(context, textLines, x, y, options) {
  if (Object.prototype.toString.call(textLines) !== '[object Array]') {
    textLines = [textLines];
  }

  var padding = 5;
  var font = cornerstone_tools__WEBPACK_IMPORTED_MODULE_3___default.a.textStyle.getFont();
  var fontSize = cornerstone_tools__WEBPACK_IMPORTED_MODULE_3___default.a.textStyle.getFontSize();
  context.save();
  context.font = font;
  context.textBaseline = 'top'; // Find the longest text width in the array of text data

  var maxWidth = 0;
  textLines.forEach(function (text) {
    // Get the text width in the current font
    var width = context.measureText(text).width; // Find the maximum with for all the text Rows;

    maxWidth = Math.max(maxWidth, width);
  }); // Calculate the bounding box for this text box

  var boundingBox = {
    width: maxWidth + padding * 2,
    height: padding + textLines.length * (fontSize + padding)
  };

  if (options && options.centering && options.centering.x === true) {
    x -= boundingBox.width / 2;
  }

  if (options && options.centering && options.centering.y === true) {
    y -= boundingBox.height / 2;
  }

  boundingBox.left = x;
  boundingBox.top = y;
  context.restore(); // Return the bounding box so it can be used for pointNearHandle

  return boundingBox;
}

function pixelToPage(element, position) {
  var enabledElement = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.getEnabledElement(element);
  var result = {
    x: 0,
    y: 0
  }; // Stop here if the cornerstone element is not enabled or position is not an object

  if (!enabledElement || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_1___default()(position) !== 'object') {
    return result;
  }

  var canvas = enabledElement.canvas;
  var canvasOffset = $(canvas).offset();
  result.x += canvasOffset.left;
  result.y += canvasOffset.top;
  var canvasPosition = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pixelToCanvas(element, position);
  result.x += canvasPosition.x;
  result.y += canvasPosition.y;
  return result;
}

function repositionTextBox(eventData, measurementData, config) {
  // Stop here if it's not a measurement creating
  if (!measurementData.isCreating) {
    return;
  }

  var element = eventData.element;
  var enabledElement = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.getEnabledElement(element);
  var image = enabledElement.image;
  var allowedBorders = OHIF.uiSettings.autoPositionMeasurementsTextCallOuts;
  var allow = {
    T: !allowedBorders || allowedBorders.includes('T'),
    R: !allowedBorders || allowedBorders.includes('R'),
    B: !allowedBorders || allowedBorders.includes('B'),
    L: !allowedBorders || allowedBorders.includes('L')
  };

  var getAvailableBlankAreas = function getAvailableBlankAreas(enabledElement, labelWidth, labelHeight) {
    var element = enabledElement.element,
        canvas = enabledElement.canvas,
        image = enabledElement.image;
    var topLeft = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pixelToCanvas(element, {
      x: 0,
      y: 0
    });
    var bottomRight = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pixelToCanvas(element, {
      x: image.width,
      y: image.height
    });
    var $canvas = $(canvas);
    var canvasWidth = $canvas.outerWidth();
    var canvasHeight = $canvas.outerHeight();
    var result = {};
    result['x-1'] = allow.L && topLeft.x > labelWidth;
    result['y-1'] = allow.T && topLeft.y > labelHeight;
    result.x1 = allow.R && canvasWidth - bottomRight.x > labelWidth;
    result.y1 = allow.B && canvasHeight - bottomRight.y > labelHeight;
    return result;
  };

  var getRenderingInformation = function getRenderingInformation(limits, tool) {
    var mid = {};
    mid.x = limits.x / 2;
    mid.y = limits.y / 2;
    var directions = {};
    directions.x = tool.x < mid.x ? -1 : 1;
    directions.y = tool.y < mid.y ? -1 : 1;
    var diffX = directions.x < 0 ? tool.x : limits.x - tool.x;
    var diffY = directions.y < 0 ? tool.y : limits.y - tool.y;
    var cornerAxis = diffY < diffX ? 'y' : 'x';
    var map = {
      'x-1': 'L',
      'y-1': 'T',
      x1: 'R',
      y1: 'B'
    };
    var current = 0;

    while (current < 4 && !allow[map[cornerAxis + directions[cornerAxis]]]) {
      // Invert the direction for the next iteration
      directions[cornerAxis] *= -1; // Invert the tempCornerAxis

      cornerAxis = cornerAxis === 'x' ? 'y' : 'x';
      current++;
    }

    return {
      directions: directions,
      cornerAxis: cornerAxis
    };
  };

  var calculateAxisCenter = function calculateAxisCenter(axis, start, end) {
    var a = start[axis];
    var b = end[axis];
    var lowest = Math.min(a, b);
    var highest = Math.max(a, b);
    return lowest + (highest - lowest) / 2;
  };

  var getTextBoxSizeInPixels = function getTextBoxSizeInPixels(element, bounds) {
    var topLeft = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pageToPixel(element, 0, 0);
    var bottomRight = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pageToPixel(element, bounds.x, bounds.y);
    return {
      x: bottomRight.x - topLeft.x,
      y: bottomRight.y - topLeft.y
    };
  };

  function getTextBoxOffset(config, cornerAxis, toolAxis, boxSize) {
    config = config || {};
    var centering = config.centering || {};
    var centerX = !!centering.x;
    var centerY = !!centering.y;
    var halfBoxSizeX = boxSize.x / 2;
    var halfBoxSizeY = boxSize.y / 2;
    var offset = {
      x: [],
      y: []
    };

    if (cornerAxis === 'x') {
      var offsetY = centerY ? 0 : halfBoxSizeY;
      offset.x[-1] = centerX ? halfBoxSizeX : 0;
      offset.x[1] = centerX ? -halfBoxSizeX : -boxSize.x;
      offset.y[-1] = offsetY;
      offset.y[1] = offsetY;
    } else {
      var offsetX = centerX ? 0 : halfBoxSizeX;
      offset.x[-1] = offsetX;
      offset.x[1] = offsetX;
      offset.y[-1] = centerY ? halfBoxSizeY : 0;
      offset.y[1] = centerY ? -halfBoxSizeY : -boxSize.y;
    }

    return offset;
  }

  var handles = measurementData.handles;
  var textBox = handles.textBox;
  var $canvas = $(enabledElement.canvas);
  var canvasWidth = $canvas.outerWidth();
  var canvasHeight = $canvas.outerHeight();
  var offset = $canvas.offset();
  var canvasDimensions = {
    x: canvasWidth,
    y: canvasHeight
  };
  var bounds = {};
  bounds.x = textBox.boundingBox.width;
  bounds.y = textBox.boundingBox.height;

  var getHandlePosition = function getHandlePosition(key) {
    var _handles$key = handles[key],
        x = _handles$key.x,
        y = _handles$key.y;
    return {
      x: x,
      y: y
    };
  };

  var start = getHandlePosition('start');
  var end = getHandlePosition('end');
  var tool = {};
  tool.x = calculateAxisCenter('x', start, end);
  tool.y = calculateAxisCenter('y', start, end);
  var limits = {};
  limits.x = image.width;
  limits.y = image.height;

  var _getRenderingInformat = getRenderingInformation(limits, tool),
      directions = _getRenderingInformat.directions,
      cornerAxis = _getRenderingInformat.cornerAxis;

  var availableAreas = getAvailableBlankAreas(enabledElement, bounds.x, bounds.y);

  var tempDirections = _objectSpread({}, directions);

  var tempCornerAxis = cornerAxis;
  var foundPlace = false;
  var current = 0;

  while (current < 4) {
    if (availableAreas[tempCornerAxis + tempDirections[tempCornerAxis]]) {
      foundPlace = true;
      break;
    } // Invert the direction for the next iteration


    tempDirections[tempCornerAxis] *= -1; // Invert the tempCornerAxis

    tempCornerAxis = tempCornerAxis === 'x' ? 'y' : 'x';
    current++;
  }

  var cornerAxisPosition;

  if (foundPlace) {
    directions = _objectSpread({}, directions, {}, tempDirections);
    cornerAxis = tempCornerAxis;
    cornerAxisPosition = directions[cornerAxis] < 0 ? 0 : limits[cornerAxis];
  } else {
    limits = _objectSpread({}, limits, {}, canvasDimensions);
    var toolPositionOnCanvas = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pixelToCanvas(element, tool);
    var renderingInformation = getRenderingInformation(limits, toolPositionOnCanvas);
    directions = renderingInformation.directions;
    cornerAxis = renderingInformation.cornerAxis;
    var position = {
      x: directions.x < 0 ? offset.left : offset.left + canvasWidth,
      y: directions.y < 0 ? offset.top : offset.top + canvasHeight
    };
    var pixelPosition = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pageToPixel(element, position.x, position.y);
    cornerAxisPosition = pixelPosition[cornerAxis];
  }

  var toolAxis = cornerAxis === 'x' ? 'y' : 'x';
  var boxSize = getTextBoxSizeInPixels(element, bounds);
  textBox[cornerAxis] = cornerAxisPosition;
  textBox[toolAxis] = tool[toolAxis]; // Adjust the text box position reducing its size from the corner axis

  var textBoxOffset = getTextBoxOffset(config, cornerAxis, toolAxis, boxSize);
  textBox[cornerAxis] += textBoxOffset[cornerAxis][directions[cornerAxis]]; // Preventing the text box from partially going outside the canvas area

  var topLeft = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pixelToCanvas(element, textBox);
  var bottomRight = {
    x: topLeft.x + bounds.x,
    y: topLeft.y + bounds.y
  };
  var canvasBorders = {
    x0: offset.left,
    y0: offset.top,
    x1: offset.left + canvasWidth,
    y1: offset.top + canvasHeight
  };

  if (topLeft[toolAxis] < 0) {
    var x = canvasBorders.x0;
    var y = canvasBorders.y0;

    var _pixelPosition = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pageToPixel(element, x, y);

    textBox[toolAxis] = _pixelPosition[toolAxis];
  } else if (bottomRight[toolAxis] > canvasDimensions[toolAxis]) {
    var _x = canvasBorders.x1 - bounds.x;

    var _y = canvasBorders.y1 - bounds.y;

    var _pixelPosition2 = cornerstone_core__WEBPACK_IMPORTED_MODULE_2___default.a.pageToPixel(element, _x, _y);

    textBox[toolAxis] = _pixelPosition2[toolAxis];
  }
}



/***/ }),

/***/ "./log.js":
/*!****************!*\
  !*** ./log.js ***!
  \****************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var log = {
  error: console.error,
  warn: console.warn,
  info: console.log,
  trace: console.trace,
  debug: console.debug,
  time: console.time,
  timeEnd: console.timeEnd
};
/* harmony default export */ __webpack_exports__["default"] = (log);

/***/ }),

/***/ "./measurements/classes/MeasurementApi.js":
/*!************************************************!*\
  !*** ./measurements/classes/MeasurementApi.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return MeasurementApi; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var cornerstone_tools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cornerstone-tools */ "cornerstone-tools");
/* harmony import */ var cornerstone_tools__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(cornerstone_tools__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../log */ "./log.js");
/* harmony import */ var _lib_getLabel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../lib/getLabel */ "./measurements/lib/getLabel.js");
/* harmony import */ var _lib_getDescription__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../lib/getDescription */ "./measurements/lib/getDescription.js");
/* harmony import */ var _lib_getImageIdForImagePath__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../lib/getImageIdForImagePath */ "./measurements/lib/getImageIdForImagePath.js");
/* harmony import */ var _utils_guid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../utils/guid */ "./utils/guid.js");
/* harmony import */ var _utils_studyMetadataManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../utils/studyMetadataManager */ "./utils/studyMetadataManager.js");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../configuration */ "./measurements/configuration.js");






function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_4___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }











var configuration = _objectSpread({}, _configuration__WEBPACK_IMPORTED_MODULE_13__["measurementApiDefaultConfig"]);

var MeasurementApi = /*#__PURE__*/function () {
  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(MeasurementApi, null, [{
    key: "setConfiguration",

    /**
     * Set configuration: It should merge default configuration with any new one
     *
     * @static
     * @param {Object} config
     * @param {Object} config.server
     * @param {string} config.server.type - The server type
     * @param {string} config.server.wadoRoot - The server wado URL root
     * @param {Array} config.measurementTools
     * @param {string} config.measurementTools[].id - The tool group id
     * @param {string} config.measurementTools[].name - The tool group name
     * @param {Array} config.measurementTools[].childTools - The child tool's configuration
     * @param {Object} config.dataExchange
     * @param {Function} config.dataExchange.store - Function that store measurement data
     * @param {Function} config.dataExchange.retrieve - Function that retrieves measurement data
     *
     * @memberof MeasurementApi
     */
    value: function setConfiguration(config) {
      Object.assign(configuration, config);
    }
  }, {
    key: "getConfiguration",
    value: function getConfiguration() {
      return configuration;
    }
  }, {
    key: "getToolsGroupsMap",
    value: function getToolsGroupsMap() {
      var toolsGroupsMap = {};
      configuration.measurementTools.forEach(function (toolGroup) {
        toolGroup.childTools.forEach(function (tool) {
          return toolsGroupsMap[tool.id] = toolGroup.id;
        });
      });
      return toolsGroupsMap;
    }
  }, {
    key: "getToolGroupTools",
    value: function getToolGroupTools(toolsGroupsMap) {
      var result = {};
      Object.keys(toolsGroupsMap).forEach(function (toolType) {
        var toolGroupId = toolsGroupsMap[toolType];

        if (!result[toolGroupId]) {
          result[toolGroupId] = [];
        }

        result[toolGroupId].push(toolType);
      });
      return result;
    }
  }, {
    key: "getToolConfiguration",
    value: function getToolConfiguration(toolType) {
      var configuration = MeasurementApi.getConfiguration();
      var toolsGroupsMap = MeasurementApi.getToolsGroupsMap();
      var toolGroupId = toolsGroupsMap[toolType];
      var toolGroup = configuration.measurementTools.find(function (toolGroup) {
        return toolGroup.id === toolGroupId;
      });
      var tool;

      if (toolGroup) {
        tool = toolGroup.childTools.find(function (tool) {
          return tool.id === toolType;
        });
      }

      return {
        toolGroupId: toolGroupId,
        toolGroup: toolGroup,
        tool: tool
      };
    }
  }, {
    key: "syncMeasurementAndToolData",
    value: function syncMeasurementAndToolData(measurement) {
      _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('syncMeasurementAndToolData', measurement);
      var measurementLabel = Object(_lib_getLabel__WEBPACK_IMPORTED_MODULE_8__["default"])(measurement);

      if (measurementLabel) {
        measurement.labels = [measurementLabel];
      }

      var toolState = cornerstone_tools__WEBPACK_IMPORTED_MODULE_5___default.a.globalImageIdSpecificToolStateManager.saveToolState(); // Stop here if the metadata for the measurement's study is not loaded yet

      var StudyInstanceUID = measurement.StudyInstanceUID;
      var metadata = _utils_studyMetadataManager__WEBPACK_IMPORTED_MODULE_12__["default"].get(StudyInstanceUID);
      if (!metadata) return; // Iterate each child tool if the current tool has children

      var toolType = measurement.toolType;

      var _MeasurementApi$getTo = MeasurementApi.getToolConfiguration(toolType),
          tool = _MeasurementApi$getTo.tool;

      if (Array.isArray(tool.childTools)) {
        tool.childTools.forEach(function (childToolKey) {
          var childMeasurement = measurement[childToolKey];
          if (!childMeasurement) return;
          childMeasurement._id = measurement._id;
          childMeasurement.measurementNumber = measurement.measurementNumber;
          childMeasurement.lesionNamingNumber = measurement.lesionNamingNumber;
          MeasurementApi.syncMeasurementAndToolData(childMeasurement);
        });
        return;
      }

      var imageId = Object(_lib_getImageIdForImagePath__WEBPACK_IMPORTED_MODULE_10__["default"])(measurement.imagePath); // If no tool state exists for this imageId, create an empty object to store it

      if (!toolState[imageId]) {
        toolState[imageId] = {};
      }

      var currentToolState = toolState[imageId][toolType];
      var toolData = currentToolState && currentToolState.data; // Check if we already have toolData for this imageId and toolType

      if (toolData && toolData.length) {
        // If we have toolData, we should search it for any data related to the current Measurement
        var _toolData = toolState[imageId][toolType].data; // Create a flag so we know if we've successfully updated the Measurement in the toolData

        var alreadyExists = false; // Loop through the toolData to search for this Measurement

        _toolData.forEach(function (tool) {
          // Break the loop if this isn't the Measurement we are looking for
          if (tool._id !== measurement._id) {
            return;
          } // If we have found the Measurement, set the flag to True


          alreadyExists = true; // Update the toolData from the Measurement data

          Object.assign(tool, measurement);
          return false;
        }); // If we have found the Measurement we intended to update, we can stop this function here


        if (alreadyExists === true) {
          return;
        }
      } else {
        // If no toolData exists for this toolType, create an empty array to hold some
        toolState[imageId][toolType] = {
          data: []
        };
      } // If we have reached this point, it means we haven't found the Measurement we are looking for
      // in the current toolData. This means we need to add it.
      // Add the MeasurementData into the toolData for this imageId


      toolState[imageId][toolType].data.push(measurement);
      cornerstone_tools__WEBPACK_IMPORTED_MODULE_5___default.a.globalImageIdSpecificToolStateManager.restoreToolState(toolState);
    }
  }, {
    key: "isToolIncluded",
    value: function isToolIncluded(tool) {
      return tool.options && tool.options.caseProgress && tool.options.caseProgress.include;
    }
  }]);

  function MeasurementApi(timepointApi) {
    var _this = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, MeasurementApi);

    this.temporaryDeletedMeasurement = {};

    this.getTemporaryDeletedMeasurements = function (StudyInstanceUID) {
      return _this.temporaryDeletedMeasurement[StudyInstanceUID] || [];
    };

    this.addTemporaryDeletedMeasurements = function (measurementData) {
      var StudyInstanceUID = measurementData.StudyInstanceUID;

      var temporaryDeleted = _this.getTemporaryDeletedMeasurements(StudyInstanceUID); // prevent duplicated measurement


      if (temporaryDeleted.length === 0 || temporaryDeleted.findIndex(function (measurement) {
        return measurement.id === measurementData.id;
      }) === -1) {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('add measurement to temporary deleted list', measurementData);
        temporaryDeleted.push(measurementData);
        _this.temporaryDeletedMeasurement[StudyInstanceUID] = temporaryDeleted;
      }
    };

    this.clearTemporaryDeletedMeasurement = function (StudyInstanceUID) {
      delete _this.temporaryDeletedMeasurement[StudyInstanceUID];
    };

    if (MeasurementApi.Instance) {
      MeasurementApi.Instance.initialize(timepointApi, options);
      return MeasurementApi.Instance;
    }

    this.initialize(timepointApi, options);
    MeasurementApi.Instance = this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(MeasurementApi, [{
    key: "initialize",
    value: function initialize(timepointApi) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.timepointApi = timepointApi;
      this.options = options;
      this.toolGroups = {};
      this.tools = {};
      this.toolsGroupsMap = MeasurementApi.getToolsGroupsMap();
      this.toolGroupTools = MeasurementApi.getToolGroupTools(this.toolsGroupsMap); // Iterate over each tool group and create collection

      configuration.measurementTools.forEach(function (toolGroup) {
        _this2.toolGroups[toolGroup.id] = []; // Iterate over each tool group child tools (e.g. bidirectional, targetCR, etc.) and create collection

        toolGroup.childTools.forEach(function (tool) {
          _this2.tools[tool.id] = [];
        });
      });
    }
  }, {
    key: "onMeasurementsUpdated",
    value: function onMeasurementsUpdated() {
      if (typeof this.options.onMeasurementsUpdated !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].warn('Measurements update callback is not defined');
        return;
      }

      this.options.onMeasurementsUpdated(_objectSpread({}, this.tools));
    }
  }, {
    key: "processMeasurementData",
    value: function processMeasurementData(measurementData) {
      var _this3 = this;

      if (measurementData) {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('Measurement data retrieval');
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].info(measurementData);
        Object.keys(measurementData).forEach(function (measurementTypeId) {
          var measurements = measurementData[measurementTypeId];
          measurements.forEach(function (measurement) {
            var toolType = measurement.toolType;

            _this3.addMeasurement(toolType, measurement);
          });
        });
      } // Synchronize the new tool data


      this.syncMeasurementsAndToolData();

      try {
        cornerstone_core__WEBPACK_IMPORTED_MODULE_6___default.a.getEnabledElements().forEach(function (enabledElement) {
          cornerstone_core__WEBPACK_IMPORTED_MODULE_6___default.a.updateImage(enabledElement.element);
        });
      } catch (e) {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].error(e);
      } // Let others know that the measurements are updated


      this.onMeasurementsUpdated();
    }
  }, {
    key: "retrieveMeasurements",
    value: function retrieveMeasurements(filter) {
      var _this4 = this;

      var retrievalFn = configuration.dataExchange.retrieve;
      var server = configuration.server;

      if (typeof retrievalFn !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].error('Measurement retrieval function has not been configured.');
        return;
      }

      return new Promise(function (resolve, reject) {
        retrievalFn(server, filter).then(function (measurementData) {
          _this4.processMeasurementData(measurementData);

          resolve();
        }, reject);
      });
    }
  }, {
    key: "storeMeasurements",
    value: function storeMeasurements(timepointId, options) {
      var _this5 = this;

      var server = configuration.server;
      var storeFn = configuration.dataExchange.store;

      if (typeof storeFn !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].error('Measurement store function has not been configured.');
        return;
      }

      var measurementData = {};
      configuration.measurementTools.forEach(function (toolGroup) {
        // Skip the tool groups excluded from case progress
        if (!MeasurementApi.isToolIncluded(toolGroup)) {
          return;
        }

        toolGroup.childTools.forEach(function (tool) {
          // Skip the tools excluded from case progress
          if (!MeasurementApi.isToolIncluded(tool)) {
            return;
          }

          if (!measurementData[toolGroup.id]) {
            measurementData[toolGroup.id] = [];
          }

          measurementData[toolGroup.id] = measurementData[toolGroup.id].concat(_this5.tools[tool.id]);
        });
      });
      var timepointFilter = timepointId ? function (tp) {
        return tp.timepointId === timepointId;
      } : null;
      var timepoints = this.timepointApi.all(timepointFilter);
      var timepointIds = timepoints.map(function (t) {
        return t.timepointId;
      });
      var PatientID = timepoints[0].PatientID;
      var filter = {
        PatientID: PatientID,
        timepointIds: timepointIds
      };
      _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('Saving Measurements for timepoints:', timepoints);
      return storeFn(measurementData, filter, server, options).then(function (measurementData) {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('Measurement storage completed', measurementData);

        _this5.processMeasurementData(measurementData);

        return measurementData;
      });
    }
  }, {
    key: "calculateLesionNamingNumber",
    value: function calculateLesionNamingNumber(measurements) {
      var sortedMeasurements = measurements.sort(function (a, b) {
        if (a.lesionNamingNumber > b.lesionNamingNumber) {
          return 1;
        }

        if (a.lesionNamingNumber < b.lesionNamingNumber) {
          return -1;
        }

        return 0;
      }); //  Calculate lesion naming number starting from 1 not to miss any measurement (as seen in MM)
      //      A measurement from beginning of the list might be deleted, so a new measurement should replace that

      var i;

      for (i = 1; i < sortedMeasurements.length + 1; i++) {
        if (i < sortedMeasurements[i - 1].lesionNamingNumber) {
          break;
        }
      }

      return i;
    }
  }, {
    key: "fetch",
    value: function fetch(toolGroupId, filter) {
      var _this6 = this;

      if (!this.toolGroups[toolGroupId]) {
        throw new Error("MeasurementApi: No Collection with the id: ".concat(toolGroupId));
      }

      var items;

      if (filter) {
        items = this.toolGroups[toolGroupId].filter(filter);
      } else {
        items = this.toolGroups[toolGroupId];
      }

      return items.map(function (item) {
        if (item.toolId) {
          return _this6.tools[item.toolId].find(function (tool) {
            return tool._id === item.toolItemId;
          });
        }

        return {
          lesionNamingNumber: item.lesionNamingNumber
        };
      });
    }
  }, {
    key: "getFirstMeasurement",
    value: function getFirstMeasurement(timepointId) {
      var _this7 = this;

      // Get child tools from all included tool groups
      var childTools = [];
      configuration.measurementTools.forEach(function (toolGroup) {
        // Skip the tool groups excluded from case progress
        if (!MeasurementApi.isToolIncluded(toolGroup)) {
          return false;
        }

        childTools = childTools.concat(toolGroup.childTools);
      }); // Get all included child tools

      var includedChildTools = childTools.filter(function (tool) {
        return MeasurementApi.isToolIncluded(tool);
      }); // Get the first measurement for the given timepoint

      var measurement;
      includedChildTools.every(function (tool) {
        measurement = _this7.tools[tool.id].find(function (t) {
          return t.timepointId === timepointId && t.measurementNumber === 1;
        });
        return !measurement;
      }); // Return the found measurement object or undefined if not found

      return measurement;
    }
  }, {
    key: "lesionExistsAtTimepoints",
    value: function lesionExistsAtTimepoints(lesionNamingNumber, toolGroupId, timepointIds) {
      // Retrieve all the data for the given tool group (e.g. 'targets')
      var measurementsAtTimepoint = this.fetch(toolGroupId, function (tool) {
        return timepointIds.includes(tool.timepointId);
      }); // Return whether or not any lesion at this timepoint has the same lesionNamingNumber

      return !!measurementsAtTimepoint.find(function (m) {
        return m.lesionNamingNumber === lesionNamingNumber;
      });
    }
  }, {
    key: "isNewLesionsMeasurement",
    value: function isNewLesionsMeasurement(measurementData) {
      if (!measurementData) {
        return;
      }

      var toolConfig = MeasurementApi.getToolConfiguration(measurementData.toolType);
      var toolType = toolConfig.tool.parentTool || measurementData.toolType;
      var timepointApi = this.timepointApi;
      var currentMeasurement = this.tools[toolType].find(function (tool) {
        return tool._id === measurementData._id;
      }) || {};
      var timepointId = currentMeasurement.timepointId || measurementData.timepointId;
      var lesionNamingNumber = currentMeasurement.lesionNamingNumber || measurementData.lesionNamingNumber; // Stop here if the needed information is not set

      if (!timepointApi || !timepointId || !toolConfig) {
        return;
      }

      var toolGroupId = toolConfig.toolGroupId;
      var current = timepointApi.timepoints.find(function (tp) {
        return tp.timepointId === timepointId;
      });
      var initialTimepointIds = timepointApi.initialTimepointIds(); // Stop here if there's no initial timepoint, or if the current is any initial

      if (!initialTimepointIds || initialTimepointIds.length < 1 || initialTimepointIds.some(function (initialtpid) {
        return initialtpid === current.timepointId;
      })) {
        return false;
      }

      return this.lesionExistsAtTimepoints(lesionNamingNumber, toolGroupId, initialTimepointIds) === false;
    }
  }, {
    key: "calculateLesionMaxMeasurementNumber",
    value: function calculateLesionMaxMeasurementNumber(groupId, filter) {
      var _this8 = this;

      var measurements = [];

      if (groupId) {
        // Get the measurements of the group
        measurements = this.toolGroups[groupId] || [];
      } else {
        // Get all measurements of all groups
        measurements = Object.keys(this.toolGroups).reduce(function (acc, val) {
          acc.push.apply(acc, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(_this8.toolGroups[val]));
          return acc;
        }, []);
      }

      var sortedMeasurements = measurements.filter(filter).sort(function (tp1, tp2) {
        return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;
      });

      var _loop = function _loop(i) {
        var toolGroupMeasurement = sortedMeasurements[i];

        var measurement = _this8.tools[toolGroupMeasurement.toolId].find(function (tool) {
          return tool._id === toolGroupMeasurement.toolItemId;
        });

        var isNew = _this8.isNewLesionsMeasurement(measurement);

        if (!isNew) {
          return {
            v: measurement && measurement.measurementNumber || 0
          };
        }
      };

      for (var i = 0; i < sortedMeasurements.length; i++) {
        var _ret = _loop(i);

        if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(_ret) === "object") return _ret.v;
      }

      return 0;
    }
  }, {
    key: "calculateNewLesionMaxMeasurementNumber",
    value: function calculateNewLesionMaxMeasurementNumber(groupId, filter) {
      var _this9 = this;

      var sortedMeasurements = this.toolGroups[groupId].filter(filter).sort(function (tp1, tp2) {
        return tp1.measurementNumber < tp2.measurementNumber ? 1 : -1;
      });

      var _loop2 = function _loop2(i) {
        var toolGroupMeasurement = sortedMeasurements[i];

        var measurement = _this9.tools[toolGroupMeasurement.toolId].find(function (tool) {
          return tool._id === toolGroupMeasurement.toolItemId;
        });

        var isNew = _this9.isNewLesionsMeasurement(measurement);

        if (isNew) {
          return {
            v: measurement.measurementNumber
          };
        }
      };

      for (var i = 0; i < sortedMeasurements.length; i++) {
        var _ret2 = _loop2(i);

        if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(_ret2) === "object") return _ret2.v;
      }

      return 0;
    }
  }, {
    key: "calculateMeasurementNumber",
    value: function calculateMeasurementNumber(measurement) {
      var toolGroupId = this.toolsGroupsMap[measurement.toolType];

      var filter = function filter(tool) {
        return tool._id !== measurement._id;
      };

      var isNew = this.isNewLesionsMeasurement(measurement);

      if (isNew) {
        var maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber('targets', filter);
        var maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber('nonTargets', filter);
        var maxNewTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber('targets', filter);

        if (toolGroupId === 'targets') {
          return Math.max(maxTargetMeasurementNumber, maxNonTargetMeasurementNumber, maxNewTargetMeasurementNumber);
        }

        if (toolGroupId === 'nonTargets') {
          var maxNewNonTargetMeasurementNumber = this.calculateNewLesionMaxMeasurementNumber('nonTargets', filter);
          return Math.max(maxTargetMeasurementNumber, maxNonTargetMeasurementNumber, maxNewTargetMeasurementNumber, maxNewNonTargetMeasurementNumber);
        }
      } else {
        var _maxTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber('targets', filter);

        if (toolGroupId === 'targets') {
          return _maxTargetMeasurementNumber;
        }

        if (toolGroupId === 'nonTargets') {
          var _maxNonTargetMeasurementNumber = this.calculateLesionMaxMeasurementNumber('nonTargets', filter);

          return Math.max(_maxTargetMeasurementNumber, _maxNonTargetMeasurementNumber);
        }

        return this.calculateLesionMaxMeasurementNumber(null, filter);
      }

      return 0;
    }
  }, {
    key: "getPreviousMeasurement",
    value: function getPreviousMeasurement(measurementData) {
      if (!measurementData) {
        return;
      }

      var timepointId = measurementData.timepointId,
          toolType = measurementData.toolType,
          lesionNamingNumber = measurementData.lesionNamingNumber;

      if (!timepointId || !toolType || !lesionNamingNumber) {
        return;
      }

      var toolGroupId = this.toolsGroupsMap[measurementData.toolType]; // TODO: Remove TrialPatientLocationUID from here and override it somehow
      // by dependant applications. Here we should use the location attribute instead of the uid

      var filter;
      var uid = measurementData.additionalData && measurementData.additionalData.TrialPatientLocationUID;

      if (uid) {
        filter = function filter(tool) {
          return tool._id !== measurementData._id && tool.additionalData && tool.additionalData.TrialPatientLocationUID === uid;
        };
      } else {
        filter = function filter(tool) {
          return tool._id !== measurementData._id && tool.lesionNamingNumber === lesionNamingNumber;
        };
      }

      var childToolTypes = this.toolGroupTools[toolGroupId];

      for (var i = 0; i < childToolTypes.length; i++) {
        var childToolType = childToolTypes[i];
        var toolCollection = this.tools[childToolType];
        var item = toolCollection.find(filter);

        if (item) {
          return item;
        }
      }
    }
  }, {
    key: "hasDuplicateMeasurementNumber",
    value: function hasDuplicateMeasurementNumber(measurementData) {
      var _this10 = this;

      if (!measurementData) {
        return;
      }

      var toolType = measurementData.toolType,
          measurementNumber = measurementData.measurementNumber;

      if (!toolType || !measurementNumber) {
        return;
      }

      var filter = function filter(tool) {
        return tool._id !== measurementData._id && tool.measurementNumber === measurementData.measurementNumber;
      };

      return configuration.measurementTools.filter(function (toolGroup) {
        return toolGroup.id !== 'temp';
      }).some(function (toolGroup) {
        if (_this10.toolGroups[toolGroup.id].find(filter)) {
          return true;
        }

        return toolGroup.childTools.some(function (tool) {
          if (_this10.tools[tool.id].find(filter)) {
            return true;
          }
        });
      });
    }
  }, {
    key: "updateNumbering",
    value: function updateNumbering(collectionToUpdate, propertyFilter, propertyName, increment) {
      collectionToUpdate.filter(propertyFilter).forEach(function (item) {
        item[propertyName] += increment;
      });
    }
  }, {
    key: "updateMeasurementNumberForAllMeasurements",
    value: function updateMeasurementNumberForAllMeasurements(measurement, increment) {
      var _this11 = this;

      var filter = function filter(tool) {
        return tool._id !== measurement._id && tool.measurementNumber >= measurement.measurementNumber;
      };

      configuration.measurementTools.filter(function (toolGroup) {
        return toolGroup.id !== 'temp';
      }).forEach(function (toolGroup) {
        _this11.updateNumbering(_this11.toolGroups[toolGroup.id], filter, 'measurementNumber', increment);

        toolGroup.childTools.forEach(function (tool) {
          _this11.updateNumbering(_this11.tools[tool.id], filter, 'measurementNumber', increment);
        });
      });
    }
  }, {
    key: "addMeasurement",
    value: function addMeasurement(toolType, measurement) {
      var toolGroup = this.toolsGroupsMap[toolType];
      var groupCollection = this.toolGroups[toolGroup];
      var collection = this.tools[toolType]; // Get the related measurement by the measurement number and use its location if defined

      var relatedMeasurement = collection.find(function (t) {
        return t.lesionNamingNumber === measurement.lesionNamingNumber && t.toolType === measurement.toolType;
      }); // Use the related measurement location if found and defined

      if (relatedMeasurement && relatedMeasurement.location) {
        measurement.location = relatedMeasurement.location;
      } // Use the related measurement description if found and defined


      if (relatedMeasurement && relatedMeasurement.description) {
        measurement.description = relatedMeasurement.description;
      } // TungLT stored measurement from MongoDB already have mapping _id property, which is generated from MeasurementApi


      if (!measurement._id) measurement._id = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_11__["default"])(); // Get the timepoint

      var timepoint;

      if (measurement.StudyInstanceUID) {
        timepoint = this.timepointApi.study(measurement.StudyInstanceUID)[0];
      } else {
        var timepointId = measurement.timepointId;
        timepoint = this.timepointApi.timepoints.find(function (t) {
          return t.timepointId === timepointId;
        });
      } // Preventing errors thrown when non-associated (standalone) study is opened...
      // @TODO: Make sure this logic is correct.


      if (!timepoint) return; // Empty Item is the lesion just added in cornerstoneTools, but does not have measurement data yet

      var emptyItem = groupCollection.find( // (groupTool) => !groupTool.toolId && groupTool.timepointId === timepoint.timepointId
      // TungLT change logic to update measurement data after save to storage
      function (groupTool) {
        return groupTool.toolItemId === measurement._id && groupTool.timepointId === timepoint.timepointId;
      }); // Set the timepointId attribute to measurement to make it easier to filter measurements by timepoint

      measurement.timepointId = timepoint.timepointId; // Check if the measurement data is just added by a cornerstone tool and is still empty

      if (emptyItem) {
        // Set relevant initial data and measurement number to the measurement
        measurement.lesionNamingNumber = emptyItem.lesionNamingNumber;
        measurement.measurementNumber = emptyItem.measurementNumber;
        groupCollection.filter(function (groupTool) {
          return groupTool.timepointId === timepoint.timepointId && groupTool.lesionNamingNumber === measurement.lesionNamingNumber;
        }).forEach(function (groupTool) {
          groupTool.toolId = measurement.toolType;
          groupTool.toolItemId = measurement._id;
          groupTool.createdAt = measurement.createdAt;
          groupTool.measurementNumber = measurement.measurementNumber; // TungLT synchronize id property, which is generated by MongoDB

          groupTool.id = measurement.id;
        });
      } else {
        // Handle measurements not added by cornerstone tools and update its number
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('handle measurement not added by cornerstone tool', measurement);
        var measurementsInTimepoint = groupCollection.filter(function (groupTool) {
          return groupTool.timepointId === timepoint.timepointId;
        }); // TungLT: dont need to update lesionNamingNumber with stored

        measurement.lesionNamingNumber = measurement.lesionNamingNumber || this.calculateLesionNamingNumber(measurementsInTimepoint);
        measurement.measurementNumber = measurement.measurementNumber || this.calculateMeasurementNumber(measurement) + 1;
      } // Define an update object to reflect the changes in the collection


      var updateObject = {
        timepointId: timepoint.timepointId,
        lesionNamingNumber: measurement.lesionNamingNumber,
        measurementNumber: measurement.measurementNumber,
        id: measurement.id // TungLT: synchronize id property

      }; // Find the matched measurement from other timepoints

      var found = this.getPreviousMeasurement(measurement); // Check if a previous related meausurement was found on other timepoints

      if (found) {
        _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('previous measurement', found); // Use the same number as the previous measurement

        measurement.lesionNamingNumber = found.lesionNamingNumber;
        measurement.measurementNumber = found.measurementNumber; // TODO: Remove TrialPatientLocationUID from here and override it somehow
        // by dependant applications
        // Change the update object to set the same number, additionalData,
        // location, label and description to the current measurement

        updateObject.lesionNamingNumber = found.lesionNamingNumber;
        updateObject.measurementNumber = found.measurementNumber;
        updateObject.additionalData = measurement.additionalData || {};
        updateObject.additionalData.TrialPatientLocationUID = found.additionalData && found.additionalData.TrialPatientLocationUID;
        updateObject.location = found.location;
        updateObject.label = found.label;
        updateObject.description = found.description;
        updateObject.isSplitLesion = found.isSplitLesion;
        updateObject.isNodal = found.isNodal;
        var description = Object(_lib_getDescription__WEBPACK_IMPORTED_MODULE_9__["default"])(found, measurement);

        if (description) {
          updateObject.description = description;
        }
      } else if (this.hasDuplicateMeasurementNumber(measurement)) {// Update measurementNumber for the measurements with masurementNumber greater or equal than
        //  measurementNumber of the added measurement (except the added one)
        //   only if there is another measurement with the same measurementNumber
        // TungLT, dont need to update measurement number
        // this.updateMeasurementNumberForAllMeasurements(measurement, 1);
      }

      var addedMeasurement; // Upsert the measurement in collection

      var toolIndex = collection.findIndex(function (tool) {
        return tool._id === measurement._id;
      });

      if (toolIndex > -1) {
        addedMeasurement = _objectSpread({}, collection[toolIndex], {}, updateObject);
        collection[toolIndex] = addedMeasurement;
      } else {
        addedMeasurement = _objectSpread({}, measurement, {}, updateObject);
        collection.push(addedMeasurement);
      }

      if (!emptyItem) {
        // Reflect the entry in the tool group collection
        groupCollection.push({
          toolId: toolType,
          toolItemId: addedMeasurement._id,
          timepointId: timepoint.timepointId,
          StudyInstanceUID: addedMeasurement.StudyInstanceUID,
          createdAt: addedMeasurement.createdAt,
          lesionNamingNumber: addedMeasurement.lesionNamingNumber,
          measurementNumber: addedMeasurement.measurementNumber,
          id: addedMeasurement.id // TungLT synchronize id generated by MongoDB

        });
      } // Let others know that the measurements are updated


      this.onMeasurementsUpdated(); // TODO: Enable reactivity
      // this.timepointChanged.set(timepoint.timepointId);

      return addedMeasurement;
    }
  }, {
    key: "updateMeasurement",
    value: function updateMeasurement(toolType, measurement) {
      var collection = this.tools[toolType];
      var toolIndex = collection.findIndex(function (tool) {
        return tool._id === measurement._id;
      });

      if (toolIndex < 0) {
        return;
      }

      collection[toolIndex] = _objectSpread({}, measurement, {
        updated: true
      }); // Let others know that the measurements are updated

      this.onMeasurementsUpdated(); // TODO: Enable reactivity
      // this.timepointChanged.set(timepoint.timepointId);
    }
  }, {
    key: "onMeasurementRemoved",
    value: function onMeasurementRemoved(toolType, measurement) {
      var _this12 = this;

      var persist = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var lesionNamingNumber = measurement.lesionNamingNumber,
          measurementNumber = measurement.measurementNumber;
      var toolGroupId = this.toolsGroupsMap[toolType];
      var groupCollection = this.toolGroups[toolGroupId];
      var groupIndex = groupCollection.findIndex(function (group) {
        return group.toolItemId === measurement._id;
      });
      _log__WEBPACK_IMPORTED_MODULE_7__["default"].info('onMeasurementRemoved', measurement, groupCollection, groupIndex);

      if (groupIndex < 0) {
        return;
      } //  Remove the deleted measurement only in its timepoint from the collection


      groupCollection.splice(groupIndex, 1); //  Check which timepoints have the deleted measurement

      var timepointsWithDeletedMeasurement = groupCollection.filter(function (tool) {
        return tool.measurementNumber === measurementNumber;
      }).map(function (tool) {
        return tool.timepointId;
      }); //  Update lesionNamingNumber and measurementNumber only if there is no timepoint with that measurement

      if (timepointsWithDeletedMeasurement.length < 1) {
        //  Decrease lesionNamingNumber of all measurements with lesionNamingNumber greater than lesionNamingNumber of the deleted measurement by 1
        var lesionNamingNumberFilter = function lesionNamingNumberFilter(tool) {
          return tool.lesionNamingNumber >= lesionNamingNumber;
        };

        this.updateNumbering(groupCollection, lesionNamingNumberFilter, 'lesionNamingNumber', -1);
        var toolGroup = configuration.measurementTools.find(function (tGroup) {
          return tGroup.id === toolGroupId;
        });

        if (toolGroup && toolGroup.childTools) {
          toolGroup.childTools.forEach(function (childTool) {
            var collection = _this12.tools[childTool.id];

            _this12.updateNumbering(collection, lesionNamingNumberFilter, 'lesionNamingNumber', -1);
          });
        } //  Decrease measurementNumber of all measurements with measurementNumber greater than measurementNumber of the deleted measurement by 1


        this.updateMeasurementNumberForAllMeasurements(measurement, -1);
      } // Synchronize the new tool data


      this.syncMeasurementsAndToolData(); // Let others know that the measurements are updated

      this.onMeasurementsUpdated(); // TODO: Enable reactivity
      // this.timepointChanged.set(timepoint.timepointId);
      // TungLT: for persist deleted measurement

      var id = measurement.id; // "id" is generated by backend service. it is different with "_id", which generated by MeasurementApi

      if (id && persist) {
        // if "id" is existed, its measurement need to be deleted from database
        this.addTemporaryDeletedMeasurements(measurement);
      }
    }
  }, {
    key: "syncMeasurementsAndToolData",
    value: function syncMeasurementsAndToolData() {
      var _this13 = this;

      configuration.measurementTools.forEach(function (toolGroup) {
        // Skip the tool groups excluded from case progress
        if (!MeasurementApi.isToolIncluded(toolGroup)) {
          return;
        }

        toolGroup.childTools.forEach(function (tool) {
          // Skip the tools excluded from case progress
          if (!MeasurementApi.isToolIncluded(tool)) {
            return;
          }

          var measurements = _this13.tools[tool.id];
          measurements.forEach(function (measurement) {
            MeasurementApi.syncMeasurementAndToolData(measurement);
          });
        });
      });
    } // Modified by TungLT

  }, {
    key: "deleteMeasurements",
    value: function deleteMeasurements(toolType, measurementTypeId, measurement, persist) {
      var _this14 = this;

      var filter = {
        lesionNamingNumber: measurement.lesionNamingNumber,
        timepointId: measurement.timepointId
      };
      var filterKeys = Object.keys(filter);
      var groupCollection = this.toolGroups[measurementTypeId]; // Stop here if it is a temporary toolGroups

      if (!groupCollection) return; // Get the entries information before removing them

      var groupItems = groupCollection.filter(function (toolGroup) {
        return filterKeys.every(function (filterKey) {
          return toolGroup[filterKey] === filter[filterKey];
        });
      });
      var entries = [];
      groupItems.forEach(function (groupItem) {
        if (!groupItem.toolId) {
          return;
        }

        var collection = _this14.tools[groupItem.toolId];
        var toolIndex = collection.findIndex(function (tool) {
          return tool._id === groupItem.toolItemId;
        });

        if (toolIndex > -1) {
          entries.push(collection[toolIndex]);
          collection.splice(toolIndex, 1);
        }
      }); // Stop here if no entries were found

      if (!entries.length) {
        return;
      } // If the filter doesn't have the measurement number, get it from the first entry


      var lesionNamingNumber = filter.lesionNamingNumber || entries[0].lesionNamingNumber; // Synchronize the new data with cornerstone tools

      var toolState = cornerstone_tools__WEBPACK_IMPORTED_MODULE_5___default.a.globalImageIdSpecificToolStateManager.saveToolState();
      entries.forEach(function (entry) {
        var measurementsData = [];

        var _MeasurementApi$getTo2 = MeasurementApi.getToolConfiguration(entry.toolType),
            tool = _MeasurementApi$getTo2.tool;

        if (Array.isArray(tool.childTools)) {
          tool.childTools.forEach(function (key) {
            var childMeasurement = entry[key];
            if (!childMeasurement) return;
            measurementsData.push(childMeasurement);
          });
        } else {
          measurementsData.push(entry);
        }

        measurementsData.forEach(function (measurementData) {
          var imagePath = measurementData.imagePath,
              toolType = measurementData.toolType;
          var imageId = Object(_lib_getImageIdForImagePath__WEBPACK_IMPORTED_MODULE_10__["default"])(imagePath);

          if (imageId && toolState[imageId]) {
            var toolData = toolState[imageId][toolType];
            var measurementEntries = toolData && toolData.data;
            var measurementEntry = measurementEntries.find(function (mEntry) {
              return mEntry._id === entry._id;
            });

            if (measurementEntry) {
              var index = measurementEntries.indexOf(measurementEntry);
              measurementEntries.splice(index, 1);
            }
          }
        });

        _this14.onMeasurementRemoved(toolType, entry, persist);
      });
      cornerstone_tools__WEBPACK_IMPORTED_MODULE_5___default.a.globalImageIdSpecificToolStateManager.restoreToolState(toolState); // Synchronize the updated measurements with Cornerstone Tools
      // toolData to make sure the displayed measurements show 'Target X' correctly

      var syncFilter = _objectSpread({}, filter);

      delete syncFilter.timepointId;
      delete syncFilter.lesionNamingNumber;
      var syncFilterKeys = Object.keys(syncFilter);

      var toolTypes = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(new Set(entries.map(function (entry) {
        return entry.toolType;
      })));

      toolTypes.forEach(function (toolType) {
        var collection = _this14.tools[toolType];
        collection.filter(function (tool) {
          return tool.lesionNamingNumber > lesionNamingNumber - 1 && syncFilterKeys.every(function (syncFilterKey) {
            return tool[syncFilterKey] === filter[syncFilterKey];
          });
        }).forEach(function (measurement) {
          MeasurementApi.syncMeasurementAndToolData(measurement);
        });
      });
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!this.Instance) {
        this.Instance = new MeasurementApi();
      }

      return this.Instance;
    }
  }]);

  return MeasurementApi;
}();

MeasurementApi.Instance = void 0;


/***/ }),

/***/ "./measurements/classes/TimepointApi.js":
/*!**********************************************!*\
  !*** ./measurements/classes/TimepointApi.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TimepointApi; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "./log.js");
/* harmony import */ var _configuration__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../configuration */ "./measurements/configuration.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




var configuration = _objectSpread({}, _configuration__WEBPACK_IMPORTED_MODULE_4__["timepointApiDefaultConfig"]);

var TIMEPOINT_TYPE_NAMES = {
  prebaseline: 'Pre-Baseline',
  baseline: 'Baseline',
  followup: 'Follow-up'
};

var TimepointApi = /*#__PURE__*/function () {
  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(TimepointApi, null, [{
    key: "setConfiguration",
    value: function setConfiguration(config) {
      Object.assign(configuration, config);
    }
  }, {
    key: "getConfiguration",
    value: function getConfiguration() {
      return configuration;
    }
  }]);

  function TimepointApi(currentTimepointId) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, TimepointApi);

    if (TimepointApi.Instance) {
      TimepointApi.Instance.initialize(currentTimepointId, options);
      return TimepointApi.Instance;
    }

    this.initialize(currentTimepointId, options);
    TimepointApi.Instance = this;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(TimepointApi, [{
    key: "initialize",
    value: function initialize(currentTimepointId) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.currentTimepointId = currentTimepointId;
      this.comparisonTimepointKey = options.comparisonTimepointKey || 'baseline';
      this.options = options;
      this.timepoints = [];
    }
  }, {
    key: "onTimepointsUpdated",
    value: function onTimepointsUpdated() {
      if (typeof this.options.onTimepointsUpdated !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Timepoints update callback is not defined');
        return;
      }

      this.options.onTimepointsUpdated(Object.assign([], this.timepoints));
    }
  }, {
    key: "calculateVisitNumber",
    value: function calculateVisitNumber(timepoint) {
      // Retrieve all of the relevant follow-up timepoints for this patient
      var sortedTimepoints = this.timepoints.sort(function (tp1, tp2) {
        return tp1.visitDate > tp2.visitDate ? 1 : -1;
      });
      var filteredTimepoints = sortedTimepoints.find(function (tp) {
        return tp.PatientID === timepoint.PatientID && tp.timepointType === timepoint.timepointType;
      }); // Create an array of just timepointIds, so we can use indexOf
      // on it to find the current timepoint's relative position

      var timepointIds = filteredTimepoints.map(function (timepoint) {
        return timepoint.timepointId;
      }); // Calculate the index of the current timepoint in the array of all
      // relevant follow-up timepoints

      var visitNumber = timepointIds.indexOf(timepoint.timepointId) + 1; // If visitNumber is 0, it means that the current timepoint was not in the list

      if (!visitNumber) {
        throw new Error('Current timepoint was not in the list of relevant timepoints?');
      }

      return visitNumber;
    }
  }, {
    key: "retrieveTimepoints",
    value: function retrieveTimepoints(filter) {
      var _this = this;

      var retrievalFn = configuration.dataExchange.retrieve;

      if (typeof retrievalFn !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].error('Timepoint retrieval function has not been configured.');
        return;
      }

      return new Promise(function (resolve, reject) {
        retrievalFn(filter).then(function (timepointData) {
          _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Timepoint data retrieval');
          timepointData.forEach(function (timepoint) {
            var timepointIndex = _this.timepoints.findIndex(function (tp) {
              return tp.timepointId === timepoint.timepointId;
            });

            if (timepointIndex < 0) {
              _this.timepoints.push(timepoint);
            } else {
              _this.timepoints[timepointIndex] = timepoint;
            }
          }); // Let others know that the timepoints are updated

          _this.onTimepointsUpdated();

          resolve();
        })["catch"](function (reason) {
          _log__WEBPACK_IMPORTED_MODULE_3__["default"].error("Timepoint retrieval function failed: ".concat(reason));
          reject(reason);
        });
      });
    }
  }, {
    key: "storeTimepoints",
    value: function storeTimepoints() {
      var storeFn = configuration.dataExchange.store;

      if (typeof storeFn !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].error('Timepoint store function has not been configured.');
        return;
      }

      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Preparing to store timepoints');
      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info(JSON.stringify(this.timepoints, null, 2)); //   storeFn(this.timepoints).then(() => log.info('Timepoint storage completed'));
      // TungLT: change logic to use result of storing timepoints data

      return storeFn(this.timepoints);
    }
  }, {
    key: "disassociateStudy",
    value: function disassociateStudy(timepointIds, StudyInstanceUID) {
      var _this2 = this;

      var disassociateFn = configuration.dataExchange.disassociate;

      if (typeof disassociateFn !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].error('Study disassociate function has not been configured.');
        return;
      }

      disassociateFn(timepointIds, StudyInstanceUID).then(function () {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Disassociation completed');
        _this2.timepoints = [];

        _this2.retrieveTimepoints({});
      });
    }
  }, {
    key: "removeTimepoint",
    value: function removeTimepoint(timepointId) {
      var _this3 = this;

      var removeFn = configuration.dataExchange.remove;

      if (typeof removeFn !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].error('Timepoint remove function has not been configured.');
        return;
      }

      var timepointData = {
        timepointId: timepointId
      };
      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Preparing to remove timepoint');
      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info(JSON.stringify(timepointData, null, 2));
      removeFn(timepointData).then(function () {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Timepoint removal completed');

        var tpIndex = _this3.timepoints.findIndex(function (tp) {
          return tp.timepointId === timepointId;
        });

        if (tpIndex > -1) {
          _this3.timepoints.splice(tpIndex, 1);
        } // Let others know that the timepoints are updated


        _this3.onTimepointsUpdated();
      });
    }
  }, {
    key: "updateTimepoint",
    value: function updateTimepoint(timepointId, query) {
      var _this4 = this;

      var updateFn = configuration.dataExchange.update;

      if (typeof updateFn !== 'function') {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].error('Timepoint update function has not been configured.');
        return;
      }

      var timepointData = {
        timepointId: timepointId
      };
      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Preparing to update timepoint');
      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info(JSON.stringify(timepointData, null, 2));
      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info(JSON.stringify(query, null, 2));
      updateFn(timepointData, query).then(function () {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Timepoint updated completed');

        var tpIndex = _this4.timepoints.findIndex(function (tp) {
          return tp.timepointId === timepointId;
        });

        if (tpIndex > -1) {
          _this4.timepoints[tpIndex] = _objectSpread({}, _this4.timepoints[tpIndex], {}, query);
        } // Let others know that the timepoints are updated


        _this4.onTimepointsUpdated();
      });
    } // Return all timepoints

  }, {
    key: "all",
    value: function all(filter) {
      var timepointsToReturn;

      if (filter) {
        timepointsToReturn = this.timepoints.filter(filter);
      } else {
        timepointsToReturn = this.timepoints;
      }

      return timepointsToReturn.sort(function (tp1, tp2) {
        return tp1.visitDate < tp2.visitDate ? 1 : -1;
      });
    } // Return only the current timepoint

  }, {
    key: "current",
    value: function current() {
      var _this5 = this;

      return this.timepoints.find(function (tp) {
        return tp.timepointId === _this5.currentTimepointId;
      });
    }
  }, {
    key: "lock",
    value: function lock() {
      var _this6 = this;

      var tpIndex = this.timepoints.findIndex(function (tp) {
        return tp.timepointId === _this6.currentTimepointId;
      });

      if (tpIndex < 0) {
        return;
      }

      this.timepoints[tpIndex] = _objectSpread({}, this.timepoints[tpIndex], {
        locked: true
      });
    } // Return the prior timepoint

  }, {
    key: "prior",
    value: function prior() {
      var current = this.current();

      if (!current) {
        return;
      }

      return this.all().find(function (tp) {
        return tp.visitDate < current.visitDate;
      });
    } // Return only the current and prior timepoints

  }, {
    key: "currentAndPrior",
    value: function currentAndPrior() {
      var timepoints = [];
      var current = this.current();

      if (current) {
        timepoints.push(current);
      }

      var prior = this.prior();

      if (current && prior && prior.timepointId !== current.timepointId) {
        timepoints.push(prior);
      }

      return timepoints;
    } // Return the current and the comparison timepoints

  }, {
    key: "currentAndComparison",
    value: function currentAndComparison() {
      var comparisonTimepointKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.comparisonTimepointKey;
      var current = this.current();
      var comparisonTimepoint = this.comparison(comparisonTimepointKey);
      var timepoints = [current];

      if (comparisonTimepoint && !timepoints.find(function (tp) {
        return tp.timepointId === comparisonTimepoint.timepointId;
      })) {
        timepoints.push(comparisonTimepoint);
      }

      return timepoints;
    }
    /**
     * Return true if there are 2 or more baseline timepoints before and at the current timepoint, otherwise false
     * @returns {boolean}
     */

  }, {
    key: "isRebaseline",
    value: function isRebaseline(timepointId) {
      var current = timepointId ? this.timepoints.find(function (tp) {
        return tp.timepointId === timepointId;
      }) : this.current();

      if (!current) {
        return false;
      }

      var baselines = this.timepoints.filter(function (tp) {
        return tp.timepointType === 'baseline' && tp.visitDate <= current.visitDate;
      });
      return baselines.length > 1;
    }
    /**
     * Return the next (closest future) baseline after current timepoint
     * @returns {*}
     */

  }, {
    key: "nextBaselineAfterCurrent",
    value: function nextBaselineAfterCurrent() {
      var current = this.current(); //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending

      var sortedTimepoints = this.timepoints.sort(function (tp1, tp2) {
        return tp1.visitDate > tp2.visitDate ? 1 : -1;
      });
      return sortedTimepoints.find(function (tp) {
        return tp.visitDate > current.visitDate && tp.timepointType === 'baseline';
      });
    }
    /**
     * Set the current timepoint id
     * @param timepointId
     */

  }, {
    key: "setCurrentTimepointId",
    value: function setCurrentTimepointId(timepointId) {
      this.currentTimepointId = timepointId;
    }
    /**
     * Set the comparison timepoint that overrides the default comparison timepoint (called based on user selection in a viewport)
     * @param timepoint
     */

  }, {
    key: "setUserComparison",
    value: function setUserComparison(timepoint) {
      this.userComparison = timepoint;
    }
    /**
     * Return only the comparison timepoint
     * @param {String} [comparisonTimepointKey]
     * @return {*}
     */

  }, {
    key: "comparison",
    value: function comparison() {
      var comparisonTimepointKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.comparisonTimepointKey;

      // Return the comparison timepoint set by user if exists
      if (this.userComparison) {
        return this.userComparison;
      }

      var current = this.current();

      if (!current) {
        return;
      } // If current timepoint is prebaseline, the first (closest future) BL after current is comparison regardless of default comparison timepoint


      if (current.timepointType === 'prebaseline') {
        var nextBaselineAfterCurrent = this.nextBaselineAfterCurrent(); // If there is a next baseline, make it comparison, otherwise comparison is done by default comparison timepoint

        if (nextBaselineAfterCurrent) {
          return nextBaselineAfterCurrent;
        }
      } // If current timepoint is baseline, the prior is comparison if exists regardless of default comparison timepoint


      if (current.timepointType === 'baseline') {
        var prior = this.prior();

        if (prior) {
          return prior;
        }
      }

      var comparison = this[comparisonTimepointKey](); // Do not return a comparison if it would be identical to
      // the current.

      if (comparison && comparison.timepointId === current.timepointId) {
        return;
      }

      return comparison;
    }
    /**
     * Return the latest initial (prebaseline or baseline) timepoint after current and before the next followup timepoint
     * @returns {*}
     */

  }, {
    key: "latestInitialTimepointAfterCurrent",
    value: function latestInitialTimepointAfterCurrent() {
      var currentTimepoint = this.current(); //  Skip if the current timepoint is FU since there is no initial timepoint after follow-up

      if (currentTimepoint.timepointType === 'followup') {
        return;
      } //  Get all next timepoints newer than the current timepoint sorted by visitDate ascending


      var sortedTimepoints = this.timepoints.sort(function (tp1, tp2) {
        return tp1.visitDate > tp2.visitDate ? 1 : -1;
      });
      var allNextTimepoints = sortedTimepoints.filter(function (tp) {
        return tp.visitDate > currentTimepoint.visitDate;
      });
      var nextFollowupIndex = allNextTimepoints.findIndex(function (tp) {
        return tp.timepointType === 'followup';
      });
      var latestInitialBeforeNextFUIndex = nextFollowupIndex - 1;

      if (latestInitialBeforeNextFUIndex < 0) {
        //  There is no FU and all next timepoints are initial, so return the last one
        return allNextTimepoints[allNextTimepoints.length - 1];
      } //  Return the latest initial timepoint before the next FU


      return allNextTimepoints[latestInitialBeforeNextFUIndex];
    }
    /**
     * Return timepoint ids of initial timepoints which are prebaseline and baseline
     * @returns {*}
     */

  }, {
    key: "initialTimepointIds",
    value: function initialTimepointIds() {
      var timepointToCheck = this.current(); //  If the current timepoint is PBL or BL, then get the recent PBL/BL of the current timepoint by its first FU
      //      If it does not exist, then there is no newer initial timepoint, so the current timepoint is used to determine initial timepoint ids

      if (timepointToCheck.timepointType === 'prebaseline' || timepointToCheck.timepointType === 'baseline') {
        timepointToCheck = this.latestInitialTimepointAfterCurrent() || timepointToCheck;
      }

      var visitDateToCheck = timepointToCheck.visitDate;
      var preBaselineTimepoints = this.timepoints.filter(function (tp) {
        return tp.timepointType === 'prebaseline' && tp.visitDate <= visitDateToCheck;
      }) || [];
      var preBaselineTimepointIds = preBaselineTimepoints.map(function (timepoint) {
        return timepoint.timepointId;
      });
      var baselineTimepoints = this.timepoints.filter(function (tp) {
        return tp.timepointType === 'baseline' && tp.visitDate <= visitDateToCheck;
      }) || [];
      var baselineTimepointIds = baselineTimepoints.map(function (timepoint) {
        return timepoint.timepointId;
      });
      return preBaselineTimepointIds.concat(baselineTimepointIds);
    } // Return only the baseline timepoint

  }, {
    key: "baseline",
    value: function baseline() {
      var currentVisitDate = this.current().visitDate;
      return this.all().find(function (tp) {
        return tp.timepointType === 'baseline' && tp.visitDate <= currentVisitDate;
      });
    }
    /**
     * Return only the nadir timepoint. Must be prior to the current timepoint
     * @return {any}
     */

  }, {
    key: "nadir",
    value: function nadir() {
      var current = this.current();
      var nadir = this.all().find(function (tp) {
        return tp.timepointId !== current.timepointId && tp.timepointKey === 'nadir' && tp.visitDate <= current.visitDate;
      }); // If we have found a nadir, return that

      if (nadir) {
        return nadir;
      } // Otherwise, return the most recent baseline
      // This should only happen if we are only at FU1,
      // so the baseline is the nadir.


      return this.baseline();
    } // Return only the key timepoints (current, prior, nadir and baseline)

  }, {
    key: "key",
    value: function key() {
      var result = [this.current()];
      var prior = this.prior();
      var nadir = this.nadir();
      var baseline = this.baseline();

      var resultIncludes = function resultIncludes(timepoint) {
        return !!result.find(function (x) {
          return x.timepointId === timepoint.timepointId;
        });
      };

      if (prior && resultIncludes(prior) === false) {
        result.push(prior);
      }

      if (nadir && resultIncludes(nadir) === false) {
        result.push(nadir);
      }

      if (baseline && resultIncludes(baseline) === false) {
        result.push(baseline);
      }

      return result;
    } // Return only the timepoints for the given study

  }, {
    key: "study",
    value: function study(StudyInstanceUID) {
      return this.all().filter(function (timepoint) {
        return timepoint.studyInstanceUIDs.includes(StudyInstanceUID);
      });
    } // Return the timepoint's name

  }, {
    key: "name",
    value: function name(timepoint) {
      var timepointTypeName = TIMEPOINT_TYPE_NAMES[timepoint.timepointType]; // Check if this is a Baseline timepoint, if it is, return 'Baseline'

      if (timepoint.timepointType === 'baseline') {
        return 'Baseline';
      }

      if (timepoint.visitNumber) {
        return "".concat(timepointTypeName, " ").concat(timepoint.visitNumber);
      }

      var visitNumber = this.calculateVisitNumber(timepoint); // Return the timepoint name as 'Follow-up N'

      return "".concat(timepointTypeName, " ").concat(visitNumber);
    } // Build the timepoint title based on its date

  }, {
    key: "title",
    value: function title(timepoint) {
      var timepointName = this.name(timepoint);
      var all = this.all();
      var index = -1;
      var currentIndex = null;

      for (var i = 0; i < all.length; i++) {
        var currentTimepoint = all[i]; // Skip the iterations until we can't find the selected timepoint on study list

        if (this.currentTimepointId === currentTimepoint.timepointId) {
          currentIndex = 0;
        }

        if (currentIndex !== null) {
          index = currentIndex++;
        } // Break the loop if reached the timepoint to get the title


        if (currentTimepoint.timepointId === timepoint.timepointId) {
          break;
        }
      }

      var states = {
        0: ['Current'],
        1: ['Prior']
      };
      var parenthesis = states[index] || [];
      var nadir = this.nadir();

      if (nadir && nadir.timepointId === timepoint.timepointId) {
        parenthesis.push('Nadir');
      }

      var parenthesisText = '';

      if (parenthesis.length) {
        parenthesisText = "(".concat(parenthesis.join(', '), ")");
      }

      return "".concat(timepointName, " ").concat(parenthesisText);
    } // TungLT: create timeplate timepoint id for a template annotation group

  }, {
    key: "addTempTimepoint",
    value: function addTempTimepoint(timepoint) {
      this.timepoints.push(timepoint);
      this.onTimepointsUpdated();
    }
  }], [{
    key: "getInstance",
    value: function getInstance() {
      if (!this.Instance) {
        this.Instance = new TimepointApi();
      }

      return this.Instance;
    }
  }]);

  return TimepointApi;
}();

TimepointApi.Instance = void 0;


/***/ }),

/***/ "./measurements/configuration.js":
/*!***************************************!*\
  !*** ./measurements/configuration.js ***!
  \***************************************/
/*! exports provided: measurementApiDefaultConfig, timepointApiDefaultConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "measurementApiDefaultConfig", function() { return measurementApiDefaultConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timepointApiDefaultConfig", function() { return timepointApiDefaultConfig; });
/* harmony import */ var _toolGroups_allTools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toolGroups/allTools */ "./measurements/toolGroups/allTools.js");
/* harmony import */ var _dataExchange__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dataExchange */ "./measurements/dataExchange.js");


var measurementApiDefaultConfig = {
  measurementTools: [_toolGroups_allTools__WEBPACK_IMPORTED_MODULE_0__["allTools"]],
  newLesions: [{
    id: 'newTargets',
    name: 'New Targets',
    toolGroupId: 'targets'
  }, {
    id: 'newNonTargets',
    name: 'New Non-Targets',
    toolGroupId: 'nonTargets'
  }],
  dataExchange: {
    retrieve: _dataExchange__WEBPACK_IMPORTED_MODULE_1__["retrieveMeasurements"],
    store: _dataExchange__WEBPACK_IMPORTED_MODULE_1__["storeMeasurements"]
  }
};
var timepointApiDefaultConfig = {
  dataExchange: {
    retrieve: _dataExchange__WEBPACK_IMPORTED_MODULE_1__["retrieveTimepoints"],
    store: _dataExchange__WEBPACK_IMPORTED_MODULE_1__["storeTimepoints"],
    remove: _dataExchange__WEBPACK_IMPORTED_MODULE_1__["removeTimepoint"],
    update: _dataExchange__WEBPACK_IMPORTED_MODULE_1__["updateTimepoint"],
    disassociate: _dataExchange__WEBPACK_IMPORTED_MODULE_1__["disassociateStudy"]
  }
};


/***/ }),

/***/ "./measurements/conformance/ConformanceCriteria.js":
/*!*********************************************************!*\
  !*** ./measurements/conformance/ConformanceCriteria.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _CriteriaEvaluator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CriteriaEvaluator */ "./measurements/conformance/CriteriaEvaluator.js");
/* harmony import */ var _evaluations__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./evaluations */ "./measurements/conformance/evaluations/index.js");







function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_5___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }





var evaluations = _objectSpread({}, _evaluations__WEBPACK_IMPORTED_MODULE_7__);

var BASELINE = 'baseline';
var FOLLOWUP = 'followup';
var BOTH = 'both';
var TARGETS = 'targets';
var NONTARGETS = 'nonTargets';

var ConformanceCriteria = /*#__PURE__*/function () {
  function ConformanceCriteria(measurementApi, timepointApi) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_3___default()(this, ConformanceCriteria);

    this.measurementApi = measurementApi;
    this.timepointApi = timepointApi;
    this.nonconformities = [];
    this.groupedNonConformities = [];
    this.maxTargets = null;
    this.maxNewTargets = null;
    this.options = options;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_4___default()(ConformanceCriteria, [{
    key: "loadStudy",
    value: function loadStudy(StudyInstanceUID) {
      if (typeof this.options.loadStudy !== 'function') {
        throw new Error('loadStudy callback is not defined');
      }

      return this.options.loadStudy(null, StudyInstanceUID);
    }
  }, {
    key: "validate",
    value: function () {
      var _validate = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(trialCriteriaType) {
        var baselinePromise, followupPromise, _yield$Promise$all, _yield$Promise$all2, baselineData, followupData, mergedData, resultBoth, resultBaseline, resultFollowup, nonconformities, groupedNonConformities;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                baselinePromise = this.getData(BASELINE);
                followupPromise = this.getData(FOLLOWUP);
                _context.next = 4;
                return Promise.all([baselinePromise, followupPromise]);

              case 4:
                _yield$Promise$all = _context.sent;
                _yield$Promise$all2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_yield$Promise$all, 2);
                baselineData = _yield$Promise$all2[0];
                followupData = _yield$Promise$all2[1];
                mergedData = {
                  targets: [],
                  nonTargets: []
                };
                mergedData.targets = mergedData.targets.concat(baselineData.targets);
                mergedData.targets = mergedData.targets.concat(followupData.targets);
                mergedData.nonTargets = mergedData.nonTargets.concat(baselineData.nonTargets);
                mergedData.nonTargets = mergedData.nonTargets.concat(followupData.nonTargets);
                this.maxTargets = null;
                this.maxNewTargets = null;
                resultBoth = this.validateTimepoint(BOTH, trialCriteriaType, mergedData);
                resultBaseline = this.validateTimepoint(BASELINE, trialCriteriaType, baselineData);
                resultFollowup = this.validateTimepoint(FOLLOWUP, trialCriteriaType, followupData);
                nonconformities = resultBaseline.concat(resultFollowup).concat(resultBoth);
                groupedNonConformities = this.groupNonConformities(nonconformities); // Keep both? Group the data only on viewer/measurementTable views?
                // Work with not grouped data (worse lookup performance on measurementTableRow)?

                this.nonconformities = nonconformities;
                this.groupedNonConformities = groupedNonConformities;
                console.warn('nonconformities');
                console.warn(nonconformities);
                console.warn('groupedNonConformities');
                console.warn(groupedNonConformities);
                return _context.abrupt("return", nonconformities);

              case 27:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function validate(_x) {
        return _validate.apply(this, arguments);
      }

      return validate;
    }()
  }, {
    key: "groupNonConformities",
    value: function groupNonConformities(nonconformities) {
      var groups = {};
      var toolsGroupsMap = this.measurementApi.toolsGroupsMap;
      nonconformities.forEach(function (nonConformity) {
        if (nonConformity.isGlobal) {
          groups.globals = groups.globals || {
            messages: []
          };
          groups.globals.messages.push(nonConformity.message);
          return;
        }

        nonConformity.measurements.forEach(function (measurement) {
          var groupName = toolsGroupsMap[measurement.toolType];
          groups[groupName] = groups[groupName] || {
            measurementNumbers: {}
          };
          var group = groups[groupName];
          var measureNumber = measurement.measurementNumber;
          var measurementNumbers = group.measurementNumbers[measureNumber];

          if (!measurementNumbers) {
            measurementNumbers = group.measurementNumbers[measureNumber] = {
              messages: [],
              measurements: []
            };
          }

          measurementNumbers.messages.push(nonConformity.message);
          measurementNumbers.measurements.push(measurement);
        });
      });
      return groups;
    }
  }, {
    key: "validateTimepoint",
    value: function validateTimepoint(timepointType, trialCriteriaType, data) {
      var _this = this;

      var evaluators = this.getEvaluators(timepointType, trialCriteriaType);
      var nonconformities = [];
      evaluators.forEach(function (evaluator) {
        var maxTargets = evaluator.getMaxTargets(false);
        var maxNewTargets = evaluator.getMaxTargets(true);

        if (maxTargets) {
          _this.maxTargets = maxTargets;
        }

        if (maxNewTargets) {
          _this.maxNewTargets = maxNewTargets;
        }

        var result = evaluator.evaluate(data);

        if (result.length > 0) {
          result.forEach(function (resultItem) {
            resultItem.timepointType = timepointType;
          });
        }

        nonconformities = nonconformities.concat(result);
      });
      return nonconformities;
    }
  }, {
    key: "getEvaluators",
    value: function getEvaluators(timepointType, trialCriteriaType) {
      var evaluators = [];
      console.warn(evaluations);
      var trialCriteriaTypeId = trialCriteriaType.id.toLowerCase();
      var evaluation = evaluations[trialCriteriaTypeId];

      if (evaluation) {
        var evaluationTimepoint = evaluation[timepointType];

        if (evaluationTimepoint) {
          evaluators.push(new _CriteriaEvaluator__WEBPACK_IMPORTED_MODULE_6__["CriteriaEvaluator"](evaluationTimepoint));
        }
      }

      return evaluators;
    }
    /*
    * Build the data that will be used to do the conformance criteria checks
    */

  }, {
    key: "getData",
    value: function () {
      var _getData = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(timepointType) {
        var _this2 = this;

        var data, studyPromises, fillData;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                data = {
                  targets: [],
                  nonTargets: []
                };
                studyPromises = [];

                fillData = function fillData(measurementType) {
                  var measurements = _this2.measurementApi.fetch(measurementType);

                  measurements.forEach(function (measurement) {
                    var StudyInstanceUID = measurement.StudyInstanceUID;
                    var timepointId = measurement.timepointId;

                    var timepoint = timepointId && _this2.timepointApi.timepoints.find(function (a) {
                      return a.timepointId === timepointId;
                    });

                    if (!timepoint || timepointType !== BOTH && timepoint.timepointType !== timepointType) {
                      return;
                    }

                    var promise = _this2.loadStudy(StudyInstanceUID);

                    promise.then(function (studyMetadata) {
                      data[measurementType].push({
                        measurement: measurement,
                        metadata: studyMetadata.getFirstInstance(),
                        timepoint: timepoint
                      });
                    }, function (error) {
                      throw new Error(error);
                    });
                    studyPromises.push(promise);
                  });
                };

                fillData(TARGETS);
                fillData(NONTARGETS);
                _context2.next = 7;
                return Promise.all(studyPromises);

              case 7:
                return _context2.abrupt("return", data);

              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function getData(_x2) {
        return _getData.apply(this, arguments);
      }

      return getData;
    }()
  }], [{
    key: "setEvaluationDefinitions",
    value: function setEvaluationDefinitions(evaluationKey, evaluationDefinitions) {
      evaluations[evaluationKey] = evaluationDefinitions;
    }
  }]);

  return ConformanceCriteria;
}();

/* harmony default export */ __webpack_exports__["default"] = (ConformanceCriteria); // OHIF.measurements.ConformanceCriteria = ConformanceCriteria;

/***/ }),

/***/ "./measurements/conformance/CriteriaEvaluator.js":
/*!*******************************************************!*\
  !*** ./measurements/conformance/CriteriaEvaluator.js ***!
  \*******************************************************/
/*! exports provided: CriteriaEvaluator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CriteriaEvaluator", function() { return CriteriaEvaluator; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ajv */ "../node_modules/ajv/lib/ajv.js");
/* harmony import */ var ajv__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ajv__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _criteria_BaseCriterion__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./criteria/BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");
/* harmony import */ var _criteria__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./criteria */ "./measurements/conformance/criteria/index.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_2___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }





var Criteria = _objectSpread({}, _criteria__WEBPACK_IMPORTED_MODULE_5__);

var CriteriaEvaluator = /*#__PURE__*/function () {
  function CriteriaEvaluator(criteriaObject) {
    var _this = this;

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, CriteriaEvaluator);

    var criteriaValidator = this.getCriteriaValidator();
    this.criteria = [];

    if (!criteriaValidator(criteriaObject)) {
      var message = '';
      criteriaValidator.errors.forEach(function (error) {
        message += "\noptions".concat(error.dataPath, " ").concat(error.message);
      });
      throw new Error(message);
    }

    Object.keys(criteriaObject).forEach(function (criterionkey) {
      var optionsObject = criteriaObject[criterionkey];
      var Criterion = Criteria["".concat(criterionkey, "Criterion")];
      var optionsArray = optionsObject instanceof Array ? optionsObject : [optionsObject];
      optionsArray.forEach(function (options) {
        return _this.criteria.push(new Criterion(options, criterionkey));
      });
    });
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(CriteriaEvaluator, [{
    key: "getMaxTargets",
    value: function getMaxTargets() {
      var newTarget = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var result = 0;
      this.criteria.forEach(function (criterion) {
        var newTargetMatch = newTarget === !!criterion.options.newTarget;

        if (criterion instanceof Criteria.MaxTargetsCriterion && newTargetMatch) {
          var limit = criterion.options.limit;

          if (limit > result) {
            result = limit;
          }
        }
      });
      return result;
    }
  }, {
    key: "getCriteriaValidator",
    value: function getCriteriaValidator() {
      if (CriteriaEvaluator.criteriaValidator) {
        return CriteriaEvaluator.criteriaValidator;
      }

      var schema = {
        properties: {},
        definitions: {}
      };
      Object.keys(Criteria).forEach(function (key) {
        var Criterion = Criteria[key];

        if (Criterion.prototype instanceof _criteria_BaseCriterion__WEBPACK_IMPORTED_MODULE_4__["BaseCriterion"]) {
          var criterionkey = key.replace(/Criterion$/, '');
          var criterionDefinition = "#/definitions/".concat(criterionkey);
          schema.definitions[criterionkey] = Criteria["".concat(criterionkey, "Schema")];
          schema.properties[criterionkey] = {
            oneOf: [{
              $ref: criterionDefinition
            }, {
              type: 'array',
              items: {
                $ref: criterionDefinition
              }
            }]
          };
        }
      });
      CriteriaEvaluator.criteriaValidator = new ajv__WEBPACK_IMPORTED_MODULE_3___default.a().compile(schema);
      return CriteriaEvaluator.criteriaValidator;
    }
  }, {
    key: "evaluate",
    value: function evaluate(data) {
      var nonconformities = [];
      this.criteria.forEach(function (criterion) {
        var criterionResult = criterion.evaluate(data);

        if (!criterionResult.passed) {
          nonconformities.push(criterionResult);
        }
      });
      return nonconformities;
    }
  }], [{
    key: "setCriterion",
    value: function setCriterion(criterionKey, criterionDefinitions) {
      Criteria[criterionKey] = criterionDefinitions;
    }
  }]);

  return CriteriaEvaluator;
}();

/***/ }),

/***/ "./measurements/conformance/criteria/BaseCriterion.js":
/*!************************************************************!*\
  !*** ./measurements/conformance/criteria/BaseCriterion.js ***!
  \************************************************************/
/*! exports provided: BaseCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseCriterion", function() { return BaseCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);


var BaseCriterion = /*#__PURE__*/function () {
  function BaseCriterion(options, criterionName) {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, BaseCriterion);

    this.options = options;
    this.criterionName = criterionName;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(BaseCriterion, [{
    key: "generateResponse",
    value: function generateResponse(message, measurements) {
      var passed = !message;
      var isGlobal = !measurements || !measurements.length;
      return {
        passed: passed,
        isGlobal: isGlobal,
        message: message,
        measurements: measurements,
        criterionName: this.criterionName
      };
    }
  }, {
    key: "getNewTargetNumbers",
    value: function getNewTargetNumbers(data) {
      var options = this.options;
      var baselineMeasurementNumbers = [];
      var newTargetNumbers = new Set();

      if (options.newTarget) {
        data.targets.forEach(function (target) {
          var measurementNumber = target.measurement.measurementNumber;

          if (target.timepoint.timepointType === 'baseline') {
            baselineMeasurementNumbers.push(measurementNumber);
          }
        });
        data.targets.forEach(function (target) {
          var measurementNumber = target.measurement.measurementNumber;

          if (target.timepoint.timepointType === 'followup') {
            if (!baselineMeasurementNumbers.includes(measurementNumber)) {
              newTargetNumbers.add(measurementNumber);
            }
          }
        });
      }

      return newTargetNumbers;
    }
  }]);

  return BaseCriterion;
}();

/***/ }),

/***/ "./measurements/conformance/criteria/Location.js":
/*!*******************************************************!*\
  !*** ./measurements/conformance/criteria/Location.js ***!
  \*******************************************************/
/*! exports provided: LocationSchema, LocationCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationSchema", function() { return LocationSchema; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationCriterion", function() { return LocationCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _BaseCriterion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var LocationSchema = {
  type: 'object'
};
/* LocationCriterion
 *   Check if the there are non-target measurements with response different than "present" on baseline
 */

var LocationCriterion = /*#__PURE__*/function (_BaseCriterion) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(LocationCriterion, _BaseCriterion);

  var _super = _createSuper(LocationCriterion);

  function LocationCriterion() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, LocationCriterion);

    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {
      props[_key] = arguments[_key];
    }

    return _super.call.apply(_super, [this].concat(props));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(LocationCriterion, [{
    key: "evaluate",
    value: function evaluate(data) {
      var items = data.targets.concat(data.nonTargets);
      var measurements = [];
      var message;
      items.forEach(function (item) {
        var measurement = item.measurement;

        if (!measurement.location) {
          measurements.push(measurement);
        }
      });

      if (measurements.length) {
        message = 'All measurements should have a location';
      }

      return this.generateResponse(message, measurements);
    }
  }]);

  return LocationCriterion;
}(_BaseCriterion__WEBPACK_IMPORTED_MODULE_5__["BaseCriterion"]);

/***/ }),

/***/ "./measurements/conformance/criteria/MaxTargets.js":
/*!*********************************************************!*\
  !*** ./measurements/conformance/criteria/MaxTargets.js ***!
  \*********************************************************/
/*! exports provided: MaxTargetsSchema, MaxTargetsCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsSchema", function() { return MaxTargetsSchema; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsCriterion", function() { return MaxTargetsCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _BaseCriterion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var MaxTargetsSchema = {
  type: 'object',
  properties: {
    limit: {
      label: 'Max targets allowed in study',
      type: 'integer',
      minimum: 0
    },
    newTarget: {
      label: 'Flag to evaluate only new targets',
      type: 'boolean'
    },
    locationIn: {
      label: 'Filter to evaluate only measurements with the specified locations',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    },
    locationNotIn: {
      label: 'Filter to evaluate only measurements without the specified locations',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    },
    isNodal: {
      label: 'Filter to evaluate only nodal or extranodal measurements',
      type: 'boolean'
    },
    message: {
      label: 'Message to be displayed in case of nonconformity',
      type: 'string'
    }
  },
  required: ['limit']
};
/* MaxTargetsCriterion
 *   Check if the number of target measurements exceeded the limit allowed
 * Options:
 *   limit: Max targets allowed in study
 *   newTarget: Flag to evaluate only new targets (must be evaluated on both)
 *   locationIn: Filter to evaluate only measurements with the specified locations
 *   locationNotIn: Filter to evaluate only measurements without the specified locations
 *   isNodal: Filter to evaluate only nodal or extranodal measurements
 *   message: Message to be displayed in case of nonconformity
 */

var MaxTargetsCriterion = /*#__PURE__*/function (_BaseCriterion) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(MaxTargetsCriterion, _BaseCriterion);

  var _super = _createSuper(MaxTargetsCriterion);

  function MaxTargetsCriterion() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, MaxTargetsCriterion);

    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {
      props[_key] = arguments[_key];
    }

    return _super.call.apply(_super, [this].concat(props));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(MaxTargetsCriterion, [{
    key: "evaluate",
    value: function evaluate(data) {
      var options = this.options;
      var newTargetNumbers = this.getNewTargetNumbers(data);
      var measurementNumbers = [];
      data.targets.forEach(function (target) {
        var _target$measurement = target.measurement,
            location = _target$measurement.location,
            measurementNumber = _target$measurement.measurementNumber,
            isSplitLesion = _target$measurement.isSplitLesion,
            isNodal = _target$measurement.isNodal;

        if (isSplitLesion) {
          return;
        }

        if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal) {
          return;
        }

        if (options.newTarget && !newTargetNumbers.has(measurementNumber)) {
          return;
        }

        if (options.locationIn && options.locationIn.indexOf(location) === -1) {
          return;
        }

        if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1) {
          return;
        }

        measurementNumbers.push(measurementNumber);
      });
      var lesionType = '';

      if (typeof options.isNodal === 'boolean') {
        lesionType = options.isNodal ? 'nodal ' : 'extranodal ';
      }

      var message;

      if (measurementNumbers.length > options.limit) {
        var increment = options.newTarget ? 'new ' : '';
        var plural = options.limit === 1 ? '' : 's';
        var amount = options.limit === 0 ? '' : "more than ".concat(options.limit);
        message = options.message || "The study should not have ".concat(amount, " ").concat(increment).concat(lesionType, "target").concat(plural, ".");
      }

      return this.generateResponse(message);
    }
  }]);

  return MaxTargetsCriterion;
}(_BaseCriterion__WEBPACK_IMPORTED_MODULE_5__["BaseCriterion"]);

/***/ }),

/***/ "./measurements/conformance/criteria/MaxTargetsPerOrgan.js":
/*!*****************************************************************!*\
  !*** ./measurements/conformance/criteria/MaxTargetsPerOrgan.js ***!
  \*****************************************************************/
/*! exports provided: MaxTargetsPerOrganSchema, MaxTargetsPerOrganCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsPerOrganSchema", function() { return MaxTargetsPerOrganSchema; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsPerOrganCriterion", function() { return MaxTargetsPerOrganCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _BaseCriterion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var MaxTargetsPerOrganSchema = {
  type: 'object',
  properties: {
    limit: {
      label: 'Max targets allowed per organ',
      type: 'integer',
      minimum: 1
    },
    newTarget: {
      label: 'Flag to evaluate only new targets',
      type: 'boolean'
    },
    isNodal: {
      label: 'Filter to evaluate only nodal or extranodal measurements',
      type: 'boolean'
    },
    message: {
      label: 'Message to be displayed in case of nonconformity',
      type: 'string'
    }
  },
  required: ['limit']
};
/*
 * MaxTargetsPerOrganCriterion
 *   Check if the number of target measurements per organ exceeded the limit allowed
 * Options:
 *   limit: Max targets allowed in study
 *   newTarget: Flag to evaluate only new targets (must be evaluated on both)
 *   isNodal: Filter to evaluate only nodal or extranodal measurements
 *   message: Message to be displayed in case of nonconformity
 */

var MaxTargetsPerOrganCriterion = /*#__PURE__*/function (_BaseCriterion) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(MaxTargetsPerOrganCriterion, _BaseCriterion);

  var _super = _createSuper(MaxTargetsPerOrganCriterion);

  function MaxTargetsPerOrganCriterion() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, MaxTargetsPerOrganCriterion);

    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {
      props[_key] = arguments[_key];
    }

    return _super.call.apply(_super, [this].concat(props));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(MaxTargetsPerOrganCriterion, [{
    key: "evaluate",
    value: function evaluate(data) {
      var options = this.options;
      var targetsPerOrgan = {};
      var measurements = [];
      var newTargetNumbers = this.getNewTargetNumbers(data);
      data.targets.forEach(function (target) {
        var measurement = target.measurement;
        var location = measurement.location,
            measurementNumber = measurement.measurementNumber,
            isSplitLesion = measurement.isSplitLesion,
            isNodal = measurement.isNodal;

        if (isSplitLesion) {
          return;
        }

        if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal) {
          return;
        }

        if (!targetsPerOrgan[location]) {
          targetsPerOrgan[location] = new Set();
        }

        if (!options.newTarget || newTargetNumbers.has(measurementNumber)) {
          targetsPerOrgan[location].add(measurementNumber);
        }

        if (targetsPerOrgan[location].size > options.limit) {
          measurements.push(measurement);
        }
      });
      var message;

      if (measurements.length) {
        var increment = options.newTarget ? 'new ' : '';
        message = options.message || "Each organ should not have more than ".concat(options.limit, " ").concat(increment, "targets.");
      }

      return this.generateResponse(message, measurements);
    }
  }]);

  return MaxTargetsPerOrganCriterion;
}(_BaseCriterion__WEBPACK_IMPORTED_MODULE_5__["BaseCriterion"]);

/***/ }),

/***/ "./measurements/conformance/criteria/MeasurementsLength.js":
/*!*****************************************************************!*\
  !*** ./measurements/conformance/criteria/MeasurementsLength.js ***!
  \*****************************************************************/
/*! exports provided: MeasurementsLengthSchema, MeasurementsLengthCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurementsLengthSchema", function() { return MeasurementsLengthSchema; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MeasurementsLengthCriterion", function() { return MeasurementsLengthCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _BaseCriterion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var MeasurementsLengthSchema = {
  type: 'object',
  properties: {
    longAxis: {
      label: 'Minimum length of long axis',
      type: 'number',
      minimum: 0
    },
    shortAxis: {
      label: 'Minimum length of short axis',
      type: 'number',
      minimum: 0
    },
    longAxisSliceThicknessMultiplier: {
      label: 'Length of long axis multiplier',
      type: 'number',
      minimum: 0
    },
    shortAxisSliceThicknessMultiplier: {
      label: 'Length of short axis multiplier',
      type: 'number',
      minimum: 0
    },
    modalityIn: {
      label: 'Filter to evaluate only measurements with the specified modalities',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    },
    modalityNotIn: {
      label: 'Filter to evaluate only measurements without the specified modalities',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    },
    locationIn: {
      label: 'Filter to evaluate only measurements with the specified locations',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    },
    locationNotIn: {
      label: 'Filter to evaluate only measurements without the specified locations',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    },
    isNodal: {
      label: 'Filter to evaluate only nodal or extranodal measurements',
      type: 'boolean'
    },
    message: {
      label: 'Message to be displayed in case of nonconformity',
      type: 'string'
    }
  },
  anyOf: [{
    required: ['message', 'longAxis']
  }, {
    required: ['message', 'shortAxis']
  }, {
    required: ['message', 'longAxisSliceThicknessMultiplier']
  }, {
    required: ['message', 'shortAxisSliceThicknessMultiplier']
  }]
};
/*
 * MeasurementsLengthCriterion
 *   Check the measurements of all bidirectional tools based on
 *   short axis, long axis, modalities, location and slice thickness
 * Options:
 *   longAxis: Minimum length of long axis
 *   shortAxis: Minimum length of short axis
 *   longAxisSliceThicknessMultiplier: Length of long axis multiplier
 *   shortAxisSliceThicknessMultiplier: Length of short axis multiplier
 *   modalityIn: Filter to evaluate only measurements with the specified modalities
 *   modalityNotIn: Filter to evaluate only measurements without the specified modalities
 *   locationIn: Filter to evaluate only measurements with the specified locations
 *   locationNotIn: Filter to evaluate only measurements without the specified locations
 *   isNodal: Filter to evaluate only nodal or extranodal measurements
 *   message: Message to be displayed in case of nonconformity
 */

var MeasurementsLengthCriterion = /*#__PURE__*/function (_BaseCriterion) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(MeasurementsLengthCriterion, _BaseCriterion);

  var _super = _createSuper(MeasurementsLengthCriterion);

  function MeasurementsLengthCriterion() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, MeasurementsLengthCriterion);

    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {
      props[_key] = arguments[_key];
    }

    return _super.call.apply(_super, [this].concat(props));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(MeasurementsLengthCriterion, [{
    key: "evaluate",
    value: function evaluate(data) {
      var message;
      var measurements = [];
      var options = this.options;
      var longMultiplier = options.longAxisSliceThicknessMultiplier;
      var shortMultiplier = options.shortAxisSliceThicknessMultiplier;
      data.targets.forEach(function (item) {
        var metadata = item.metadata,
            measurement = item.measurement;
        var location = measurement.location;
        var longestDiameter = measurement.longestDiameter,
            shortestDiameter = measurement.shortestDiameter,
            isNodal = measurement.isNodal;

        if (measurement.childToolsCount) {
          var child = measurement.bidirectional;
          longestDiameter = child && child.longestDiameter || 0;
          shortestDiameter = child && child.shortestDiameter || 0;
        }

        var SliceThickness = metadata.SliceThickness;
        var Modality = metadata.getTagValue('Modality') || ''; // Stop here if the measurement does not match the Modality and location filters

        if (typeof isNodal === 'boolean' && typeof options.isNodal === 'boolean' && options.isNodal !== isNodal) {
          return;
        }

        if (options.locationIn && options.locationIn.indexOf(location) === -1) {
          return;
        }

        if (options.modalityIn && options.modalityIn.indexOf(Modality) === -1) {
          return;
        }

        if (options.locationNotIn && options.locationNotIn.indexOf(location) > -1) {
          return;
        }

        if (options.modalityNotIn && options.modalityNotIn.indexOf(Modality) > -1) {
          return;
        } // Check the measurement length


        var failed = options.longAxis && longestDiameter < options.longAxis || options.shortAxis && shortestDiameter < options.shortAxis || longMultiplier && !isNaN(SliceThickness) && longestDiameter < longMultiplier * SliceThickness || shortMultiplier && !isNaN(SliceThickness) && shortestDiameter < shortMultiplier * SliceThickness; // Mark this measurement as invalid if some of the checks have failed

        if (failed) {
          measurements.push(measurement);
        }
      }); // Use the options' message if some measurement is invalid

      if (measurements.length) {
        message = options.message;
      }

      return this.generateResponse(message, measurements);
    }
  }]);

  return MeasurementsLengthCriterion;
}(_BaseCriterion__WEBPACK_IMPORTED_MODULE_5__["BaseCriterion"]);

/***/ }),

/***/ "./measurements/conformance/criteria/Modality.js":
/*!*******************************************************!*\
  !*** ./measurements/conformance/criteria/Modality.js ***!
  \*******************************************************/
/*! exports provided: ModalitySchema, ModalityCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalitySchema", function() { return ModalitySchema; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalityCriterion", function() { return ModalityCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _BaseCriterion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var ModalitySchema = {
  type: 'object',
  properties: {
    method: {
      label: 'Specify if it\'s goinig to "allow" or "deny" the modalities',
      type: 'string',
      "enum": ['allow', 'deny']
    },
    measurementTypes: {
      label: 'List of measurement types that will be evaluated',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    },
    modalities: {
      label: 'List of allowed/denied modalities',
      type: 'array',
      items: {
        type: 'string'
      },
      minItems: 1,
      uniqueItems: true
    }
  },
  required: ['method', 'modalities']
};
/*
 * ModalityCriteria
 *   Check if a Modality is allowed or denied
 * Options:
 *   method (string): Specify if it\'s goinig to "allow" or "deny" the modalities
 *   measurementTypes (string[]): List of measurement types that will be evaluated
 *   modalities (string[]): List of allowed/denied modalities
 */

var ModalityCriterion = /*#__PURE__*/function (_BaseCriterion) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(ModalityCriterion, _BaseCriterion);

  var _super = _createSuper(ModalityCriterion);

  function ModalityCriterion() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, ModalityCriterion);

    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {
      props[_key] = arguments[_key];
    }

    return _super.call.apply(_super, [this].concat(props));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(ModalityCriterion, [{
    key: "evaluate",
    value: function evaluate(data) {
      var measurementTypes = this.options.measurementTypes || ['targets'];
      var modalitiesSet = new Set(this.options.modalities);
      var validationMethod = this.options.method;
      var measurements = [];
      var invalidModalities = new Set();
      var message;
      measurementTypes.forEach(function (measurementType) {
        var items = data[measurementType];
        items.forEach(function (item) {
          var measurement = item.measurement,
              metadata = item.metadata;
          var Modality = metadata.getTagValue('Modality') || '';

          if (validationMethod === 'allow' && !modalitiesSet.has(Modality) || validationMethod === 'deny' && modalitiesSet.has(Modality)) {
            measurements.push(measurement);
            invalidModalities.add(Modality);
          }
        });
      });

      if (measurements.length) {
        var uniqueModalities = Array.from(invalidModalities);
        var uniqueModalitiesText = uniqueModalities.join(', ');
        var modalityText = uniqueModalities.length > 1 ? 'modalities' : 'Modality';
        message = "The ".concat(modalityText, " ").concat(uniqueModalitiesText, " should not be used as a method of measurement");
      }

      return this.generateResponse(message, measurements);
    }
  }]);

  return ModalityCriterion;
}(_BaseCriterion__WEBPACK_IMPORTED_MODULE_5__["BaseCriterion"]);

/***/ }),

/***/ "./measurements/conformance/criteria/NonTargetResponse.js":
/*!****************************************************************!*\
  !*** ./measurements/conformance/criteria/NonTargetResponse.js ***!
  \****************************************************************/
/*! exports provided: NonTargetResponseSchema, NonTargetResponseCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NonTargetResponseSchema", function() { return NonTargetResponseSchema; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NonTargetResponseCriterion", function() { return NonTargetResponseCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _BaseCriterion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var NonTargetResponseSchema = {
  type: 'object'
};
/* NonTargetResponseCriterion
 *   Check if the there are non-target measurements with response different than "present" on baseline
 */

var NonTargetResponseCriterion = /*#__PURE__*/function (_BaseCriterion) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(NonTargetResponseCriterion, _BaseCriterion);

  var _super = _createSuper(NonTargetResponseCriterion);

  function NonTargetResponseCriterion() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, NonTargetResponseCriterion);

    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {
      props[_key] = arguments[_key];
    }

    return _super.call.apply(_super, [this].concat(props));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(NonTargetResponseCriterion, [{
    key: "evaluate",
    value: function evaluate(data) {
      var items = data.nonTargets;
      var measurements = [];
      var message;
      items.forEach(function (item) {
        var measurement = item.measurement;
        var response = (measurement.response || '').toLowerCase();

        if (response !== 'present') {
          measurements.push(measurement);
        }
      });

      if (measurements.length) {
        message = 'Non-targets can only be assessed as "present"';
      }

      return this.generateResponse(message, measurements);
    }
  }]);

  return NonTargetResponseCriterion;
}(_BaseCriterion__WEBPACK_IMPORTED_MODULE_5__["BaseCriterion"]);

/***/ }),

/***/ "./measurements/conformance/criteria/TargetType.js":
/*!*********************************************************!*\
  !*** ./measurements/conformance/criteria/TargetType.js ***!
  \*********************************************************/
/*! exports provided: TargetTypeSchema, TargetTypeCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TargetTypeSchema", function() { return TargetTypeSchema; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TargetTypeCriterion", function() { return TargetTypeCriterion; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _BaseCriterion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./BaseCriterion */ "./measurements/conformance/criteria/BaseCriterion.js");






function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }


var TargetTypeSchema = {
  type: 'object'
};
/* TargetTypeCriterion
 *   Check if the there are non-bidirectional target measurements on baseline
 */

var TargetTypeCriterion = /*#__PURE__*/function (_BaseCriterion) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(TargetTypeCriterion, _BaseCriterion);

  var _super = _createSuper(TargetTypeCriterion);

  function TargetTypeCriterion() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, TargetTypeCriterion);

    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {
      props[_key] = arguments[_key];
    }

    return _super.call.apply(_super, [this].concat(props));
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(TargetTypeCriterion, [{
    key: "evaluate",
    value: function evaluate(data) {
      var items = data.targets;
      var measurements = [];
      var message;
      items.forEach(function (item) {
        var measurement = item.measurement;

        if (measurement.toolType !== 'Bidirectional' && !measurement.bidirectional) {
          measurements.push(measurement);
        }
      });

      if (measurements.length) {
        message = 'Target lesions must have measurements (cannot be assessed as CR, UN/NE, EX)';
      }

      return this.generateResponse(message, measurements);
    }
  }]);

  return TargetTypeCriterion;
}(_BaseCriterion__WEBPACK_IMPORTED_MODULE_5__["BaseCriterion"]);

/***/ }),

/***/ "./measurements/conformance/criteria/index.js":
/*!****************************************************!*\
  !*** ./measurements/conformance/criteria/index.js ***!
  \****************************************************/
/*! exports provided: LocationSchema, LocationCriterion, MaxTargetsPerOrganSchema, MaxTargetsPerOrganCriterion, MaxTargetsSchema, MaxTargetsCriterion, MeasurementsLengthSchema, MeasurementsLengthCriterion, ModalitySchema, ModalityCriterion, NonTargetResponseSchema, NonTargetResponseCriterion, TargetTypeSchema, TargetTypeCriterion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Location__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Location */ "./measurements/conformance/criteria/Location.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LocationSchema", function() { return _Location__WEBPACK_IMPORTED_MODULE_0__["LocationSchema"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LocationCriterion", function() { return _Location__WEBPACK_IMPORTED_MODULE_0__["LocationCriterion"]; });

/* harmony import */ var _MaxTargetsPerOrgan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MaxTargetsPerOrgan */ "./measurements/conformance/criteria/MaxTargetsPerOrgan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsPerOrganSchema", function() { return _MaxTargetsPerOrgan__WEBPACK_IMPORTED_MODULE_1__["MaxTargetsPerOrganSchema"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsPerOrganCriterion", function() { return _MaxTargetsPerOrgan__WEBPACK_IMPORTED_MODULE_1__["MaxTargetsPerOrganCriterion"]; });

/* harmony import */ var _MaxTargets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MaxTargets */ "./measurements/conformance/criteria/MaxTargets.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsSchema", function() { return _MaxTargets__WEBPACK_IMPORTED_MODULE_2__["MaxTargetsSchema"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MaxTargetsCriterion", function() { return _MaxTargets__WEBPACK_IMPORTED_MODULE_2__["MaxTargetsCriterion"]; });

/* harmony import */ var _MeasurementsLength__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MeasurementsLength */ "./measurements/conformance/criteria/MeasurementsLength.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurementsLengthSchema", function() { return _MeasurementsLength__WEBPACK_IMPORTED_MODULE_3__["MeasurementsLengthSchema"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MeasurementsLengthCriterion", function() { return _MeasurementsLength__WEBPACK_IMPORTED_MODULE_3__["MeasurementsLengthCriterion"]; });

/* harmony import */ var _Modality__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Modality */ "./measurements/conformance/criteria/Modality.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModalitySchema", function() { return _Modality__WEBPACK_IMPORTED_MODULE_4__["ModalitySchema"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ModalityCriterion", function() { return _Modality__WEBPACK_IMPORTED_MODULE_4__["ModalityCriterion"]; });

/* harmony import */ var _NonTargetResponse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./NonTargetResponse */ "./measurements/conformance/criteria/NonTargetResponse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NonTargetResponseSchema", function() { return _NonTargetResponse__WEBPACK_IMPORTED_MODULE_5__["NonTargetResponseSchema"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NonTargetResponseCriterion", function() { return _NonTargetResponse__WEBPACK_IMPORTED_MODULE_5__["NonTargetResponseCriterion"]; });

/* harmony import */ var _TargetType__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./TargetType */ "./measurements/conformance/criteria/TargetType.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TargetTypeSchema", function() { return _TargetType__WEBPACK_IMPORTED_MODULE_6__["TargetTypeSchema"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TargetTypeCriterion", function() { return _TargetType__WEBPACK_IMPORTED_MODULE_6__["TargetTypeCriterion"]; });









/***/ }),

/***/ "./measurements/conformance/evaluations/index.js":
/*!*******************************************************!*\
  !*** ./measurements/conformance/evaluations/index.js ***!
  \*******************************************************/
/*! exports provided: recist11 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "recist11", function() { return recist11; });
/* harmony import */ var _recist_json__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./recist.json */ "./measurements/conformance/evaluations/recist.json");
var _recist_json__WEBPACK_IMPORTED_MODULE_0___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./recist.json */ "./measurements/conformance/evaluations/recist.json", 1);

var recist11 = _recist_json__WEBPACK_IMPORTED_MODULE_0___namespace;

/***/ }),

/***/ "./measurements/conformance/evaluations/recist.json":
/*!**********************************************************!*\
  !*** ./measurements/conformance/evaluations/recist.json ***!
  \**********************************************************/
/*! exports provided: both, baseline, followup, default */
/***/ (function(module) {

module.exports = JSON.parse("{\"both\":{\"Location\":{}},\"baseline\":{\"TargetType\":{},\"MaxTargetsPerOrgan\":{\"limit\":2},\"MaxTargets\":{\"limit\":5},\"MeasurementsLength\":[{\"longAxis\":10,\"longAxisSliceThicknessMultiplier\":2,\"modalityIn\":[\"CT\",\"MR\"],\"locationNotIn\":[\"Lymph Node\"],\"message\":\"Extranodal lesions must be >= 10mm long axis AND >= double the acquisition slice thickness by CT and MR\"},{\"shortAxis\":20,\"longAxis\":20,\"modalityIn\":[\"PX\",\"XA\"],\"locationNotIn\":[\"Lymph Node\"],\"message\":\"Extranodal lesions must be >= 20mm on chest x-ray (although x-rays rarely used for clinical trial assessment)\"},{\"shortAxis\":15,\"shortAxisSliceThicknessMultiplier\":2,\"modalityIn\":[\"CT\",\"MR\"],\"locationIn\":[\"Lymph Node\"],\"message\":\"Nodal lesions must be >= 15mm short axis AND >= double the acquisition slice thickness by CT and MR\"}]},\"followup\":{}}");

/***/ }),

/***/ "./measurements/dataExchange.js":
/*!**************************************!*\
  !*** ./measurements/dataExchange.js ***!
  \**************************************/
/*! exports provided: retrieveMeasurements, storeMeasurements, retrieveTimepoints, storeTimepoints, updateTimepoint, removeTimepoint, disassociateStudy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retrieveMeasurements", function() { return retrieveMeasurements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "storeMeasurements", function() { return storeMeasurements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retrieveTimepoints", function() { return retrieveTimepoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "storeTimepoints", function() { return storeTimepoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateTimepoint", function() { return updateTimepoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeTimepoint", function() { return removeTimepoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "disassociateStudy", function() { return disassociateStudy; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "./log.js");

var retrieveMeasurements = function retrieveMeasurements(PatientID, timepointIds) {
  _log__WEBPACK_IMPORTED_MODULE_0__["default"].error('retrieveMeasurements');
  return Promise.resolve();
};
var storeMeasurements = function storeMeasurements(measurementData, timepointIds) {
  _log__WEBPACK_IMPORTED_MODULE_0__["default"].error('storeMeasurements');
  return Promise.resolve();
};
var retrieveTimepoints = function retrieveTimepoints(filter) {
  _log__WEBPACK_IMPORTED_MODULE_0__["default"].error('retrieveTimepoints');
  return Promise.resolve();
};
var storeTimepoints = function storeTimepoints(timepointData) {
  _log__WEBPACK_IMPORTED_MODULE_0__["default"].error('storeTimepoints');
  return Promise.resolve();
};
var updateTimepoint = function updateTimepoint(timepointData, query) {
  _log__WEBPACK_IMPORTED_MODULE_0__["default"].error('updateTimepoint');
  return Promise.resolve();
};
var removeTimepoint = function removeTimepoint(timepointId) {
  _log__WEBPACK_IMPORTED_MODULE_0__["default"].error('removeTimepoint');
  return Promise.resolve();
};
var disassociateStudy = function disassociateStudy(timepointIds, StudyInstanceUID) {
  _log__WEBPACK_IMPORTED_MODULE_0__["default"].error('disassociateStudy');
  return Promise.resolve();
};

/***/ }),

/***/ "./measurements/index.js":
/*!*******************************!*\
  !*** ./measurements/index.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tools */ "./measurements/tools/index.js");
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes */ "./measurements/classes/TimepointApi.js");
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _conformance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./conformance */ "./measurements/conformance/ConformanceCriteria.js");
/* harmony import */ var _measurementHandlers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./measurementHandlers */ "./measurements/measurementHandlers/index.js");
/* harmony import */ var _lib_getDescription__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lib/getDescription */ "./measurements/lib/getDescription.js");
/* harmony import */ var _lib_getImageAttributes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/getImageAttributes */ "./measurements/lib/getImageAttributes.js");
/* harmony import */ var _lib_getImageIdForImagePath__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./lib/getImageIdForImagePath */ "./measurements/lib/getImageIdForImagePath.js");
/* harmony import */ var _lib_getLabel__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/getLabel */ "./measurements/lib/getLabel.js");
/* harmony import */ var _ltTools__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ltTools */ "./measurements/ltTools.js");









var measurements = {
  TimepointApi: _classes__WEBPACK_IMPORTED_MODULE_1__["default"],
  MeasurementApi: _classes__WEBPACK_IMPORTED_MODULE_2__["default"],
  ConformanceCriteria: _conformance__WEBPACK_IMPORTED_MODULE_3__["default"],
  MeasurementHandlers: _measurementHandlers__WEBPACK_IMPORTED_MODULE_4__["default"],
  ltTools: _ltTools__WEBPACK_IMPORTED_MODULE_9__["default"],
  tools: _tools__WEBPACK_IMPORTED_MODULE_0__,
  getLabel: _lib_getLabel__WEBPACK_IMPORTED_MODULE_8__["default"],
  getDescription: _lib_getDescription__WEBPACK_IMPORTED_MODULE_5__["default"],
  getImageAttributes: _lib_getImageAttributes__WEBPACK_IMPORTED_MODULE_6__["default"],
  getImageIdForImagePath: _lib_getImageIdForImagePath__WEBPACK_IMPORTED_MODULE_7__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (measurements);

/***/ }),

/***/ "./measurements/lib/getDescription.js":
/*!********************************************!*\
  !*** ./measurements/lib/getDescription.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (measurement) {
  return measurement.description;
});

/***/ }),

/***/ "./measurements/lib/getImageAttributes.js":
/*!************************************************!*\
  !*** ./measurements/lib/getImageAttributes.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_0__);

/* harmony default export */ __webpack_exports__["default"] = (function (element) {
  // Get the Cornerstone imageId
  var enabledElement = cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.getEnabledElement(element);
  var imageId = enabledElement.image.imageId; // Get StudyInstanceUID & PatientID

  var _cornerstone$metaData = cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.metaData.get('instance', imageId),
      StudyInstanceUID = _cornerstone$metaData.StudyInstanceUID,
      PatientID = _cornerstone$metaData.PatientID,
      SeriesInstanceUID = _cornerstone$metaData.SeriesInstanceUID,
      SOPInstanceUID = _cornerstone$metaData.SOPInstanceUID;

  var splitImageId = imageId.split('&frame');
  var frameIndex = splitImageId[1] !== undefined ? Number(splitImageId[1]) : 0;
  var imagePath = [StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frameIndex].join('_');
  return {
    PatientID: PatientID,
    StudyInstanceUID: StudyInstanceUID,
    SeriesInstanceUID: SeriesInstanceUID,
    SOPInstanceUID: SOPInstanceUID,
    frameIndex: frameIndex,
    imagePath: imagePath
  };
});

/***/ }),

/***/ "./measurements/lib/getImageIdForImagePath.js":
/*!****************************************************!*\
  !*** ./measurements/lib/getImageIdForImagePath.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils_studyMetadataManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/studyMetadataManager */ "./utils/studyMetadataManager.js");


/* harmony default export */ __webpack_exports__["default"] = (function (imagePath) {
  var thumbnail = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var _imagePath$split = imagePath.split('_'),
      _imagePath$split2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_imagePath$split, 4),
      StudyInstanceUID = _imagePath$split2[0],
      SeriesInstanceUID = _imagePath$split2[1],
      SOPInstanceUID = _imagePath$split2[2],
      frameIndex = _imagePath$split2[3];

  var studyMetadata = _utils_studyMetadataManager__WEBPACK_IMPORTED_MODULE_1__["default"].get(StudyInstanceUID);
  var series = studyMetadata.getSeriesByUID(SeriesInstanceUID);
  var instance = series.getInstanceByUID(SOPInstanceUID);
  return instance.getImageId(frameIndex, thumbnail);
});

/***/ }),

/***/ "./measurements/lib/getLabel.js":
/*!**************************************!*\
  !*** ./measurements/lib/getLabel.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function (measurement) {
  if (!measurement) {
    return;
  }

  switch (measurement.toolType) {
    case 'Bidirectional':
    case 'TargetCR':
    case 'TargetNE':
    case 'TargetUN':
      return "Target ".concat(measurement.lesionNamingNumber);

    case 'NonTarget':
      return "Non-Target ".concat(measurement.lesionNamingNumber);
  }
});

/***/ }),

/***/ "./measurements/ltTools.js":
/*!*********************************!*\
  !*** ./measurements/ltTools.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/cloneDeep */ "../node_modules/lodash/cloneDeep.js");
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _toolGroups_targets__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./toolGroups/targets */ "./measurements/toolGroups/targets.js");
/* harmony import */ var _toolGroups_nonTargets__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./toolGroups/nonTargets */ "./measurements/toolGroups/nonTargets.js");
/* harmony import */ var _toolGroups_temp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./toolGroups/temp */ "./measurements/toolGroups/temp.js");




var ltTools = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_0___default()([_toolGroups_targets__WEBPACK_IMPORTED_MODULE_1__["targets"], _toolGroups_nonTargets__WEBPACK_IMPORTED_MODULE_2__["nonTargets"], _toolGroups_temp__WEBPACK_IMPORTED_MODULE_3__["temp"]]);
ltTools.forEach(function (toolGroup) {
  toolGroup.childTools.forEach(function (tool) {
    tool.toolGroup = toolGroup.id;
  });
});
/* harmony default export */ __webpack_exports__["default"] = (ltTools);

/***/ }),

/***/ "./measurements/measurementHandlers/handleChildMeasurementAdded.js":
/*!*************************************************************************!*\
  !*** ./measurements/measurementHandlers/handleChildMeasurementAdded.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "./log.js");
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../user */ "./user.js");
/* harmony import */ var _lib_getImageAttributes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/getImageAttributes */ "./measurements/lib/getImageAttributes.js");
/* harmony import */ var _lib_getLabel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/getLabel */ "./measurements/lib/getLabel.js");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }







/* harmony default export */ __webpack_exports__["default"] = (function (_ref) {
  var eventData = _ref.eventData,
      tool = _ref.tool,
      toolGroupId = _ref.toolGroupId,
      toolGroup = _ref.toolGroup;
  var measurementApi = _classes__WEBPACK_IMPORTED_MODULE_2__["default"].Instance;

  if (!measurementApi) {
    _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Measurement API is not initialized');
  }

  var measurementData = eventData.measurementData;
  var collection = measurementApi.tools[tool.parentTool]; // Stop here if the tool data shall not be persisted (e.g. temp tools)

  if (!collection) return; // Stop here if there's no measurement data or if it was cancelled

  if (!measurementData || measurementData.cancelled) return;
  _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('CornerstoneToolsMeasurementAdded');
  var imageAttributes = Object(_lib_getImageAttributes__WEBPACK_IMPORTED_MODULE_5__["default"])(eventData.element);
  var additionalProperties = Object.assign(imageAttributes, {
    userId: _user__WEBPACK_IMPORTED_MODULE_4__["default"].getUserId()
  });

  var childMeasurement = _objectSpread({}, measurementData, {}, additionalProperties);

  var parentMeasurement = collection.find(function (t) {
    return t.toolType === tool.parentTool && t.PatientID === imageAttributes.PatientID && t[tool.attribute] === null;
  }); // Check if a measurement to fit this child tool already exists

  if (parentMeasurement) {
    var key = tool.attribute; // Add the createdAt attribute

    childMeasurement.createdAt = new Date(); // Update the parent measurement

    parentMeasurement[key] = childMeasurement;
    parentMeasurement.childToolsCount = (parentMeasurement.childToolsCount || 0) + 1;
    measurementApi.updateMeasurement(tool.parentTool, parentMeasurement); // Update the measurementData ID and lesionNamingNumber

    measurementData._id = parentMeasurement._id;
    measurementData.lesionNamingNumber = parentMeasurement.lesionNamingNumber;
  } else {
    var measurement = {
      toolType: tool.parentTool,
      lesionNamingNumber: measurementData.lesionNamingNumber,
      userId: _user__WEBPACK_IMPORTED_MODULE_4__["default"].getUserId(),
      PatientID: imageAttributes.PatientID,
      StudyInstanceUID: imageAttributes.StudyInstanceUID
    };
    measurement[tool.attribute] = _objectSpread({}, measurementData, {}, additionalProperties);
    var addedMeasurement = measurementApi.addMeasurement(tool.parentTool, measurement);
    Object.assign(measurementData, addedMeasurement);
  }

  var measurementLabel = Object(_lib_getLabel__WEBPACK_IMPORTED_MODULE_6__["default"])(measurementData);

  if (measurementLabel) {
    measurementData.labels = [measurementLabel];
  } // TODO: This is very hacky, but will work for now


  cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default.a.getEnabledElements().forEach(function (enabledElement) {
    cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default.a.updateImage(enabledElement.element);
  }); // TODO: Notify about the last activated measurement

  if (_classes__WEBPACK_IMPORTED_MODULE_2__["default"].isToolIncluded(tool)) {// TODO: Notify that viewer suffered changes
  }
});

/***/ }),

/***/ "./measurements/measurementHandlers/handleChildMeasurementModified.js":
/*!****************************************************************************!*\
  !*** ./measurements/measurementHandlers/handleChildMeasurementModified.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "./log.js");



/* harmony default export */ __webpack_exports__["default"] = (function (_ref) {
  var eventData = _ref.eventData,
      tool = _ref.tool,
      toolGroupId = _ref.toolGroupId,
      toolGroup = _ref.toolGroup;
  var measurementApi = _classes__WEBPACK_IMPORTED_MODULE_1__["default"].Instance;

  if (!measurementApi) {
    _log__WEBPACK_IMPORTED_MODULE_2__["default"].warn('Measurement API is not initialized');
  }

  var measurementData = eventData.measurementData;
  var collection = measurementApi.tools[tool.parentTool]; // Stop here if the tool data shall not be persisted (e.g. temp tools)

  if (!collection) return;
  _log__WEBPACK_IMPORTED_MODULE_2__["default"].info('CornerstoneToolsMeasurementModified');
  var measurement = collection.find(function (t) {
    return t._id === measurementData._id;
  });
  var childMeasurement = measurement && measurement[tool.attribute]; // Stop here if the measurement is already deleted

  if (!childMeasurement) return;
  childMeasurement = Object.assign(childMeasurement, measurementData);
  childMeasurement.viewport = cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.getViewport(eventData.element); // Update the parent measurement

  measurement[tool.attribute] = childMeasurement;
  measurementApi.updateMeasurement(tool.parentTool, measurement); // TODO: Notify about the last activated measurement

  if (_classes__WEBPACK_IMPORTED_MODULE_1__["default"].isToolIncluded(tool)) {// TODO: Notify that viewer suffered changes
  }
});

/***/ }),

/***/ "./measurements/measurementHandlers/handleChildMeasurementRemoved.js":
/*!***************************************************************************!*\
  !*** ./measurements/measurementHandlers/handleChildMeasurementRemoved.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "./log.js");



/* harmony default export */ __webpack_exports__["default"] = (function (_ref) {
  var eventData = _ref.eventData,
      tool = _ref.tool,
      toolGroupId = _ref.toolGroupId,
      toolGroup = _ref.toolGroup;
  _log__WEBPACK_IMPORTED_MODULE_2__["default"].info('CornerstoneToolsMeasurementRemoved'); // Mod by TungLT: add persist flag to add removed annotation to template deteled data, which needs to send request to server

  var measurementData = eventData.measurementData,
      persist = eventData.persist;
  var measurementApi = _classes__WEBPACK_IMPORTED_MODULE_1__["default"].Instance;

  if (!measurementApi) {
    _log__WEBPACK_IMPORTED_MODULE_2__["default"].warn('Measurement API is not initialized');
  }

  var collection = measurementApi.tools[tool.parentTool]; // Stop here if the tool data shall not be persisted (e.g. temp tools)

  if (!collection) return;
  var measurementIndex = collection.findIndex(function (t) {
    return t._id === measurementData._id;
  });
  var measurement = measurementIndex > -1 ? collection[measurementIndex] : null; // Stop here if the measurement is already gone or never existed

  if (!measurement) return;

  if (measurement.childToolsCount === 1) {
    // Remove the measurement
    collection.splice(measurementIndex, 1);
    measurementApi.onMeasurementRemoved(tool.parentTool, measurement, persist);
  } else {
    // Update the measurement
    measurement[tool.attribute] = null;
    measurement.childToolsCount = (measurement.childToolsCount || 0) - 1;
    measurementApi.updateMeasurement(tool.parentTool, measurement);
  } // TODO: This is very hacky, but will work for now


  cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.getEnabledElements().forEach(function (enabledElement) {
    cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.updateImage(enabledElement.element);
  });

  if (_classes__WEBPACK_IMPORTED_MODULE_1__["default"].isToolIncluded(tool)) {// TODO: Notify that viewer suffered changes
  }
});

/***/ }),

/***/ "./measurements/measurementHandlers/handleSingleMeasurementAdded.js":
/*!**************************************************************************!*\
  !*** ./measurements/measurementHandlers/handleSingleMeasurementAdded.js ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return handleSingleMeasurementAdded; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "./log.js");
/* harmony import */ var _user__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../user */ "./user.js");
/* harmony import */ var _lib_getImageAttributes__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/getImageAttributes */ "./measurements/lib/getImageAttributes.js");
/* harmony import */ var _lib_getLabel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/getLabel */ "./measurements/lib/getLabel.js");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }







function handleSingleMeasurementAdded(_ref) {
  var eventData = _ref.eventData,
      tool = _ref.tool;
  var measurementApi = _classes__WEBPACK_IMPORTED_MODULE_2__["default"].Instance;

  if (!measurementApi) {
    _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Measurement API is not initialized');
  }

  var measurementData = eventData.measurementData,
      toolType = eventData.toolType;
  var collection = measurementApi.tools[toolType]; // Stop here if the tool data shall not be persisted (e.g. temp tools)

  if (!collection) return; // Stop here if there's no measurement data or if it was cancelled

  if (!measurementData || measurementData.cancelled) return;
  _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('CornerstoneToolsMeasurementAdded');
  var imageAttributes = Object(_lib_getImageAttributes__WEBPACK_IMPORTED_MODULE_5__["default"])(eventData.element);

  var measurement = _objectSpread({}, measurementData, {}, imageAttributes, {
    lesionNamingNumber: measurementData.lesionNamingNumber,
    userId: _user__WEBPACK_IMPORTED_MODULE_4__["default"].getUserId(),
    toolType: toolType
  });

  var addedMeasurement = measurementApi.addMeasurement(toolType, measurement);
  Object.assign(measurementData, addedMeasurement);
  var measurementLabel = Object(_lib_getLabel__WEBPACK_IMPORTED_MODULE_6__["default"])(measurementData);

  if (measurementLabel) {
    measurementData.labels = [measurementLabel];
  } // TODO: This is very hacky, but will work for now


  cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default.a.getEnabledElements().forEach(function (enabledElement) {
    cornerstone_core__WEBPACK_IMPORTED_MODULE_1___default.a.updateImage(enabledElement.element);
  }); // TODO: Notify about the last activated measurement

  if (_classes__WEBPACK_IMPORTED_MODULE_2__["default"].isToolIncluded(tool)) {// TODO: Notify that viewer suffered changes
  }
}

/***/ }),

/***/ "./measurements/measurementHandlers/handleSingleMeasurementModified.js":
/*!*****************************************************************************!*\
  !*** ./measurements/measurementHandlers/handleSingleMeasurementModified.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "./log.js");



/* harmony default export */ __webpack_exports__["default"] = (function (_ref) {
  var eventData = _ref.eventData,
      tool = _ref.tool,
      toolGroupId = _ref.toolGroupId,
      toolGroup = _ref.toolGroup;
  var measurementApi = _classes__WEBPACK_IMPORTED_MODULE_1__["default"].Instance;

  if (!measurementApi) {
    _log__WEBPACK_IMPORTED_MODULE_2__["default"].warn('Measurement API is not initialized');
  }

  var measurementData = eventData.measurementData,
      toolType = eventData.toolType;
  var collection = measurementApi.tools[toolType]; // Stop here if the tool data shall not be persisted (e.g. temp tools)

  if (!collection) return;
  _log__WEBPACK_IMPORTED_MODULE_2__["default"].info('CornerstoneToolsMeasurementModified');
  var measurement = collection.find(function (t) {
    return t._id === measurementData._id;
  }); // Stop here if the measurement is already deleted

  if (!measurement) return;
  measurement = Object.assign(measurement, measurementData);
  measurement.viewport = cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.getViewport(eventData.element);
  measurementApi.updateMeasurement(toolType, measurement); // TODO: Notify about the last activated measurement

  if (_classes__WEBPACK_IMPORTED_MODULE_1__["default"].isToolIncluded(tool)) {// TODO: Notify that viewer suffered changes
  }
});

/***/ }),

/***/ "./measurements/measurementHandlers/handleSingleMeasurementRemoved.js":
/*!****************************************************************************!*\
  !*** ./measurements/measurementHandlers/handleSingleMeasurementRemoved.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return handleSingleMeasurementRemoved; });
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../log */ "./log.js");



function handleSingleMeasurementRemoved(_ref) {
  var eventData = _ref.eventData,
      tool = _ref.tool,
      toolGroupId = _ref.toolGroupId,
      toolGroup = _ref.toolGroup;
  _log__WEBPACK_IMPORTED_MODULE_2__["default"].info('CornerstoneToolsMeasurementRemoved'); // Mod by TungLT: add persist flag to add removed annotation to template deteled data, which needs to send request to server

  var measurementData = eventData.measurementData,
      toolType = eventData.toolType,
      persist = eventData.persist;
  var measurementApi = _classes__WEBPACK_IMPORTED_MODULE_1__["default"].Instance;

  if (!measurementApi) {
    _log__WEBPACK_IMPORTED_MODULE_2__["default"].warn('Measurement API is not initialized');
  }

  var collection = measurementApi.tools[toolType]; // Stop here if the tool data shall not be persisted (e.g. temp tools)

  if (!collection) return;
  var measurementTypeId = measurementApi.toolsGroupsMap[toolType];
  var measurement = collection.find(function (t) {
    return t._id === measurementData._id;
  }); // Stop here if the measurement is already gone or never existed

  if (!measurement) return; // Remove all the measurements with the given type and number
  // Modified by TungLT
  // const { lesionNamingNumber, timepointId } = measurement;

  measurementApi.deleteMeasurements(toolType, measurementTypeId, measurement, persist); // TODO: This is very hacky, but will work for now

  cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.getEnabledElements().forEach(function (enabledElement) {
    cornerstone_core__WEBPACK_IMPORTED_MODULE_0___default.a.updateImage(enabledElement.element);
  });

  if (_classes__WEBPACK_IMPORTED_MODULE_1__["default"].isToolIncluded(tool)) {// TODO: Notify that viewer suffered changes
  }
}

/***/ }),

/***/ "./measurements/measurementHandlers/index.js":
/*!***************************************************!*\
  !*** ./measurements/measurementHandlers/index.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../classes */ "./measurements/classes/MeasurementApi.js");
/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../classes */ "./measurements/classes/TimepointApi.js");
/* harmony import */ var _handleSingleMeasurementAdded__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handleSingleMeasurementAdded */ "./measurements/measurementHandlers/handleSingleMeasurementAdded.js");
/* harmony import */ var _handleChildMeasurementAdded__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./handleChildMeasurementAdded */ "./measurements/measurementHandlers/handleChildMeasurementAdded.js");
/* harmony import */ var _handleSingleMeasurementModified__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./handleSingleMeasurementModified */ "./measurements/measurementHandlers/handleSingleMeasurementModified.js");
/* harmony import */ var _handleChildMeasurementModified__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./handleChildMeasurementModified */ "./measurements/measurementHandlers/handleChildMeasurementModified.js");
/* harmony import */ var _handleSingleMeasurementRemoved__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./handleSingleMeasurementRemoved */ "./measurements/measurementHandlers/handleSingleMeasurementRemoved.js");
/* harmony import */ var _handleChildMeasurementRemoved__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./handleChildMeasurementRemoved */ "./measurements/measurementHandlers/handleChildMeasurementRemoved.js");








var getEventData = function getEventData(event) {
  var eventData = event.detail;

  if (eventData.toolName) {
    eventData.toolType = eventData.toolName;
  }

  return eventData;
};

var MeasurementHandlers = {
  handleSingleMeasurementAdded: _handleSingleMeasurementAdded__WEBPACK_IMPORTED_MODULE_2__["default"],
  handleChildMeasurementAdded: _handleChildMeasurementAdded__WEBPACK_IMPORTED_MODULE_3__["default"],
  handleSingleMeasurementModified: _handleSingleMeasurementModified__WEBPACK_IMPORTED_MODULE_4__["default"],
  handleChildMeasurementModified: _handleChildMeasurementModified__WEBPACK_IMPORTED_MODULE_5__["default"],
  handleSingleMeasurementRemoved: _handleSingleMeasurementRemoved__WEBPACK_IMPORTED_MODULE_6__["default"],
  handleChildMeasurementRemoved: _handleChildMeasurementRemoved__WEBPACK_IMPORTED_MODULE_7__["default"],
  onAdded: function onAdded(event) {
    var eventData = getEventData(event);
    var toolType = eventData.toolType;

    var _MeasurementApi$getTo = _classes__WEBPACK_IMPORTED_MODULE_0__["default"].getToolConfiguration(toolType),
        toolGroupId = _MeasurementApi$getTo.toolGroupId,
        toolGroup = _MeasurementApi$getTo.toolGroup,
        tool = _MeasurementApi$getTo.tool; // TungLT add current selected timepoint id


    var currentTimepoint = _classes__WEBPACK_IMPORTED_MODULE_1__["default"].getInstance().current();
    if (currentTimepoint) eventData.measurementData.timepointId = currentTimepoint.timepointId;
    var params = {
      eventData: eventData,
      tool: tool,
      toolGroupId: toolGroupId,
      toolGroup: toolGroup
    };
    if (!tool) return;

    if (tool.parentTool) {
      Object(_handleChildMeasurementAdded__WEBPACK_IMPORTED_MODULE_3__["default"])(params);
    } else {
      Object(_handleSingleMeasurementAdded__WEBPACK_IMPORTED_MODULE_2__["default"])(params);
    }
  },
  onModified: function onModified(event) {
    var eventData = getEventData(event);
    var toolType = eventData.toolType;

    var _MeasurementApi$getTo2 = _classes__WEBPACK_IMPORTED_MODULE_0__["default"].getToolConfiguration(toolType),
        toolGroupId = _MeasurementApi$getTo2.toolGroupId,
        toolGroup = _MeasurementApi$getTo2.toolGroup,
        tool = _MeasurementApi$getTo2.tool;

    var params = {
      eventData: eventData,
      tool: tool,
      toolGroupId: toolGroupId,
      toolGroup: toolGroup
    };
    if (!tool) return;

    if (tool.parentTool) {
      Object(_handleChildMeasurementModified__WEBPACK_IMPORTED_MODULE_5__["default"])(params);
    } else {
      Object(_handleSingleMeasurementModified__WEBPACK_IMPORTED_MODULE_4__["default"])(params);
    }
  },
  onRemoved: function onRemoved(event) {
    var eventData = getEventData(event);
    var toolType = eventData.toolType;

    var _MeasurementApi$getTo3 = _classes__WEBPACK_IMPORTED_MODULE_0__["default"].getToolConfiguration(toolType),
        toolGroupId = _MeasurementApi$getTo3.toolGroupId,
        toolGroup = _MeasurementApi$getTo3.toolGroup,
        tool = _MeasurementApi$getTo3.tool;

    var params = {
      eventData: eventData,
      tool: tool,
      toolGroupId: toolGroupId,
      toolGroup: toolGroup
    };
    if (!tool) return;

    if (tool.parentTool) {
      Object(_handleChildMeasurementRemoved__WEBPACK_IMPORTED_MODULE_7__["default"])(params);
    } else {
      Object(_handleSingleMeasurementRemoved__WEBPACK_IMPORTED_MODULE_6__["default"])(params);
    }
  }
};
/* harmony default export */ __webpack_exports__["default"] = (MeasurementHandlers);

/***/ }),

/***/ "./measurements/toolGroups/allTools.js":
/*!*********************************************!*\
  !*** ./measurements/toolGroups/allTools.js ***!
  \*********************************************/
/*! exports provided: allTools */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "allTools", function() { return allTools; });
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tools */ "./measurements/tools/index.js");

var childTools = [];
Object.keys(_tools__WEBPACK_IMPORTED_MODULE_0__).forEach(function (key) {
  return childTools.push(_tools__WEBPACK_IMPORTED_MODULE_0__[key]);
});
var allTools = {
  id: 'allTools',
  name: 'Measurements',
  childTools: childTools,
  options: {
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/toolGroups/nonTargets.js":
/*!***********************************************!*\
  !*** ./measurements/toolGroups/nonTargets.js ***!
  \***********************************************/
/*! exports provided: nonTargets */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nonTargets", function() { return nonTargets; });
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tools */ "./measurements/tools/nonTarget.js");

var nonTargets = {
  id: 'nonTargets',
  name: 'Non-Targets',
  childTools: [_tools__WEBPACK_IMPORTED_MODULE_0__["nonTarget"]],
  options: {
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/toolGroups/targets.js":
/*!********************************************!*\
  !*** ./measurements/toolGroups/targets.js ***!
  \********************************************/
/*! exports provided: targets */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "targets", function() { return targets; });
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tools */ "./measurements/tools/bidirectional.js");
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../tools */ "./measurements/tools/targetCR.js");
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tools */ "./measurements/tools/targetUN.js");
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tools */ "./measurements/tools/targetNE.js");

var targets = {
  id: 'targets',
  name: 'Targets',
  childTools: [_tools__WEBPACK_IMPORTED_MODULE_0__["bidirectional"], _tools__WEBPACK_IMPORTED_MODULE_1__["targetCR"], _tools__WEBPACK_IMPORTED_MODULE_2__["targetUN"], _tools__WEBPACK_IMPORTED_MODULE_3__["targetNE"]],
  options: {
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/toolGroups/temp.js":
/*!*****************************************!*\
  !*** ./measurements/toolGroups/temp.js ***!
  \*****************************************/
/*! exports provided: temp */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "temp", function() { return temp; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/cloneDeep */ "../node_modules/lodash/cloneDeep.js");
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tools */ "./measurements/tools/length.js");
/* harmony import */ var _tools__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tools */ "./measurements/tools/ellipticalRoi.js");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



var childTools = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default()([_tools__WEBPACK_IMPORTED_MODULE_2__["length"], _tools__WEBPACK_IMPORTED_MODULE_3__["ellipticalRoi"]]); // Exclude temp tools from case progress

childTools.forEach(function (childTool) {
  childTool.options = _objectSpread({}, childTool.options, {
    caseProgress: {
      include: false,
      evaluate: false
    }
  });
});
var temp = {
  id: 'temp',
  name: 'Temporary',
  childTools: childTools,
  options: {
    caseProgress: {
      include: false,
      evaluate: false
    }
  }
};

/***/ }),

/***/ "./measurements/tools/angle.js":
/*!*************************************!*\
  !*** ./measurements/tools/angle.js ***!
  \*************************************/
/*! exports provided: angle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return angle; });
var displayFunction = function displayFunction(data) {
  var text = '';

  if (data.rAngle && !isNaN(data.rAngle)) {
    text = data.rAngle.toFixed(2) + String.fromCharCode(0x00B0);
  }

  return text;
};

var angle = {
  id: 'Angle',
  name: 'Angle',
  toolGroup: 'allTools',
  cornerstoneToolType: 'Angle',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/arrowAnnotate.js":
/*!*********************************************!*\
  !*** ./measurements/tools/arrowAnnotate.js ***!
  \*********************************************/
/*! exports provided: arrowAnnotate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrowAnnotate", function() { return arrowAnnotate; });
var displayFunction = function displayFunction(data) {
  return data.text || '';
};

var arrowAnnotate = {
  id: 'ArrowAnnotate',
  name: 'ArrowAnnotate',
  toolGroup: 'allTools',
  cornerstoneToolType: 'ArrowAnnotate',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/bidirectional.js":
/*!*********************************************!*\
  !*** ./measurements/tools/bidirectional.js ***!
  \*********************************************/
/*! exports provided: bidirectional */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bidirectional", function() { return bidirectional; });
var displayFunction = function displayFunction(data) {
  if (data.shortestDiameter) {
    // TODO: Make this check criteria again to see if we should display shortest x longest
    return "".concat(data.longestDiameter, " x ").concat(data.shortestDiameter);
  }

  return data.longestDiameter;
};

var bidirectional = {
  id: 'Bidirectional',
  name: 'Target',
  toolGroup: 'allTools',
  cornerstoneToolType: 'Bidirectional',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/circleRoi.js":
/*!*****************************************!*\
  !*** ./measurements/tools/circleRoi.js ***!
  \*****************************************/
/*! exports provided: circleRoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleRoi", function() { return circleRoi; });
var displayFunction = function displayFunction(data) {
  var meanValue = '';
  var cachedStats = data.cachedStats;

  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {
    meanValue = "".concat(cachedStats.mean.toFixed(2), " HU");
  }

  return meanValue;
};

var circleRoi = {
  id: 'CircleRoi',
  name: 'Circle',
  toolGroup: 'allTools',
  cornerstoneToolType: 'CircleRoi',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/cobbAngle.js":
/*!*****************************************!*\
  !*** ./measurements/tools/cobbAngle.js ***!
  \*****************************************/
/*! exports provided: cobbAngle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cobbAngle", function() { return cobbAngle; });
var displayFunction = function displayFunction(data) {
  var text = '';

  if (data.rAngle && !isNaN(data.rAngle)) {
    text = data.rAngle.toFixed(2) + String.fromCharCode(0x00B0);
  }

  return text;
};

var cobbAngle = {
  id: 'CobbAngle',
  name: 'CobbAngle',
  toolGroup: 'allTools',
  cornerstoneToolType: 'CobbAngle',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/ellipticalRoi.js":
/*!*********************************************!*\
  !*** ./measurements/tools/ellipticalRoi.js ***!
  \*********************************************/
/*! exports provided: ellipticalRoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ellipticalRoi", function() { return ellipticalRoi; });
var displayFunction = function displayFunction(data) {
  var meanValue = '';
  var cachedStats = data.cachedStats;

  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {
    meanValue = "".concat(cachedStats.mean.toFixed(2), " HU");
  }

  return meanValue;
};

var ellipticalRoi = {
  id: 'EllipticalRoi',
  name: 'Ellipse',
  toolGroup: 'allTools',
  cornerstoneToolType: 'EllipticalRoi',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/freehandMouse.js":
/*!*********************************************!*\
  !*** ./measurements/tools/freehandMouse.js ***!
  \*********************************************/
/*! exports provided: freehandMouse */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "freehandMouse", function() { return freehandMouse; });
var displayFunction = function displayFunction(data) {
  var meanValue = '';

  if (data.meanStdDev && data.meanStdDev.mean && !isNaN(data.meanStdDev.mean)) {
    meanValue = "".concat(data.meanStdDev.mean.toFixed(2), " HU");
  }

  return meanValue;
};

var freehandMouse = {
  id: 'FreehandRoi',
  name: 'Freehand',
  toolGroup: 'allTools',
  cornerstoneToolType: 'FreehandRoi',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/index.js":
/*!*************************************!*\
  !*** ./measurements/tools/index.js ***!
  \*************************************/
/*! exports provided: arrowAnnotate, bidirectional, ellipticalRoi, circleRoi, freehandMouse, length, nonTarget, rectangleRoi, angle, cobbAngle, probe, targetCR, targetNE, targetUN */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _arrowAnnotate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arrowAnnotate */ "./measurements/tools/arrowAnnotate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arrowAnnotate", function() { return _arrowAnnotate__WEBPACK_IMPORTED_MODULE_0__["arrowAnnotate"]; });

/* harmony import */ var _bidirectional__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bidirectional */ "./measurements/tools/bidirectional.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bidirectional", function() { return _bidirectional__WEBPACK_IMPORTED_MODULE_1__["bidirectional"]; });

/* harmony import */ var _ellipticalRoi__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ellipticalRoi */ "./measurements/tools/ellipticalRoi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ellipticalRoi", function() { return _ellipticalRoi__WEBPACK_IMPORTED_MODULE_2__["ellipticalRoi"]; });

/* harmony import */ var _circleRoi__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circleRoi */ "./measurements/tools/circleRoi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "circleRoi", function() { return _circleRoi__WEBPACK_IMPORTED_MODULE_3__["circleRoi"]; });

/* harmony import */ var _freehandMouse__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./freehandMouse */ "./measurements/tools/freehandMouse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "freehandMouse", function() { return _freehandMouse__WEBPACK_IMPORTED_MODULE_4__["freehandMouse"]; });

/* harmony import */ var _length__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./length */ "./measurements/tools/length.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "length", function() { return _length__WEBPACK_IMPORTED_MODULE_5__["length"]; });

/* harmony import */ var _nonTarget__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./nonTarget */ "./measurements/tools/nonTarget.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nonTarget", function() { return _nonTarget__WEBPACK_IMPORTED_MODULE_6__["nonTarget"]; });

/* harmony import */ var _rectangleRoi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./rectangleRoi */ "./measurements/tools/rectangleRoi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rectangleRoi", function() { return _rectangleRoi__WEBPACK_IMPORTED_MODULE_7__["rectangleRoi"]; });

/* harmony import */ var _angle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./angle */ "./measurements/tools/angle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "angle", function() { return _angle__WEBPACK_IMPORTED_MODULE_8__["angle"]; });

/* harmony import */ var _targetCR__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./targetCR */ "./measurements/tools/targetCR.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "targetCR", function() { return _targetCR__WEBPACK_IMPORTED_MODULE_9__["targetCR"]; });

/* harmony import */ var _targetNE__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./targetNE */ "./measurements/tools/targetNE.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "targetNE", function() { return _targetNE__WEBPACK_IMPORTED_MODULE_10__["targetNE"]; });

/* harmony import */ var _targetUN__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./targetUN */ "./measurements/tools/targetUN.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "targetUN", function() { return _targetUN__WEBPACK_IMPORTED_MODULE_11__["targetUN"]; });

/* harmony import */ var _cobbAngle__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./cobbAngle */ "./measurements/tools/cobbAngle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cobbAngle", function() { return _cobbAngle__WEBPACK_IMPORTED_MODULE_12__["cobbAngle"]; });

/* harmony import */ var _probe__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./probe */ "./measurements/tools/probe.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "probe", function() { return _probe__WEBPACK_IMPORTED_MODULE_13__["probe"]; });

















/***/ }),

/***/ "./measurements/tools/length.js":
/*!**************************************!*\
  !*** ./measurements/tools/length.js ***!
  \**************************************/
/*! exports provided: length */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "length", function() { return length; });
var displayFunction = function displayFunction(data) {
  var lengthValue = '';

  if (data.length && !isNaN(data.length)) {
    lengthValue = "".concat(data.length.toFixed(2), " ").concat(data.unit ? data.unit : 'mm');
  }

  return lengthValue;
};

var length = {
  id: 'Length',
  name: 'Length',
  toolGroup: 'allTools',
  cornerstoneToolType: 'Length',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/nonTarget.js":
/*!*****************************************!*\
  !*** ./measurements/tools/nonTarget.js ***!
  \*****************************************/
/*! exports provided: nonTarget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nonTarget", function() { return nonTarget; });
var nonTarget = {
  id: 'NonTarget',
  name: 'Non-Target',
  toolGroup: 'allTools',
  cornerstoneToolType: 'NonTarget',
  options: {
    measurementTable: {
      displayFunction: function displayFunction(data) {
        return data.response;
      }
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/probe.js":
/*!*************************************!*\
  !*** ./measurements/tools/probe.js ***!
  \*************************************/
/*! exports provided: probe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "probe", function() { return probe; });
var displayFunction = function displayFunction(data) {
  return "Probe ".concat(parseInt(data.handles.end.x), ", ").concat(parseInt(data.handles.end.y));
};

var probe = {
  id: 'Probe',
  name: 'Probe',
  toolGroup: 'allTools',
  cornerstoneToolType: 'Probe',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/rectangleRoi.js":
/*!********************************************!*\
  !*** ./measurements/tools/rectangleRoi.js ***!
  \********************************************/
/*! exports provided: rectangleRoi */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectangleRoi", function() { return rectangleRoi; });
var displayFunction = function displayFunction(data) {
  var meanValue = '';
  var cachedStats = data.cachedStats;

  if (cachedStats && cachedStats.mean && !isNaN(cachedStats.mean)) {
    meanValue = "".concat(cachedStats.mean.toFixed(2), " HU");
  }

  return meanValue;
};

var rectangleRoi = {
  id: 'RectangleRoi',
  name: 'Rectangle',
  toolGroup: 'allTools',
  cornerstoneToolType: 'RectangleRoi',
  options: {
    measurementTable: {
      displayFunction: displayFunction
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/targetCR.js":
/*!****************************************!*\
  !*** ./measurements/tools/targetCR.js ***!
  \****************************************/
/*! exports provided: targetCR */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "targetCR", function() { return targetCR; });
var targetCR = {
  id: 'TargetCR',
  name: 'CR Target',
  toolGroup: 'allTools',
  cornerstoneToolType: 'TargetCR',
  options: {
    measurementTable: {
      displayFunction: function displayFunction(data) {
        return data.response;
      }
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/targetNE.js":
/*!****************************************!*\
  !*** ./measurements/tools/targetNE.js ***!
  \****************************************/
/*! exports provided: targetNE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "targetNE", function() { return targetNE; });
var targetNE = {
  id: 'TargetNE',
  name: 'NE Target',
  toolGroup: 'allTools',
  cornerstoneToolType: 'TargetNE',
  options: {
    measurementTable: {
      displayFunction: function displayFunction(data) {
        return data.response;
      }
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./measurements/tools/targetUN.js":
/*!****************************************!*\
  !*** ./measurements/tools/targetUN.js ***!
  \****************************************/
/*! exports provided: targetUN */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "targetUN", function() { return targetUN; });
var targetUN = {
  id: 'TargetUN',
  name: 'UN Target',
  toolGroup: 'allTools',
  cornerstoneToolType: 'TargetUN',
  options: {
    measurementTable: {
      displayFunction: function displayFunction(data) {
        return data.response;
      }
    },
    caseProgress: {
      include: true,
      evaluate: true
    }
  }
};

/***/ }),

/***/ "./object.js":
/*!*******************!*\
  !*** ./object.js ***!
  \*******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);


// Transforms a shallow object with keys separated by "." into a nested object
function getNestedObject(shallowObject) {
  var nestedObject = {};

  for (var key in shallowObject) {
    if (!shallowObject.hasOwnProperty(key)) continue;
    var value = shallowObject[key];
    var propertyArray = key.split('.');
    var currentObject = nestedObject;

    while (propertyArray.length) {
      var currentProperty = propertyArray.shift();

      if (!propertyArray.length) {
        currentObject[currentProperty] = value;
      } else {
        if (!currentObject[currentProperty]) {
          currentObject[currentProperty] = {};
        }

        currentObject = currentObject[currentProperty];
      }
    }
  }

  return nestedObject;
} // Transforms a nested object into a shallowObject merging its keys with "." character


function getShallowObject(nestedObject) {
  var shallowObject = {};

  var putValues = function putValues(baseKey, nestedObject, resultObject) {
    for (var key in nestedObject) {
      if (!nestedObject.hasOwnProperty(key)) continue;
      var currentKey = baseKey ? "".concat(baseKey, ".").concat(key) : key;
      var currentValue = nestedObject[key];

      if (_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(currentValue) === 'object') {
        if (currentValue instanceof Array) {
          currentKey += '[]';
        }

        putValues(currentKey, currentValue, resultObject);
      } else {
        resultObject[currentKey] = currentValue;
      }
    }
  };

  putValues('', nestedObject, shallowObject);
  return shallowObject;
}

var object = {
  getNestedObject: getNestedObject,
  getShallowObject: getShallowObject
};
/* harmony default export */ __webpack_exports__["default"] = (object);

/***/ }),

/***/ "./redux/actions.js":
/*!**************************!*\
  !*** ./redux/actions.js ***!
  \**************************/
/*! exports provided: setViewportSpecificData, setViewportActive, setLayout, setViewportLayoutAndData, clearViewportSpecificData, setActiveViewportSpecificData, setStudyLoadingProgress, clearStudyLoadingProgress, setUserPreferences, setExtensionData, setTimepoints, setMeasurements, setStudyData, setServers, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setViewportSpecificData", function() { return setViewportSpecificData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setViewportActive", function() { return setViewportActive; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLayout", function() { return setLayout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setViewportLayoutAndData", function() { return setViewportLayoutAndData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearViewportSpecificData", function() { return clearViewportSpecificData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setActiveViewportSpecificData", function() { return setActiveViewportSpecificData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setStudyLoadingProgress", function() { return setStudyLoadingProgress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearStudyLoadingProgress", function() { return clearStudyLoadingProgress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUserPreferences", function() { return setUserPreferences; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setExtensionData", function() { return setExtensionData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setTimepoints", function() { return setTimepoints; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMeasurements", function() { return setMeasurements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setStudyData", function() { return setStudyData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setServers", function() { return setServers; });
/* harmony import */ var _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants/ActionTypes */ "./redux/constants/ActionTypes.js");
/** Action Creators:
 *  https://redux.js.org/basics/actions#action-creators
 */

/**
 * The definition of a viewport layout.
 *
 * @typedef {Object} ViewportLayout
 * @property {number} numRows -
 * @property {number} numColumns -
 * @property {array} viewports -
 */

/**
 * VIEWPORT
 */

var setViewportSpecificData = function setViewportSpecificData(viewportIndex, viewportSpecificData) {
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["SET_VIEWPORT"],
    viewportIndex: viewportIndex,
    viewportSpecificData: viewportSpecificData
  };
};
var setViewportActive = function setViewportActive(viewportIndex) {
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["SET_VIEWPORT_ACTIVE"],
    viewportIndex: viewportIndex
  };
};
/**
 * @param {ViewportLayout} layout
 */

var setLayout = function setLayout(_ref) {
  var numRows = _ref.numRows,
      numColumns = _ref.numColumns,
      viewports = _ref.viewports;
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["SET_VIEWPORT_LAYOUT"],
    numRows: numRows,
    numColumns: numColumns,
    viewports: viewports
  };
};
/**
 * @param {number} layout.numRows
 * @param {number} layout.numColumns
 * @param {array} viewports
 */

var setViewportLayoutAndData = function setViewportLayoutAndData(_ref2, viewportSpecificData) {
  var numRows = _ref2.numRows,
      numColumns = _ref2.numColumns,
      viewports = _ref2.viewports;
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["SET_VIEWPORT_LAYOUT_AND_DATA"],
    numRows: numRows,
    numColumns: numColumns,
    viewports: viewports,
    viewportSpecificData: viewportSpecificData
  };
};
var clearViewportSpecificData = function clearViewportSpecificData(viewportIndex) {
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["CLEAR_VIEWPORT"],
    viewportIndex: viewportIndex
  };
};
var setActiveViewportSpecificData = function setActiveViewportSpecificData(viewportSpecificData) {
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["SET_ACTIVE_SPECIFIC_DATA"],
    viewportSpecificData: viewportSpecificData
  };
};
/**
 * NOT-VIEWPORT
 */

var setStudyLoadingProgress = function setStudyLoadingProgress(progressId, progressData) {
  return {
    type: 'SET_STUDY_LOADING_PROGRESS',
    progressId: progressId,
    progressData: progressData
  };
};
var clearStudyLoadingProgress = function clearStudyLoadingProgress(progressId) {
  return {
    type: 'CLEAR_STUDY_LOADING_PROGRESS',
    progressId: progressId
  };
};
var setUserPreferences = function setUserPreferences(state) {
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["SET_USER_PREFERENCES"],
    state: state
  };
};
var setExtensionData = function setExtensionData(extension, data) {
  return {
    type: 'SET_EXTENSION_DATA',
    extension: extension,
    data: data
  };
};
var setTimepoints = function setTimepoints(state) {
  return {
    type: 'SET_TIMEPOINTS',
    state: state
  };
};
var setMeasurements = function setMeasurements(state) {
  return {
    type: 'SET_MEASUREMENTS',
    state: state
  };
};
var setStudyData = function setStudyData(StudyInstanceUID, data) {
  return {
    type: 'SET_STUDY_DATA',
    StudyInstanceUID: StudyInstanceUID,
    data: data
  };
};
var setServers = function setServers(servers) {
  return {
    type: _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_0__["SET_SERVERS"],
    servers: servers
  };
};
var actions = {
  /**
  * VIEWPORT
  */
  setViewportActive: setViewportActive,
  setViewportSpecificData: setViewportSpecificData,
  setViewportLayoutAndData: setViewportLayoutAndData,
  setLayout: setLayout,
  clearViewportSpecificData: clearViewportSpecificData,
  setActiveViewportSpecificData: setActiveViewportSpecificData,

  /**
  * NOT-VIEWPORT
  */
  setStudyLoadingProgress: setStudyLoadingProgress,
  clearStudyLoadingProgress: clearStudyLoadingProgress,
  setUserPreferences: setUserPreferences,
  setExtensionData: setExtensionData,
  setTimepoints: setTimepoints,
  setMeasurements: setMeasurements,
  setStudyData: setStudyData,
  setServers: setServers
};
/* harmony default export */ __webpack_exports__["default"] = (actions);

/***/ }),

/***/ "./redux/constants/ActionTypes.js":
/*!****************************************!*\
  !*** ./redux/constants/ActionTypes.js ***!
  \****************************************/
/*! exports provided: SET_VIEWPORT, SET_VIEWPORT_ACTIVE, SET_VIEWPORT_LAYOUT, SET_VIEWPORT_LAYOUT_AND_DATA, CLEAR_VIEWPORT, SET_SPECIFIC_DATA, SET_ACTIVE_SPECIFIC_DATA, ADD_SERVER, SET_SERVERS, SET_EXTENSION_DATA, SET_USER_PREFERENCES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_VIEWPORT", function() { return SET_VIEWPORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_VIEWPORT_ACTIVE", function() { return SET_VIEWPORT_ACTIVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_VIEWPORT_LAYOUT", function() { return SET_VIEWPORT_LAYOUT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_VIEWPORT_LAYOUT_AND_DATA", function() { return SET_VIEWPORT_LAYOUT_AND_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CLEAR_VIEWPORT", function() { return CLEAR_VIEWPORT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_SPECIFIC_DATA", function() { return SET_SPECIFIC_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_ACTIVE_SPECIFIC_DATA", function() { return SET_ACTIVE_SPECIFIC_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ADD_SERVER", function() { return ADD_SERVER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_SERVERS", function() { return SET_SERVERS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_EXTENSION_DATA", function() { return SET_EXTENSION_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SET_USER_PREFERENCES", function() { return SET_USER_PREFERENCES; });
/**
 * VIEWPORT
 */
var SET_VIEWPORT = 'VIEWPORT::SET';
var SET_VIEWPORT_ACTIVE = 'VIEWPORT::SET_ACTIVE';
var SET_VIEWPORT_LAYOUT = 'VIEWPORT::SET_LAYOUT';
var SET_VIEWPORT_LAYOUT_AND_DATA = 'VIEWPORT::SET_VIEWPORT_LAYOUT_AND_DATA';
var CLEAR_VIEWPORT = 'VIEWPORT::CLEAR';
var SET_SPECIFIC_DATA = 'VIEWPORT::SET_SPECIFIC_DATA';
var SET_ACTIVE_SPECIFIC_DATA = 'VIEWPORT::SET_ACTIVE_SPECIFIC_DATA';
/**
 * SERVERS
 */

var ADD_SERVER = 'ADD_SERVER';
var SET_SERVERS = 'SET_SERVERS';
/**
 * EXTENSIONS
 */

var SET_EXTENSION_DATA = 'SET_EXTENSION_DATA';
/**
 * PREFERENCES
 * */

var SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';

/***/ }),

/***/ "./redux/index.js":
/*!************************!*\
  !*** ./redux/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./actions */ "./redux/actions.js");
/* harmony import */ var _reducers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reducers */ "./redux/reducers/index.js");
/* harmony import */ var _localStorage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./localStorage */ "./redux/localStorage.js");
/* harmony import */ var _sessionStorage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sessionStorage */ "./redux/sessionStorage.js");




var redux = {
  reducers: _reducers__WEBPACK_IMPORTED_MODULE_1__["default"],
  actions: _actions__WEBPACK_IMPORTED_MODULE_0__["default"],
  localStorage: _localStorage__WEBPACK_IMPORTED_MODULE_2__["default"],
  sessionStorage: _sessionStorage__WEBPACK_IMPORTED_MODULE_3__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (redux);

/***/ }),

/***/ "./redux/localStorage.js":
/*!*******************************!*\
  !*** ./redux/localStorage.js ***!
  \*******************************/
/*! exports provided: loadState, saveState, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadState", function() { return loadState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveState", function() { return saveState; });
var LocalStorageApi = window.localStorage;
var localStorageKey = 'state';
var loadState = function loadState() {
  try {
    var serializedState = LocalStorageApi.getItem(localStorageKey);

    if (!serializedState) {
      return undefined;
    }

    return JSON.parse(serializedState);
  } catch (e) {
    return undefined;
  }
};
var saveState = function saveState(state) {
  try {
    var serializedState = JSON.stringify(state);
    LocalStorageApi.setItem(localStorageKey, serializedState);
  } catch (e) {}
};
var localStorage = {
  saveState: saveState,
  loadState: loadState
};
/* harmony default export */ __webpack_exports__["default"] = (localStorage);

/***/ }),

/***/ "./redux/reducers/extensions.js":
/*!**************************************!*\
  !*** ./redux/reducers/extensions.js ***!
  \**************************************/
/*! exports provided: defaultState, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultState", function() { return defaultState; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultState = {};

var extensions = function extensions() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case 'SET_EXTENSION_DATA':
      var extensionName = action.extension;
      var currentData = state[extensionName] || {};
      var incomingData = action.data;

      var extension = _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, extensionName, _objectSpread({}, currentData, {}, incomingData));

      return _objectSpread({}, state, {}, extension);

    default:
      return state;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (extensions);

/***/ }),

/***/ "./redux/reducers/index.js":
/*!*********************************!*\
  !*** ./redux/reducers/index.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _extensions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extensions */ "./redux/reducers/extensions.js");
/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loading */ "./redux/reducers/loading.js");
/* harmony import */ var _preferences__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./preferences */ "./redux/reducers/preferences.js");
/* harmony import */ var _servers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./servers */ "./redux/reducers/servers.js");
/* harmony import */ var _studies__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./studies */ "./redux/reducers/studies.js");
/* harmony import */ var _timepointManager__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./timepointManager */ "./redux/reducers/timepointManager.js");
/* harmony import */ var _viewports__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./viewports */ "./redux/reducers/viewports.js");







var reducers = {
  extensions: _extensions__WEBPACK_IMPORTED_MODULE_0__["default"],
  loading: _loading__WEBPACK_IMPORTED_MODULE_1__["default"],
  preferences: _preferences__WEBPACK_IMPORTED_MODULE_2__["default"],
  servers: _servers__WEBPACK_IMPORTED_MODULE_3__["default"],
  studies: _studies__WEBPACK_IMPORTED_MODULE_4__["default"],
  timepointManager: _timepointManager__WEBPACK_IMPORTED_MODULE_5__["default"],
  viewports: _viewports__WEBPACK_IMPORTED_MODULE_6__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (reducers);

/***/ }),

/***/ "./redux/reducers/loading.js":
/*!***********************************!*\
  !*** ./redux/reducers/loading.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/cloneDeep */ "../node_modules/lodash/cloneDeep.js");
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


var defaultState = {
  progress: {},
  lastUpdated: null
};

var loading = function loading() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
  var action = arguments.length > 1 ? arguments[1] : undefined;
  var progress;
  var lastUpdated;

  switch (action.type) {
    case 'SET_STUDY_LOADING_PROGRESS':
      progress = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default()(state).progress;
      progress[action.progressId] = action.progressData; // This is a workaround so we can easily identify changes
      // to the progress object without doing deep comparison.

      lastUpdated = new Date().getTime();
      return _objectSpread({}, state, {
        progress: progress,
        lastUpdated: lastUpdated
      });

    case 'CLEAR_STUDY_LOADING_PROGRESS':
      progress = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default()(state).progress;
      delete progress[action.progressId];
      lastUpdated = new Date().getTime();
      return _objectSpread({}, state, {
        progress: progress,
        lastUpdated: lastUpdated
      });

    default:
      return state;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (loading);

/***/ }),

/***/ "./redux/reducers/preferences.js":
/*!***************************************!*\
  !*** ./redux/reducers/preferences.js ***!
  \***************************************/
/*! exports provided: defaultState, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultState", function() { return defaultState; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultState = {
  windowLevelData: {
    1: {
      description: 'Soft tissue',
      window: '550',
      level: '40'
    },
    2: {
      description: 'Lung',
      window: '150',
      level: '-600'
    },
    3: {
      description: 'Liver',
      window: '150',
      level: '90'
    },
    4: {
      description: 'Bone',
      window: '2500',
      level: '480'
    },
    5: {
      description: 'Brain',
      window: '80',
      level: '40'
    },
    6: {
      description: 'Trest',
      window: '1',
      level: '1'
    },
    7: {
      description: '',
      window: '',
      level: ''
    },
    8: {
      description: '',
      window: '',
      level: ''
    },
    9: {
      description: '',
      window: '',
      level: ''
    },
    10: {
      description: '',
      window: '',
      level: ''
    }
  },
  generalPreferences: {// language: 'en-US'
  }
};

var preferences = function preferences() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case 'SET_USER_PREFERENCES':
      {
        return _objectSpread({}, state, {}, action.state);
      }

    default:
      return state;
  }
};


/* harmony default export */ __webpack_exports__["default"] = (preferences);

/***/ }),

/***/ "./redux/reducers/servers.js":
/*!***********************************!*\
  !*** ./redux/reducers/servers.js ***!
  \***********************************/
/*! exports provided: defaultState, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultState", function() { return defaultState; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/uniqBy */ "../node_modules/lodash/uniqBy.js");
/* harmony import */ var lodash_uniqBy__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqBy__WEBPACK_IMPORTED_MODULE_2__);



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


var defaultState = {
  servers: []
};

var servers = function servers() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case 'ADD_SERVER':
      var _servers = lodash_uniqBy__WEBPACK_IMPORTED_MODULE_2___default()([].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(state.servers), [action.server]), 'id');

      _servers.forEach(function (s) {
        return s.active = true;
      });

      return _objectSpread({}, state, {
        servers: _servers
      });

    case 'ACTIVATE_SERVER':
      {
        var newServer = _objectSpread({}, action.server, {
          active: true
        });

        var newServers = state.servers;
        newServers.forEach(function (s) {
          return s.active = false;
        });
        return _objectSpread({}, state, {
          servers: lodash_uniqBy__WEBPACK_IMPORTED_MODULE_2___default()([].concat(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default()(newServers), [newServer]), 'wadoRoot')
        });
      }

    case 'SET_SERVERS':
      return _objectSpread({}, state, {
        servers: action.servers
      });

    default:
      return state;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (servers);

/***/ }),

/***/ "./redux/reducers/studies.js":
/*!***********************************!*\
  !*** ./redux/reducers/studies.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/cloneDeep */ "../node_modules/lodash/cloneDeep.js");
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1__);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


var defaultState = {
  studyData: {}
};

var servers = function servers() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case 'SET_STUDY_DATA':
      var updatedStudyData = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_1___default()(state).studyData;
      updatedStudyData[action.StudyInstanceUID] = action.data;
      return _objectSpread({}, state, {
        studyData: updatedStudyData
      });

    default:
      return state;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (servers);

/***/ }),

/***/ "./redux/reducers/timepointManager.js":
/*!********************************************!*\
  !*** ./redux/reducers/timepointManager.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultState = {
  timepoints: [],
  measurements: []
};

var timepointManager = function timepointManager() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;
  var action = arguments.length > 1 ? arguments[1] : undefined;

  switch (action.type) {
    case 'SET_TIMEPOINTS':
      return _objectSpread({}, state, {
        timepoints: action.state
      });

    case 'SET_MEASUREMENTS':
      return _objectSpread({}, state, {
        measurements: action.state
      });

    default:
      return state;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (timepointManager);

/***/ }),

/***/ "./redux/reducers/viewports.js":
/*!*************************************!*\
  !*** ./redux/reducers/viewports.js ***!
  \*************************************/
/*! exports provided: DEFAULT_STATE, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_STATE", function() { return DEFAULT_STATE; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/cloneDeep */ "../node_modules/lodash/cloneDeep.js");
/* harmony import */ var lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/merge */ "../node_modules/lodash/merge.js");
/* harmony import */ var lodash_merge__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_merge__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants/ActionTypes */ "./redux/constants/ActionTypes.js");



function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }




var DEFAULT_STATE = {
  numRows: 1,
  numColumns: 1,
  activeViewportIndex: 0,
  layout: {
    viewports: [{}]
  },
  viewportSpecificData: {}
};
/**
 *  Take the new number of Rows and Columns, delete all not used viewport data and also set
 *  active viewport as default in case current one is not available anymore.
 *
 * @param {Number} numRows
 * @param {Number} numColumns
 * @param {Object} currentViewportSpecificData
 * @returns
 */

var findActiveViewportSpecificData = function findActiveViewportSpecificData(numRows, numColumns) {
  var currentViewportSpecificData = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var numberOfViewports = numRows * numColumns;
  var viewportSpecificData = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default()(currentViewportSpecificData);

  if (numberOfViewports < Object.keys(viewportSpecificData).length) {
    Object.keys(viewportSpecificData).forEach(function (key) {
      if (key > numberOfViewports - 1) {
        delete viewportSpecificData[key];
      }
    });
  }

  return viewportSpecificData;
};
/**
 *  Take new number of Rows and Columns and make sure the current active viewport index is still available, if not, return the default
 *
 * @param {Number} numRows
 * @param {Number} numColumns
 * @param {Number} currentActiveViewportIndex
 * @returns
 */


var getActiveViewportIndex = function getActiveViewportIndex(numRows, numColumns, currentActiveViewportIndex) {
  var numberOfViewports = numRows * numColumns;
  return currentActiveViewportIndex > numberOfViewports - 1 ? DEFAULT_STATE.activeViewportIndex : currentActiveViewportIndex;
};
/**
 * The definition of a viewport action.
 *
 * @typedef {Object} ViewportAction
 * @property {string} type -
 * @property {Object} data -
 * @property {Object} layout -
 * @property {number} viewportIndex -
 * @property {Object} viewportSpecificData -
 */

/**
 * @param {Object} [state=DEFAULT_STATE] The current viewport state.
 * @param {ViewportAction} action A viewport action.
 */


var viewports = function viewports() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_STATE;
  var action = arguments.length > 1 ? arguments[1] : undefined;
  var useActiveViewport = false;

  switch (action.type) {
    /**
     * Sets the active viewport index.
     *
     * @return {Object} New state.
     */
    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__["SET_VIEWPORT_ACTIVE"]:
      {
        var activeViewportIndex = getActiveViewportIndex(state.numRows, state.numColumns, action.viewportIndex);
        return _objectSpread({}, state, {
          activeViewportIndex: activeViewportIndex
        });
      }

    /**
    * Sets viewport layout.
    *
    * @return {Object} New state.
    */

    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__["SET_VIEWPORT_LAYOUT"]:
      {
        var numRows = action.numRows,
            numColumns = action.numColumns;
        var viewportSpecificData = findActiveViewportSpecificData(numRows, numColumns, state.viewportSpecificData);

        var _activeViewportIndex = getActiveViewportIndex(numRows, numColumns, state.activeViewportIndex);

        return _objectSpread({}, state, {
          numRows: action.numRows,
          numColumns: action.numColumns,
          layout: {
            viewports: _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(action.viewports)
          },
          viewportSpecificData: viewportSpecificData,
          activeViewportIndex: _activeViewportIndex
        });
      }

    /**
    * Sets viewport layout and data.
    *
    * @return {Object} New state.
    */

    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__["SET_VIEWPORT_LAYOUT_AND_DATA"]:
      {
        var _numRows = action.numRows,
            _numColumns = action.numColumns;

        var _viewportSpecificData = findActiveViewportSpecificData(_numRows, _numColumns, action.viewportSpecificData);

        var _activeViewportIndex2 = getActiveViewportIndex(_numRows, _numColumns, state.activeViewportIndex);

        return _objectSpread({}, state, {
          numRows: action.numRows,
          numColumns: action.numColumns,
          layout: {
            viewports: _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(action.viewports)
          },
          viewportSpecificData: _viewportSpecificData,
          activeViewportIndex: _activeViewportIndex2
        });
      }

    /**
    * Sets viewport specific data of active viewport.
    *
    * @return {Object} New state.
    */

    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__["SET_VIEWPORT"]:
      {
        var layout = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default()(state.layout);

        var _viewportSpecificData2 = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default()(state.viewportSpecificData);

        _viewportSpecificData2[action.viewportIndex] = lodash_merge__WEBPACK_IMPORTED_MODULE_3___default()({}, _viewportSpecificData2[action.viewportIndex], action.viewportSpecificData);

        if (action.viewportSpecificData && action.viewportSpecificData.plugin && !layout.viewports[action.viewportIndex].plugin) {
          layout.viewports[action.viewportIndex].plugin = action.viewportSpecificData.plugin;
        }

        return _objectSpread({}, state, {
          layout: layout,
          viewportSpecificData: _viewportSpecificData2
        });
      }

    /**
    * Sets viewport specific data of active/any viewport.
    *
    * @return {Object} New state.
    */

    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__["SET_ACTIVE_SPECIFIC_DATA"]:
      useActiveViewport = true;
    // Allow fall-through
    // eslint-disable-next-line

    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__["SET_SPECIFIC_DATA"]:
      {
        var _layout = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default()(state.layout);

        var viewportIndex = useActiveViewport ? state.activeViewportIndex : action.viewportIndex;

        var _viewportSpecificData3 = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default()(state.viewportSpecificData);

        _viewportSpecificData3[viewportIndex] = _objectSpread({}, action.viewportSpecificData);

        if (action.viewportSpecificData && action.viewportSpecificData.plugin) {
          _layout.viewports[viewportIndex].plugin = action.viewportSpecificData.plugin;
        }

        return _objectSpread({}, state, {
          layout: _layout,
          viewportSpecificData: _viewportSpecificData3
        });
      }

    /**
    * Clears viewport specific data of any viewport.
    *
    * @return {Object} New state.
    */

    case _constants_ActionTypes__WEBPACK_IMPORTED_MODULE_4__["CLEAR_VIEWPORT"]:
      {
        var _viewportSpecificData4 = lodash_cloneDeep__WEBPACK_IMPORTED_MODULE_2___default()(state.viewportSpecificData);

        if (action.viewportIndex) {
          _viewportSpecificData4[action.viewportIndex] = {};
          return _objectSpread({}, state, {
            viewportSpecificData: _viewportSpecificData4
          });
        }

        return DEFAULT_STATE;
      }

    /**
    * Returns the current application state.
    *
    * @return {Object} The current state.
    */

    default:
      {
        return state;
      }
  }
};

/* harmony default export */ __webpack_exports__["default"] = (viewports);

/***/ }),

/***/ "./redux/sessionStorage.js":
/*!*********************************!*\
  !*** ./redux/sessionStorage.js ***!
  \*********************************/
/*! exports provided: loadState, saveState, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadState", function() { return loadState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "saveState", function() { return saveState; });
var SessionStorageApi = window.sessionStorage;
var sessionStorageKey = 'state';
var loadState = function loadState() {
  try {
    var serializedState = SessionStorageApi.getItem(sessionStorageKey);

    if (!serializedState) {
      return undefined;
    }

    return JSON.parse(serializedState);
  } catch (e) {
    return undefined;
  }
};
var saveState = function saveState(state) {
  try {
    var serializedState = JSON.stringify(state);
    SessionStorageApi.setItem(sessionStorageKey, serializedState);
  } catch (e) {}
};
var sessionStorage = {
  saveState: saveState,
  loadState: loadState
};
/* harmony default export */ __webpack_exports__["default"] = (sessionStorage);

/***/ }),

/***/ "./services/MeasurementService/MeasurementService.js":
/*!***********************************************************!*\
  !*** ./services/MeasurementService/MeasurementService.js ***!
  \***********************************************************/
/*! exports provided: default, EVENTS, VALUE_TYPES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EVENTS", function() { return EVENTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VALUE_TYPES", function() { return VALUE_TYPES; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../log */ "./log.js");
/* harmony import */ var _utils_guid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../utils/guid */ "./utils/guid.js");




function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }



/**
 * Measurement source schema
 *
 * @typedef {Object} MeasurementSource
 * @property {number} id -
 * @property {string} name -
 * @property {string} version -
 */

/**
 * Measurement schema
 *
 * @typedef {Object} Measurement
 * @property {number} id -
 * @property {string} sopInstanceUid -
 * @property {string} FrameOfReferenceUID -
 * @property {string} referenceSeriesUID -
 * @property {string} label -
 * @property {string} description -
 * @property {string} type -
 * @property {string} unit -
 * @property {number} area -
 * @property {Array} points -
 * @property {MeasurementSource} source -
 */

/* Measurement schema keys for object validation. */

var MEASUREMENT_SCHEMA_KEYS = ['id', 'SOPInstanceUID', 'FrameOfReferenceUID', 'referenceSeriesUID', 'label', 'description', 'type', 'unit', 'area', // TODO: Add concept names instead (descriptor)
'points', 'source'];
var EVENTS = {
  MEASUREMENT_UPDATED: 'event::measurement_updated',
  MEASUREMENT_ADDED: 'event::measurement_added'
};
var VALUE_TYPES = {
  POLYLINE: 'value_type::polyline',
  POINT: 'value_type::point',
  ELLIPSE: 'value_type::ellipse',
  MULTIPOINT: 'value_type::multipoint',
  CIRCLE: 'value_type::circle'
};

var MeasurementService = /*#__PURE__*/function () {
  function MeasurementService() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, MeasurementService);

    this._arrayOfObjects = function (obj) {
      return Object.entries(obj).map(function (e) {
        return _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()({}, e[0], e[1]);
      });
    };

    this.sources = {};
    this.mappings = {};
    this.measurements = {};
    this.listeners = {};
    Object.defineProperty(this, 'EVENTS', {
      value: EVENTS,
      writable: false,
      enumerable: true,
      configurable: false
    });
    Object.defineProperty(this, 'VALUE_TYPES', {
      value: VALUE_TYPES,
      writable: false,
      enumerable: true,
      configurable: false
    });
  }
  /**
  * Get all measurements.
  *
  * @return {Measurement[]} Array of measurements
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(MeasurementService, [{
    key: "getMeasurements",
    value: function getMeasurements() {
      var _this = this;

      var measurements = this._arrayOfObjects(this.measurements);

      return measurements && measurements.map(function (m) {
        return _this.measurements[Object.keys(m)[0]];
      });
    }
    /**
    * Get specific measurement by its id.
    *
    * @param {string} id If of the measurement
    * @return {Measurement} Measurement instance
    */

  }, {
    key: "getMeasurement",
    value: function getMeasurement(id) {
      var measurement = null;
      var measurements = this.measurements[id];

      if (measurements && Object.keys(measurements).length > 0) {
        measurement = this.measurements[id];
      }

      return measurement;
    }
    /**
    * Create a new source.
    *
    * @param {string} name Name of the source
    * @param {string} version Source name
    * @return {MeasurementSource} Measurement source instance
    */

  }, {
    key: "createSource",
    value: function createSource(name, version) {
      var _this2 = this;

      if (!name) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Source name not provided. Exiting early.');
        return;
      }

      if (!version) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Source version not provided. Exiting early.');
        return;
      }

      var id = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_4__["default"])();
      var source = {
        id: id,
        name: name,
        version: version
      };

      source.addOrUpdate = function (definition, measurement) {
        return _this2.addOrUpdate(source, definition, measurement);
      };

      source.getAnnotation = function (definition, measurementId) {
        return _this2.getAnnotation(source, definition, measurementId);
      };

      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info("New '".concat(name, "@").concat(version, "' source added."));
      this.sources[id] = source;
      return source;
    }
    /**
    * Add a new measurement matching criteria along with mapping functions.
    *
    * @param {MeasurementSource} source Measurement source instance
    * @param {string} definition Definition of the measurement (Annotation Type)
    * @param {MatchingCriteria} matchingCriteria The matching criteria
    * @param {Function} toSourceSchema Mapping function to source schema
    * @param {Function} toMeasurementSchema Mapping function to measurement schema
    * @return void
    */

  }, {
    key: "addMapping",
    value: function addMapping(source, definition, matchingCriteria, toSourceSchema, toMeasurementSchema) {
      if (!this._isValidSource(source)) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Invalid source. Exiting early.');
        return;
      }

      if (!matchingCriteria) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Matching criteria not provided. Exiting early.');
        return;
      }

      if (!definition) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Definition not provided. Exiting early.');
        return;
      }

      if (!toSourceSchema) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Source mapping function not provided. Exiting early.');
        return;
      }

      if (!toMeasurementSchema) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Measurement mapping function not provided. Exiting early.');
        return;
      }

      var mapping = {
        matchingCriteria: matchingCriteria,
        definition: definition,
        toSourceSchema: toSourceSchema,
        toMeasurementSchema: toMeasurementSchema
      };

      if (Array.isArray(this.mappings[source.id])) {
        this.mappings[source.id].push(mapping);
      } else {
        this.mappings[source.id] = [mapping];
      }

      _log__WEBPACK_IMPORTED_MODULE_3__["default"].info("New measurement mapping added to source '".concat(this._getSourceInfo(source), "'."));
    }
    /**
    * Get annotation for specific source.
    *
    * @param {MeasurementSource} source Measurement source instance
    * @param {string} definition The source definition
    * @param {string} measurementId The measurement service measurement id
    * @return {Object} Source measurement schema
    */

  }, {
    key: "getAnnotation",
    value: function getAnnotation(source, definition, measurementId) {
      if (!this._isValidSource(source)) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Invalid source. Exiting early.');
        return;
      }

      if (!definition) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('No source definition provided. Exiting early.');
        return;
      }

      var mapping = this._getMappingByMeasurementSource(measurementId, definition);

      if (mapping) return mapping.toSourceSchema(measurement, definition);
      var measurement = this.getMeasurement(measurementId);

      var matchingMapping = this._getMatchingMapping(source, definition, measurement);

      if (matchingMapping) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Matching mapping found:', matchingMapping);
        var toSourceSchema = matchingMapping.toSourceSchema,
            _definition = matchingMapping.definition;
        return toSourceSchema(measurement, _definition);
      }
    }
    /**
    * Adds or update persisted measurements.
    *
    * @param {MeasurementSource} source The measurement source instance
    * @param {string} definition The source definition
    * @param {Measurement} measurement The source measurement
    * @return {string} A measurement id
    */

  }, {
    key: "addOrUpdate",
    value: function addOrUpdate(source, definition, sourceMeasurement) {
      if (!this._isValidSource(source)) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Invalid source. Exiting early.');
        return;
      }

      var sourceInfo = this._getSourceInfo(source);

      if (!definition) {
        console.log('TEST');
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('No source definition provided. Exiting early.');
        return;
      }

      if (!this._sourceHasMappings(source)) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn("No measurement mappings found for '".concat(sourceInfo, "' source. Exiting early."));
        return;
      }

      var measurement = {};

      try {
        var sourceMappings = this.mappings[source.id];

        var _sourceMappings$find = sourceMappings.find(function (mapping) {
          return mapping.definition === definition;
        }),
            toMeasurementSchema = _sourceMappings$find.toMeasurementSchema;
        /* Convert measurement */


        measurement = toMeasurementSchema(sourceMeasurement);
        /* Assign measurement source instance */

        measurement.source = source;
      } catch (error) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn("Failed to map '".concat(sourceInfo, "' measurement for definition ").concat(definition, ":"), error.message);
        return;
      }

      if (!this._isValidMeasurement(measurement)) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn("Attempting to add or update a invalid measurement provided by '".concat(sourceInfo, "'. Exiting early."));
        return;
      }

      var internalId = sourceMeasurement.id;

      if (!internalId) {
        internalId = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_4__["default"])();
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn("Measurement ID not found. Generating UID: ".concat(internalId));
      }

      var newMeasurement = _objectSpread({}, measurement, {
        modifiedTimestamp: Math.floor(Date.now() / 1000),
        id: internalId
      });

      if (this.measurements[internalId]) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Measurement already defined. Updating measurement.', newMeasurement);
        this.measurements[internalId] = newMeasurement;

        this._broadcastChange(this.EVENTS.MEASUREMENT_UPDATED, source, newMeasurement);
      } else {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].info('Measurement added.', newMeasurement);
        this.measurements[internalId] = newMeasurement;

        this._broadcastChange(this.EVENTS.MEASUREMENT_ADDED, source, newMeasurement);
      }

      return newMeasurement.id;
    }
    /**
    * Subscribe to measurement updates.
    *
    * @param {string} eventName The name of the event
    * @param {Function} callback Events callback
    * @return {Object} Observable object with actions
    */

  }, {
    key: "subscribe",
    value: function subscribe(eventName, callback) {
      var _this3 = this;

      if (this._isValidEvent(eventName)) {
        var listenerId = Object(_utils_guid__WEBPACK_IMPORTED_MODULE_4__["default"])();
        var subscription = {
          id: listenerId,
          callback: callback
        };
        console.info("Subscribing to '".concat(eventName, "'."));

        if (Array.isArray(this.listeners[eventName])) {
          this.listeners[eventName].push(subscription);
        } else {
          this.listeners[eventName] = [subscription];
        }

        return {
          unsubscribe: function unsubscribe() {
            return _this3._unsubscribe(eventName, listenerId);
          }
        };
      }

      throw new Error("Event ".concat(eventName, " not supported."));
    }
  }, {
    key: "_getMappingByMeasurementSource",
    value: function _getMappingByMeasurementSource(measurementId, definition) {
      var measurement = this.getMeasurement(measurementId);

      if (this._isValidSource(measurement.source)) {
        return this.mappings[measurement.source.id].find(function (m) {
          return m.definition === definition;
        });
      }
    }
    /**
    * Get measurement mapping function if matching criteria.
    *
    * @param {MeasurementSource} source Measurement source instance
    * @param {string} definition The source definition
    * @param {string} measurement The measurement serice measurement
    * @return {Object} The mapping based on matched criteria
    */

  }, {
    key: "_getMatchingMapping",
    value: function _getMatchingMapping(source, definition, measurement) {
      var sourceMappings = this.mappings[source.id];
      var sourceMappingsByDefinition = sourceMappings.filter(function (mapping) {
        return mapping.definition === definition;
      });
      /* Criteria Matching */

      return sourceMappingsByDefinition.find(function (_ref2) {
        var matchingCriteria = _ref2.matchingCriteria;
        return measurement.points && measurement.points.length === matchingCriteria.points;
      });
    }
    /**
    * Returns formatted string with source info.
    *
    * @param {MeasurementSource} source Measurement source
    * @return {string} Source information
    */

  }, {
    key: "_getSourceInfo",
    value: function _getSourceInfo(source) {
      return "".concat(source.name, "@").concat(source.version);
    }
    /**
    * Checks if given source is valid.
    *
    * @param {MeasurementSource} source Measurement source
    * @return {boolean} Measurement source validation
    */

  }, {
    key: "_isValidSource",
    value: function _isValidSource(source) {
      return source && this.sources[source.id];
    }
    /**
    * Checks if a given source has mappings.
    *
    * @param {MeasurementSource} source The measurement source
    * @return {boolean} Validation if source has mappings
    */

  }, {
    key: "_sourceHasMappings",
    value: function _sourceHasMappings(source) {
      return Array.isArray(this.mappings[source.id]) && this.mappings[source.id].length;
    }
    /**
    * Broadcasts measurement changes.
    *
    * @param {string} measurementId The measurement id
    * @param {MeasurementSource} source The measurement source
    * @param {string} eventName The event name
    * @return void
    */

  }, {
    key: "_broadcastChange",
    value: function _broadcastChange(eventName, source, measurement) {
      var hasListeners = Object.keys(this.listeners).length > 0;
      var hasCallbacks = Array.isArray(this.listeners[eventName]);

      if (hasListeners && hasCallbacks) {
        this.listeners[eventName].forEach(function (listener) {
          listener.callback({
            source: source,
            measurement: measurement
          });
        });
      }
    }
    /**
    * Unsubscribe to measurement updates.
    *
    * @param {string} eventName The name of the event
    * @param {string} listenerId The listeners id
    * @return void
    */

  }, {
    key: "_unsubscribe",
    value: function _unsubscribe(eventName, listenerId) {
      if (!this.listeners[eventName]) {
        return;
      }

      var listeners = this.listeners[eventName];

      if (Array.isArray(listeners)) {
        this.listeners[eventName] = listeners.filter(function (_ref3) {
          var id = _ref3.id;
          return id !== listenerId;
        });
      } else {
        this.listeners[eventName] = undefined;
      }
    }
    /**
    * Check if a given measurement data is valid.
    *
    * @param {Measurement} measurementData Measurement data
    * @return {boolean} Measurement validation
    */

  }, {
    key: "_isValidMeasurement",
    value: function _isValidMeasurement(measurementData) {
      Object.keys(measurementData).forEach(function (key) {
        if (!MEASUREMENT_SCHEMA_KEYS.includes(key)) {
          _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn("Invalid measurement key: ".concat(key));
          return false;
        }
      });
      return true;
    }
    /**
    * Check if a given measurement service event is valid.
    *
    * @param {string} eventName The name of the event
    * @return {boolean} Event name validation
    */

  }, {
    key: "_isValidEvent",
    value: function _isValidEvent(eventName) {
      return Object.values(this.EVENTS).includes(eventName);
    }
    /**
     * Converts object of objects to array.
     *
     * @return {Array} Array of objects
     */

  }]);

  return MeasurementService;
}();

/* harmony default export */ __webpack_exports__["default"] = (MeasurementService);


/***/ }),

/***/ "./services/MeasurementService/index.js":
/*!**********************************************!*\
  !*** ./services/MeasurementService/index.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _MeasurementService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MeasurementService */ "./services/MeasurementService/MeasurementService.js");

/* harmony default export */ __webpack_exports__["default"] = ({
  name: 'MeasurementService',
  create: function create(_ref) {
    var _ref$configuration = _ref.configuration,
        configuration = _ref$configuration === void 0 ? {} : _ref$configuration;
    return new _MeasurementService__WEBPACK_IMPORTED_MODULE_0__["default"]();
  }
});

/***/ }),

/***/ "./services/ServicesManager.js":
/*!*************************************!*\
  !*** ./services/ServicesManager.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ServicesManager; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../log */ "./log.js");





var ServicesManager = /*#__PURE__*/function () {
  function ServicesManager() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ServicesManager);

    this.services = {};
    this.registeredServiceNames = [];
  }
  /**
  * Registers a new service.
  *
  * @param {Object} service
  * @param {Object} configuration
  */


  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ServicesManager, [{
    key: "registerService",
    value: function registerService(service) {
      var configuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!service) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Attempting to register a null/undefined service. Exiting early.');
        return;
      }

      if (!service.name) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Service name not set. Exiting early.');
        return;
      }

      if (this.registeredServiceNames.includes(service.name)) {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn("Service name ".concat(service.name, " has already been registered. Exiting before duplicating services."));
        return;
      }

      if (service.create) {
        this.services[service.name] = service.create({
          configuration: configuration
        });
      } else {
        _log__WEBPACK_IMPORTED_MODULE_3__["default"].warn('Service create factory function not defined. Exiting early.');
        return;
      }
      /* Track service registration */


      this.registeredServiceNames.push(service.name);
    }
    /**
    * An array of services, or an array of arrays that contains service
    * configuration pairs.
    *
    * @param {Object[]} services - Array of services
    */

  }, {
    key: "registerServices",
    value: function registerServices(services) {
      var _this = this;

      services.forEach(function (service) {
        var hasConfiguration = Array.isArray(service);

        if (hasConfiguration) {
          var _service = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(service, 2),
              ohifService = _service[0],
              configuration = _service[1];

          _this.registerService(ohifService, configuration);
        } else {
          _this.registerService(service);
        }
      });
    }
  }]);

  return ServicesManager;
}();



/***/ }),

/***/ "./services/UIDialogService/index.js":
/*!*******************************************!*\
  !*** ./services/UIDialogService/index.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A UI Element Position
 *
 * @typedef {Object} ElementPosition
 * @property {number} top -
 * @property {number} left -
 * @property {number} right -
 * @property {number} bottom -
 */

/**
 * UI Dialog
 *
 * @typedef {Object} DialogProps
 * @property {string} id The dialog id.
 * @property {ReactElement|HTMLElement} content The dialog content.
 * @property {Object} contentProps The dialog content props.
 * @property {boolean} [isDraggable=true] Controls if dialog content is draggable or not.
 * @property {boolean} [showOverlay=false] Controls dialog overlay.
 * @property {boolean} [centralize=false] Center the dialog on the screen.
 * @property {boolean} [preservePosition=true] Use last position instead of default.
 * @property {ElementPosition} defaultPosition Specifies the `x` and `y` that the dragged item should start at.
 * @property {Function} onStart Called when dragging starts. If `false` is returned any handler, the action will cancel.
 * @property {Function} onStop Called when dragging stops.
 * @property {Function} onDrag Called while dragging.
 */
var name = 'UIDialogService';
var publicAPI = {
  name: name,
  dismiss: _dismiss,
  dismissAll: _dismissAll,
  create: _create,
  setServiceImplementation: setServiceImplementation
};
var serviceImplementation = {
  _dismiss: function _dismiss() {
    return console.warn('dismiss() NOT IMPLEMENTED');
  },
  _dismissAll: function _dismissAll() {
    return console.warn('dismissAll() NOT IMPLEMENTED');
  },
  _create: function _create() {
    return console.warn('create() NOT IMPLEMENTED');
  }
};
/**
 * Show a new UI dialog;
 *
 * @param {DialogProps} props { id, content, contentProps, onStart, onDrag, onStop, centralize, isDraggable, showOverlay, preservePosition, defaultPosition }
 */

function _create(_ref) {
  var id = _ref.id,
      content = _ref.content,
      contentProps = _ref.contentProps,
      onStart = _ref.onStart,
      onDrag = _ref.onDrag,
      onStop = _ref.onStop,
      _ref$centralize = _ref.centralize,
      centralize = _ref$centralize === void 0 ? false : _ref$centralize,
      _ref$preservePosition = _ref.preservePosition,
      preservePosition = _ref$preservePosition === void 0 ? true : _ref$preservePosition,
      _ref$isDraggable = _ref.isDraggable,
      isDraggable = _ref$isDraggable === void 0 ? true : _ref$isDraggable,
      _ref$showOverlay = _ref.showOverlay,
      showOverlay = _ref$showOverlay === void 0 ? false : _ref$showOverlay,
      defaultPosition = _ref.defaultPosition;
  return serviceImplementation._create({
    id: id,
    content: content,
    contentProps: contentProps,
    onStart: onStart,
    onDrag: onDrag,
    onStop: onStop,
    centralize: centralize,
    preservePosition: preservePosition,
    isDraggable: isDraggable,
    showOverlay: showOverlay,
    defaultPosition: defaultPosition
  });
}
/**
 * Destroys all dialogs, if any
 *
 * @returns void
 */


function _dismissAll() {
  return serviceImplementation._dismissAll();
}
/**
 * Destroy the dialog, if currently created
 *
 * @returns void
 */


function _dismiss(_ref2) {
  var id = _ref2.id;
  return serviceImplementation._dismiss({
    id: id
  });
}
/**
 *
 *
 * @param {*} {
 *   dismiss: dismissImplementation,
 *   dismissAll: dismissAllImplementation,
 *   create: createImplementation,
 * }
 */


function setServiceImplementation(_ref3) {
  var dismissImplementation = _ref3.dismiss,
      dismissAllImplementation = _ref3.dismissAll,
      createImplementation = _ref3.create;

  if (dismissImplementation) {
    serviceImplementation._dismiss = dismissImplementation;
  }

  if (dismissAllImplementation) {
    serviceImplementation._dismissAll = dismissAllImplementation;
  }

  if (createImplementation) {
    serviceImplementation._create = createImplementation;
  }
}

/* harmony default export */ __webpack_exports__["default"] = ({
  name: name,
  create: function create(_ref4) {
    var _ref4$configuration = _ref4.configuration,
        configuration = _ref4$configuration === void 0 ? {} : _ref4$configuration;
    return publicAPI;
  }
});

/***/ }),

/***/ "./services/UIModalService/index.js":
/*!******************************************!*\
  !*** ./services/UIModalService/index.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * UI Modal
 *
 * @typedef {Object} ModalProps
 * @property {ReactElement|HTMLElement} [content=null] Modal content.
 * @property {Object} [contentProps=null] Modal content props.
 * @property {boolean} [shouldCloseOnEsc=false] Modal is dismissible via the esc key.
 * @property {boolean} [isOpen=true] Make the Modal visible or hidden.
 * @property {boolean} [closeButton=true] Should the modal body render the close button.
 * @property {string} [title=null] Should the modal render the title independently of the body content.
 * @property {string} [customClassName=null] The custom class to style the modal.
 */
var name = 'UIModalService';
var publicAPI = {
  name: name,
  hide: _hide,
  show: _show,
  setServiceImplementation: setServiceImplementation
};
var serviceImplementation = {
  _hide: function _hide() {
    return console.warn('hide() NOT IMPLEMENTED');
  },
  _show: function _show() {
    return console.warn('show() NOT IMPLEMENTED');
  }
};
/**
 * Show a new UI modal;
 *
 * @param {ModalProps} props { content, contentProps, shouldCloseOnEsc, isOpen, closeButton, title, customClassName }
 */

function _show(_ref) {
  var _ref$content = _ref.content,
      content = _ref$content === void 0 ? null : _ref$content,
      _ref$contentProps = _ref.contentProps,
      contentProps = _ref$contentProps === void 0 ? null : _ref$contentProps,
      _ref$shouldCloseOnEsc = _ref.shouldCloseOnEsc,
      shouldCloseOnEsc = _ref$shouldCloseOnEsc === void 0 ? false : _ref$shouldCloseOnEsc,
      _ref$isOpen = _ref.isOpen,
      isOpen = _ref$isOpen === void 0 ? true : _ref$isOpen,
      _ref$closeButton = _ref.closeButton,
      closeButton = _ref$closeButton === void 0 ? true : _ref$closeButton,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? null : _ref$title,
      _ref$customClassName = _ref.customClassName,
      customClassName = _ref$customClassName === void 0 ? null : _ref$customClassName;
  return serviceImplementation._show({
    content: content,
    contentProps: contentProps,
    shouldCloseOnEsc: shouldCloseOnEsc,
    isOpen: isOpen,
    closeButton: closeButton,
    title: title,
    customClassName: customClassName
  });
}
/**
 * Hides/dismisses the modal, if currently shown
 *
 * @returns void
 */


function _hide() {
  return serviceImplementation._hide();
}
/**
 *
 *
 * @param {*} {
 *   hide: hideImplementation,
 *   show: showImplementation,
 * }
 */


function setServiceImplementation(_ref2) {
  var hideImplementation = _ref2.hide,
      showImplementation = _ref2.show;

  if (hideImplementation) {
    serviceImplementation._hide = hideImplementation;
  }

  if (showImplementation) {
    serviceImplementation._show = showImplementation;
  }
}

/* harmony default export */ __webpack_exports__["default"] = ({
  name: name,
  create: function create(_ref3) {
    var _ref3$configuration = _ref3.configuration,
        configuration = _ref3$configuration === void 0 ? {} : _ref3$configuration;
    return publicAPI;
  }
});

/***/ }),

/***/ "./services/UINotificationService/index.js":
/*!*************************************************!*\
  !*** ./services/UINotificationService/index.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * A UI Notification
 *
 * @typedef {Object} Notification
 * @property {string} title -
 * @property {string} message -
 * @property {number} [duration=5000] - in ms
 * @property {string} [position="bottomRight"] -"topLeft" | "topCenter | "topRight" | "bottomLeft" | "bottomCenter" | "bottomRight"
 * @property {string} [type="info"] - "info" | "error" | "warning" | "success"
 * @property {boolean} [autoClose=true]
 */
var name = 'UINotificationService';
var serviceShowRequestQueue = [];
var publicAPI = {
  name: name,
  hide: _hide,
  show: _show,
  setServiceImplementation: setServiceImplementation
};
var serviceImplementation = {
  _hide: function _hide() {
    return console.warn('hide() NOT IMPLEMENTED');
  },
  _show: function _show(showArguments) {
    serviceShowRequestQueue.push(showArguments);
    console.warn('show() NOT IMPLEMENTED');
  }
};
/**
 * Create and show a new UI notification; returns the
 * ID of the created notification.
 *
 * @param {Notification} notification { title, message, duration, position, type, autoClose}
 * @returns {number} id
 */

function _show(_ref) {
  var title = _ref.title,
      message = _ref.message,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 5000 : _ref$duration,
      _ref$position = _ref.position,
      position = _ref$position === void 0 ? 'bottomRight' : _ref$position,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'info' : _ref$type,
      _ref$autoClose = _ref.autoClose,
      autoClose = _ref$autoClose === void 0 ? true : _ref$autoClose;
  return serviceImplementation._show({
    title: title,
    message: message,
    duration: duration,
    position: position,
    type: type,
    autoClose: autoClose
  });
}
/**
 * Hides/dismisses the notification, if currently shown
 *
 * @param {number} id - id of the notification to hide/dismiss
 * @returns undefined
 */


function _hide(id) {
  return serviceImplementation._hide({
    id: id
  });
}
/**
 *
 *
 * @param {*} {
 *   hide: hideImplementation,
 *   show: showImplementation,
 * }
 */


function setServiceImplementation(_ref2) {
  var hideImplementation = _ref2.hide,
      showImplementation = _ref2.show;

  if (hideImplementation) {
    serviceImplementation._hide = hideImplementation;
  }

  if (showImplementation) {
    serviceImplementation._show = showImplementation;

    while (serviceShowRequestQueue.length > 0) {
      var showArguments = serviceShowRequestQueue.pop();

      serviceImplementation._show(showArguments);
    }
  }
}

/* harmony default export */ __webpack_exports__["default"] = ({
  name: name,
  create: function create(_ref3) {
    var _ref3$configuration = _ref3.configuration,
        configuration = _ref3$configuration === void 0 ? {} : _ref3$configuration;
    return publicAPI;
  }
});

/***/ }),

/***/ "./string.js":
/*!*******************!*\
  !*** ./string.js ***!
  \*******************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);


// TODO: This is duplicated in TypeSafeCollection
function isObject(subject) {
  return subject instanceof Object || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(subject) === 'object' && subject !== null;
} // TODO: This is duplicated in TypeSafeCollection


function isString(subject) {
  return typeof subject === 'string';
} // Search for some string inside any object or array


function search(object, query) {
  var property = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  var result = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  // Create the search pattern
  var pattern = new RegExp(query.trim(), 'i');
  Object.keys(object).forEach(function (key) {
    var item = object[key]; // Stop here if item is empty

    if (!item) {
      return;
    } // Get the value to be compared


    var value = isString(property) ? item[property] : item; // Check if the value match the pattern

    if (isString(value) && pattern.test(value)) {
      // Add the current item to the result
      result.push(item);
    }

    if (isObject(item)) {
      // Search recursively the item if the current item is an object
      search(item, query, property, result);
    }
  }); // Return the found items

  return result;
} // Encode any string into a safe format for HTML id attribute


function encodeId(input) {
  var string = input && input.toString ? input.toString() : input; // Return an underscore if the given string is empty or if it's not a string

  if (string === '' || typeof string !== 'string') {
    return '_';
  } // Create a converter to replace non accepted chars


  var converter = function converter(match) {
    return "_".concat(match[0].charCodeAt(0).toString(16), "_");
  }; // Encode the given string and return it


  return string.replace(/[^a-zA-Z0-9-]/g, converter);
}

var string = {
  search: search,
  encodeId: encodeId
};
/* harmony default export */ __webpack_exports__["default"] = (string);

/***/ }),

/***/ "./studies/getSeriesInfo.js":
/*!**********************************!*\
  !*** ./studies/getSeriesInfo.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getSeriesInfo; });
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../DICOMWeb */ "./DICOMWeb/index.js");
/* harmony import */ var _utils_isLowPriorityModality__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/isLowPriorityModality */ "./utils/isLowPriorityModality.js");


var INFO = Symbol('INFO');
/**
 * Creates an object with processed series information and saves its reference
 * inside the series object itself.
 * @param {Object} series The raw series object
 * @returns {Object} object containing some useful info from given series
 */

function getSeriesInfo(series) {
  var info = series[INFO];

  if (!info) {
    var Modality = _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__["default"].getString(series['00080060'], '').toUpperCase();
    info = Object.freeze({
      Modality: Modality,
      isLowPriority: Object(_utils_isLowPriorityModality__WEBPACK_IMPORTED_MODULE_1__["default"])(Modality),
      SeriesInstanceUID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__["default"].getString(series['0020000E']),
      SeriesNumber: _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__["default"].getNumber(series['00200011'], 0) || 0
    });
    series[INFO] = info;
  }

  return info;
}

/***/ }),

/***/ "./studies/getStudyBoxData.js":
/*!************************************!*\
  !*** ./studies/getStudyBoxData.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Overridable namespace to allow getting study boxes data externally.
 *
 * The function must handle the first parameter as a studyInformation object containing at least the
 * StudyInstanceUID attribute.
 *
 * Shall return a promise that will be resolved with an object containing those attributes:
 * - StudyInstanceUID {String}: copy of studyInformation.StudyInstanceUID
 * - modalities {String}: 2 uppercase letters for each Modality split by any non-alphabetical char(s)
 * - StudyDate {String}: date formatted as YYYYMMDD
 * - StudyDescription {String}: study description string
 */
// TODO: What is this for?
var getStudyBoxData = false;
/* harmony default export */ __webpack_exports__["default"] = (getStudyBoxData);

/***/ }),

/***/ "./studies/index.js":
/*!**************************!*\
  !*** ./studies/index.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services */ "./studies/services/index.js");
/* harmony import */ var _retrieveStudyMetadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retrieveStudyMetadata */ "./studies/retrieveStudyMetadata.js");
/* harmony import */ var _getStudyBoxData__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getStudyBoxData */ "./studies/getStudyBoxData.js");
/* harmony import */ var _retrieveStudiesMetadata__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retrieveStudiesMetadata */ "./studies/retrieveStudiesMetadata.js");
/* harmony import */ var _searchStudies__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./searchStudies */ "./studies/searchStudies.js");
/* harmony import */ var _sortStudy__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./sortStudy */ "./studies/sortStudy.js");






var studies = {
  services: {
    QIDO: _services__WEBPACK_IMPORTED_MODULE_0__["QIDO"],
    WADO: _services__WEBPACK_IMPORTED_MODULE_0__["WADO"]
  },
  loadingDict: {},
  retrieveStudyMetadata: _retrieveStudyMetadata__WEBPACK_IMPORTED_MODULE_1__["retrieveStudyMetadata"],
  deleteStudyMetadataPromise: _retrieveStudyMetadata__WEBPACK_IMPORTED_MODULE_1__["deleteStudyMetadataPromise"],
  retrieveStudiesMetadata: _retrieveStudiesMetadata__WEBPACK_IMPORTED_MODULE_3__["default"],
  getStudyBoxData: _getStudyBoxData__WEBPACK_IMPORTED_MODULE_2__["default"],
  searchStudies: _searchStudies__WEBPACK_IMPORTED_MODULE_4__["default"],
  sortStudy: _sortStudy__WEBPACK_IMPORTED_MODULE_5__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (studies);

/***/ }),

/***/ "./studies/retrieveStudiesMetadata.js":
/*!********************************************!*\
  !*** ./studies/retrieveStudiesMetadata.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return retrieveStudiesMetadata; });
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../log */ "./log.js");
/* harmony import */ var _retrieveStudyMetadata__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retrieveStudyMetadata */ "./studies/retrieveStudyMetadata.js");


/**
 * Retrieves metaData for multiple studies at once.
 *
 * This function calls retrieveStudyMetadata several times, asynchronously,
 * and waits for all of the results to be returned.
 *
 * @param {Object} server Object with server configuration parameters
 * @param {Array} studyInstanceUIDs The UIDs of the Studies to be retrieved
 * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process
 * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against
 * @returns {Promise} that will be resolved with the metadata or rejected with the error
 */

function retrieveStudiesMetadata(server, studyInstanceUIDs, filters) {
  // Create an empty array to store the Promises for each metaData retrieval call
  var promises = []; // Loop through the array of studyInstanceUIDs

  studyInstanceUIDs.forEach(function (StudyInstanceUID) {
    // Send the call and resolve or reject the related promise based on its outcome
    var promise = Object(_retrieveStudyMetadata__WEBPACK_IMPORTED_MODULE_1__["retrieveStudyMetadata"])(server, StudyInstanceUID, filters); // Add the current promise to the array of promises

    promises.push(promise);
  }); // When all of the promises are complete, this callback runs

  var promise = Promise.all(promises); // Warn the error on console if some retrieval failed

  promise["catch"](function (error) {
    return _log__WEBPACK_IMPORTED_MODULE_0__["default"].warn(error);
  });
  return promise;
}

/***/ }),

/***/ "./studies/retrieveStudyMetadata.js":
/*!******************************************!*\
  !*** ./studies/retrieveStudyMetadata.js ***!
  \******************************************/
/*! exports provided: retrieveStudyMetadata, deleteStudyMetadataPromise */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "retrieveStudyMetadata", function() { return retrieveStudyMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteStudyMetadataPromise", function() { return deleteStudyMetadataPromise; });
/* harmony import */ var _services_wado_retrieveMetadata__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/wado/retrieveMetadata */ "./studies/services/wado/retrieveMetadata.js");

var moduleName = 'RetrieveStudyMetadata'; // Cache for promises. Prevents unnecessary subsequent calls to the server

var StudyMetaDataPromises = new Map();
/**
 * Retrieves study metadata
 *
 * @param {Object} server Object with server configuration parameters
 * @param {string} StudyInstanceUID The UID of the Study to be retrieved
 * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process
 * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against
 * @returns {Promise} that will be resolved with the metadata or rejected with the error
 */

function retrieveStudyMetadata(server, StudyInstanceUID, filters) {
  // @TODO: Whenever a study metadata request has failed, its related promise will be rejected once and for all
  // and further requests for that metadata will always fail. On failure, we probably need to remove the
  // corresponding promise from the "StudyMetaDataPromises" map...
  if (!server) {
    throw new Error("".concat(moduleName, ": Required 'server' parameter not provided."));
  }

  if (!StudyInstanceUID) {
    throw new Error("".concat(moduleName, ": Required 'StudyInstanceUID' parameter not provided."));
  } // Already waiting on result? Return cached promise


  if (StudyMetaDataPromises.has(StudyInstanceUID)) {
    return StudyMetaDataPromises.get(StudyInstanceUID);
  } // Create a promise to handle the data retrieval


  var promise = new Promise(function (resolve, reject) {
    Object(_services_wado_retrieveMetadata__WEBPACK_IMPORTED_MODULE_0__["default"])(server, StudyInstanceUID, filters).then(function (data) {
      resolve(data);
    }, reject);
  }); // Store the promise in cache

  StudyMetaDataPromises.set(StudyInstanceUID, promise);
  return promise;
}
/**
 * Delete the cached study metadata retrieval promise to ensure that the browser will
 * re-retrieve the study metadata when it is next requested
 *
 * @param {String} StudyInstanceUID The UID of the Study to be removed from cache
 *
 */

function deleteStudyMetadataPromise(StudyInstanceUID) {
  if (StudyMetaDataPromises.has(StudyInstanceUID)) {
    StudyMetaDataPromises["delete"](StudyInstanceUID);
  }
}

/***/ }),

/***/ "./studies/searchStudies.js":
/*!**********************************!*\
  !*** ./studies/searchStudies.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return searchStudies; });
/* harmony import */ var _services_qido_studies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services/qido/studies */ "./studies/services/qido/studies.js");

var studySearchPromises = new Map();
/**
 * Search for studies information by the given filter
 *
 * @param {Object} filter Filter that will be used on search
 * @returns {Promise} resolved with an array of studies information or rejected with an error
 */

function searchStudies(server, filter) {
  var promiseKeyObj = {
    qidoRoot: server.qidoRoot,
    filter: filter
  };
  var promiseKey = JSON.stringify(promiseKeyObj);

  if (studySearchPromises.has(promiseKey)) {
    return studySearchPromises.get(promiseKey);
  }

  var promise = Object(_services_qido_studies__WEBPACK_IMPORTED_MODULE_0__["default"])(server, filter);
  studySearchPromises.set(promiseKey, promise);
  return promise;
}

/***/ }),

/***/ "./studies/services/index.js":
/*!***********************************!*\
  !*** ./studies/services/index.js ***!
  \***********************************/
/*! exports provided: QIDO, WADO */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QIDO", function() { return QIDO; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WADO", function() { return WADO; });
/* harmony import */ var _qido_instances__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./qido/instances */ "./studies/services/qido/instances.js");
/* harmony import */ var _qido_studies__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./qido/studies */ "./studies/services/qido/studies.js");
/* harmony import */ var _wado_retrieveMetadata__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./wado/retrieveMetadata */ "./studies/services/wado/retrieveMetadata.js");
// DICOMWeb instance, study, and metadata retrieval



var WADO = {
  RetrieveMetadata: _wado_retrieveMetadata__WEBPACK_IMPORTED_MODULE_2__["default"]
};
var QIDO = {
  Studies: _qido_studies__WEBPACK_IMPORTED_MODULE_1__["default"],
  Instances: _qido_instances__WEBPACK_IMPORTED_MODULE_0__["default"]
};


/***/ }),

/***/ "./studies/services/qido/instances.js":
/*!********************************************!*\
  !*** ./studies/services/qido/instances.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Instances; });
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../DICOMWeb */ "./DICOMWeb/index.js");


/**
 * Parses data returned from a QIDO search and transforms it into
 * an array of series that are present in the study
 *
 * @param server The DICOM server
 * @param StudyInstanceUID
 * @param resultData
 * @returns {Array} Series List
 */

function resultDataToStudyMetadata(server, StudyInstanceUID, resultData) {
  var seriesMap = {};
  var series = [];
  resultData.forEach(function (instance) {
    // Use seriesMap to cache series data
    // If the series instance UID has already been used to
    // process series data, continue using that series
    var SeriesInstanceUID = _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(instance['0020000E']);
    var series = seriesMap[SeriesInstanceUID]; // If no series data exists in the seriesMap cache variable,
    // process any available series data

    if (!series) {
      series = {
        SeriesInstanceUID: SeriesInstanceUID,
        SeriesNumber: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(instance['00200011']),
        instances: []
      }; // Save this data in the seriesMap cache variable

      seriesMap[SeriesInstanceUID] = series;
      series.push(series);
    } // The uri for the dicomweb
    // NOTE: DCM4CHEE seems to return the data zipped
    // NOTE: Orthanc returns the data with multi-part mime which cornerstoneWADOImageLoader doesn't
    //       know how to parse yet
    // var uri = DICOMWeb.getString(instance['00081190']);
    // uri = uri.replace('wado-rs', 'dicom-web');
    // manually create a WADO-URI from the UIDs
    // NOTE: Haven't been able to get Orthanc's WADO-URI to work yet - maybe its not configured?


    var SOPInstanceUID = _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(instance['00080018']);
    var uri = "".concat(server.wadoUriRoot, "?requestType=WADO&studyUID=").concat(StudyInstanceUID, "&seriesUID=").concat(SeriesInstanceUID, "&objectUID=").concat(SOPInstanceUID, "&contentType=application%2Fdicom"); // Add this instance to the current series

    series.instances.push({
      SOPClassUID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(instance['00080016']),
      SOPInstanceUID: SOPInstanceUID,
      uri: uri,
      InstanceNumber: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(instance['00200013'])
    });
  });
  return series;
}
/**
 * Retrieve a set of instances using a QIDO call
 * @param server
 * @param StudyInstanceUID
 * @throws ECONNREFUSED
 * @returns {{wadoUriRoot: String, StudyInstanceUID: String, series: Array}}
 */


function Instances(server, StudyInstanceUID) {
  // TODO: Are we using this function anywhere?? Can we remove it?
  var config = {
    url: server.qidoRoot,
    headers: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getAuthorizationHeader(server)
  };
  var dicomWeb = new dicomweb_client__WEBPACK_IMPORTED_MODULE_0__["api"].DICOMwebClient(config);
  var queryParams = getQIDOQueryParams(filter, server.qidoSupportsIncludeField);
  var options = {
    studyInstanceUID: StudyInstanceUID
  };
  return dicomWeb.searchForInstances(options).then(function (result) {
    return {
      wadoUriRoot: server.wadoUriRoot,
      StudyInstanceUID: StudyInstanceUID,
      series: resultDataToStudyMetadata(server, StudyInstanceUID, result.data)
    };
  });
}

/***/ }),

/***/ "./studies/services/qido/studies.js":
/*!******************************************!*\
  !*** ./studies/services/qido/studies.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Studies; });
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../DICOMWeb */ "./DICOMWeb/index.js");


/**
 * Creates a QIDO date string for a date range query
 * Assumes the year is positive, at most 4 digits long.
 *
 * @param date The Date object to be formatted
 * @returns {string} The formatted date string
 */

function dateToString(date) {
  if (!date) return '';
  var year = date.getFullYear().toString();
  var month = (date.getMonth() + 1).toString();
  var day = date.getDate().toString();
  year = '0'.repeat(4 - year.length).concat(year);
  month = '0'.repeat(2 - month.length).concat(month);
  day = '0'.repeat(2 - day.length).concat(day);
  return ''.concat(year, month, day);
}
/**
 * Produces a QIDO URL given server details and a set of specified search filter
 * items
 *
 * @param filter
 * @param serverSupportsQIDOIncludeField
 * @returns {string} The URL with encoded filter query data
 */


function getQIDOQueryParams(filter, serverSupportsQIDOIncludeField) {
  var commaSeparatedFields = ['00081030', // Study Description
  '00080060' // Modality
  // Add more fields here if you want them in the result
  ].join(',');
  var parameters = {
    PatientName: filter.PatientName,
    PatientID: filter.PatientID,
    AccessionNumber: filter.AccessionNumber,
    StudyDescription: filter.StudyDescription,
    ModalitiesInStudy: filter.ModalitiesInStudy,
    limit: filter.limit,
    offset: filter.offset,
    fuzzymatching: filter.fuzzymatching,
    includefield: serverSupportsQIDOIncludeField ? commaSeparatedFields : 'all'
  }; // build the StudyDate range parameter

  if (filter.studyDateFrom || filter.studyDateTo) {
    var dateFrom = dateToString(new Date(filter.studyDateFrom));
    var dateTo = dateToString(new Date(filter.studyDateTo));
    parameters.StudyDate = "".concat(dateFrom, "-").concat(dateTo);
  } // Build the StudyInstanceUID parameter


  if (filter.StudyInstanceUID) {
    var studyUIDs = filter.StudyInstanceUID;
    studyUIDs = Array.isArray(studyUIDs) ? studyUIDs.join() : studyUIDs;
    studyUIDs = studyUIDs.replace(/[^0-9.]+/g, '\\');
    parameters.StudyInstanceUID = studyUIDs;
  } // Clean query params of undefined values.


  var params = {};
  Object.keys(parameters).forEach(function (key) {
    if (parameters[key] !== undefined && parameters[key] !== '') {
      params[key] = parameters[key];
    }
  });
  return params;
}
/**
 * Parses resulting data from a QIDO call into a set of Study MetaData
 *
 * @param resultData
 * @returns {Array} An array of Study MetaData objects
 */


function resultDataToStudies(resultData) {
  var studies = [];
  if (!resultData || !resultData.length) return;
  resultData.forEach(function (study) {
    return studies.push({
      StudyInstanceUID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['0020000D']),
      // 00080005 = SpecificCharacterSet
      StudyDate: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00080020']),
      StudyTime: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00080030']),
      AccessionNumber: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00080050']),
      referringPhysicianName: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00080090']),
      // 00081190 = URL
      PatientName: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getName(study['00100010']),
      PatientID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00100020']),
      PatientBirthdate: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00100030']),
      patientSex: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00100040']),
      studyId: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00200010']),
      numberOfStudyRelatedSeries: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00201206']),
      numberOfStudyRelatedInstances: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00201208']),
      StudyDescription: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(study['00081030']),
      // Modality: DICOMWeb.getString(study['00080060']),
      // ModalitiesInStudy: DICOMWeb.getString(study['00080061']),
      modalities: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getString(_DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getModalities(study['00080060'], study['00080061']))
    });
  });
  return studies;
}

function Studies(server, filter) {
  var config = {
    url: server.qidoRoot,
    headers: _DICOMWeb__WEBPACK_IMPORTED_MODULE_1__["default"].getAuthorizationHeader(server)
  };
  var dicomWeb = new dicomweb_client__WEBPACK_IMPORTED_MODULE_0__["api"].DICOMwebClient(config);
  server.qidoSupportsIncludeField = server.qidoSupportsIncludeField === undefined ? true : server.qidoSupportsIncludeField;
  var queryParams = getQIDOQueryParams(filter, server.qidoSupportsIncludeField);
  var options = {
    queryParams: queryParams
  };
  return dicomWeb.searchForStudies(options).then(resultDataToStudies);
}

/***/ }),

/***/ "./studies/services/wado/getReferencedSeriesSequence.js":
/*!**************************************************************!*\
  !*** ./studies/services/wado/getReferencedSeriesSequence.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../DICOMWeb */ "./DICOMWeb/index.js");

/**
 * Function to get series sequence (sequence of pepeating items where each
 * item includes the attributes of one or more series) based on a given sopInstance.
 *
 * @param {Object} instance The sop instance
 * @returns {Promise} Referenced series sequence
 */

var getReferencedSeriesSequence = function getReferencedSeriesSequence(instance) {
  var referencedSeriesSequenceRaw = instance['00081115'];
  var referencedSeriesSequence = [];

  if (referencedSeriesSequenceRaw && referencedSeriesSequenceRaw.Value) {
    referencedSeriesSequenceRaw.Value.forEach(function (referencedSeries) {
      var referencedSeriesInstanceUID = _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__["default"].getString(referencedSeries['0020000E']);
      var referencedInstanceSequenceRaw = referencedSeries['0008114A'];
      var referencedInstanceSequence = [];
      referencedInstanceSequenceRaw.Value.forEach(function (referencedInstance) {
        referencedInstanceSequence.push({
          referencedSOPClassUID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__["default"].getString(referencedInstance['00081150']),
          referencedSOPInstanceUID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_0__["default"].getString(referencedInstance['00081155'])
        });
      });
      referencedSeriesSequence.push({
        referencedSeriesInstanceUID: referencedSeriesInstanceUID,
        referencedInstanceSequence: referencedInstanceSequence
      });
    });
  }

  return referencedSeriesSequence;
};

/* harmony default export */ __webpack_exports__["default"] = (getReferencedSeriesSequence);

/***/ }),

/***/ "./studies/services/wado/retrieveMetadata.js":
/*!***************************************************!*\
  !*** ./studies/services/wado/retrieveMetadata.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _retrieveMetadataLoaderSync__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retrieveMetadataLoaderSync */ "./studies/services/wado/retrieveMetadataLoaderSync.js");
/* harmony import */ var _retrieveMetadataLoaderAsync__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retrieveMetadataLoaderAsync */ "./studies/services/wado/retrieveMetadataLoaderAsync.js");




/**
 * Retrieve Study metadata from a DICOM server. If the server is configured to use lazy load, only the first series
 * will be loaded and the property "studyLoader" will be set to let consumer load remaining series as needed.
 *
 * @param {Object} server Object with server configuration parameters
 * @param {string} StudyInstanceUID The Study Instance UID of the study which needs to be loaded
 * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process
 * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against
 * @returns {Object} A study descriptor object
 */

function RetrieveMetadata(_x, _x2) {
  return _RetrieveMetadata.apply(this, arguments);
}

function _RetrieveMetadata() {
  _RetrieveMetadata = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(server, StudyInstanceUID) {
    var filters,
        RetrieveMetadataLoader,
        retrieveMetadataLoader,
        studyMetadata,
        _args = arguments;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            filters = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};
            RetrieveMetadataLoader = server.enableStudyLazyLoad !== false ? _retrieveMetadataLoaderAsync__WEBPACK_IMPORTED_MODULE_3__["default"] : _retrieveMetadataLoaderSync__WEBPACK_IMPORTED_MODULE_2__["default"];
            retrieveMetadataLoader = new RetrieveMetadataLoader(server, StudyInstanceUID, filters);
            studyMetadata = retrieveMetadataLoader.execLoad();
            return _context.abrupt("return", studyMetadata);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _RetrieveMetadata.apply(this, arguments);
}

/* harmony default export */ __webpack_exports__["default"] = (RetrieveMetadata);

/***/ }),

/***/ "./studies/services/wado/retrieveMetadataLoader.js":
/*!*********************************************************!*\
  !*** ./studies/services/wado/retrieveMetadataLoader.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RetrieveMetadataLoader; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);





function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(n); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/**
 * Class to define inheritance of load retrieve strategy.
 * The process can be async load (lazy) or sync load
 *
 * There are methods that must be implemented at consumer level
 * To retrieve study call execLoad
 */
var RetrieveMetadataLoader = /*#__PURE__*/function () {
  /**
   * @constructor
   * @param {Object} server Object with server configuration parameters
   * @param {Array} studyInstanceUID Study instance ui to be retrieved
   * @param {Object} [filters] - Object containing filters to be applied on retrieve metadata process
   * @param {string} [filter.seriesInstanceUID] - series instance uid to filter results against
   */
  function RetrieveMetadataLoader(server, studyInstanceUID) {
    var filters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, RetrieveMetadataLoader);

    this.server = server;
    this.studyInstanceUID = studyInstanceUID;
    this.filters = filters;
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(RetrieveMetadataLoader, [{
    key: "execLoad",
    value: function () {
      var _execLoad = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {
        var preLoadData, loadData, postLoadData;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.configLoad();

              case 2:
                _context.next = 4;
                return this.preLoad();

              case 4:
                preLoadData = _context.sent;
                _context.next = 7;
                return this.load(preLoadData);

              case 7:
                loadData = _context.sent;
                _context.next = 10;
                return this.posLoad(loadData);

              case 10:
                postLoadData = _context.sent;
                return _context.abrupt("return", postLoadData);

              case 12:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function execLoad() {
        return _execLoad.apply(this, arguments);
      }

      return execLoad;
    }()
    /**
     * It iterates over given loaders running each one. Loaders parameters must be bind when getting it.
     * @param {Array} loaders - array of loader to retrieve data.
     */

  }, {
    key: "runLoaders",
    value: function () {
      var _runLoaders = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(loaders) {
        var result, _iterator, _step, loader;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _iterator = _createForOfIteratorHelper(loaders);
                _context2.prev = 1;

                _iterator.s();

              case 3:
                if ((_step = _iterator.n()).done) {
                  _context2.next = 18;
                  break;
                }

                loader = _step.value;
                _context2.prev = 5;
                _context2.next = 8;
                return loader();

              case 8:
                result = _context2.sent;

                if (!(result && result.length)) {
                  _context2.next = 11;
                  break;
                }

                return _context2.abrupt("break", 18);

              case 11:
                _context2.next = 16;
                break;

              case 13:
                _context2.prev = 13;
                _context2.t0 = _context2["catch"](5);
                throw _context2.t0;

              case 16:
                _context2.next = 3;
                break;

              case 18:
                _context2.next = 23;
                break;

              case 20:
                _context2.prev = 20;
                _context2.t1 = _context2["catch"](1);

                _iterator.e(_context2.t1);

              case 23:
                _context2.prev = 23;

                _iterator.f();

                return _context2.finish(23);

              case 26:
                if (!(loaders.next().done && !result)) {
                  _context2.next = 28;
                  break;
                }

                throw new Error('RetrieveMetadataLoader failed');

              case 28:
                return _context2.abrupt("return", result);

              case 29:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, null, [[1, 20, 23, 26], [5, 13]]);
      }));

      function runLoaders(_x) {
        return _runLoaders.apply(this, arguments);
      }

      return runLoaders;
    }() // Methods to be overwrite

  }, {
    key: "configLoad",
    value: function () {
      var _configLoad = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));

      function configLoad() {
        return _configLoad.apply(this, arguments);
      }

      return configLoad;
    }()
  }, {
    key: "preLoad",
    value: function () {
      var _preLoad = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      function preLoad() {
        return _preLoad.apply(this, arguments);
      }

      return preLoad;
    }()
  }, {
    key: "load",
    value: function () {
      var _load = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(preLoadData) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5);
      }));

      function load(_x2) {
        return _load.apply(this, arguments);
      }

      return load;
    }()
  }, {
    key: "posLoad",
    value: function () {
      var _posLoad = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6(loadData) {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6);
      }));

      function posLoad(_x3) {
        return _posLoad.apply(this, arguments);
      }

      return posLoad;
    }()
  }]);

  return RetrieveMetadataLoader;
}();



/***/ }),

/***/ "./studies/services/wado/retrieveMetadataLoaderAsync.js":
/*!**************************************************************!*\
  !*** ./studies/services/wado/retrieveMetadataLoaderAsync.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RetrieveMetadataLoaderAsync; });
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb___WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../DICOMWeb/ */ "./DICOMWeb/index.js");
/* harmony import */ var _retrieveMetadataLoader__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./retrieveMetadataLoader */ "./studies/services/wado/retrieveMetadataLoader.js");
/* harmony import */ var _sortStudy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../sortStudy */ "./studies/sortStudy.js");
/* harmony import */ var _getSeriesInfo__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../getSeriesInfo */ "./studies/getSeriesInfo.js");
/* harmony import */ var _studyInstanceHelpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./studyInstanceHelpers */ "./studies/services/wado/studyInstanceHelpers.js");








function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }







/**
 * Map series to an array of SeriesInstanceUID
 * @param {Arrays} series list of Series Instance UIDs
 * @returns {Arrays} A list of Series Instance UIDs
 */

function mapStudySeries(series) {
  return series.map(function (series) {
    return Object(_getSeriesInfo__WEBPACK_IMPORTED_MODULE_11__["default"])(series).SeriesInstanceUID;
  });
}

function attachSeriesLoader(server, study, seriesLoader) {
  study.seriesLoader = Object.freeze({
    hasNext: function hasNext() {
      return seriesLoader.hasNext();
    },
    next: function next() {
      return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee() {
        var series;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return seriesLoader.next();

              case 2:
                series = _context.sent;
                _context.next = 5;
                return Object(_studyInstanceHelpers__WEBPACK_IMPORTED_MODULE_12__["addInstancesToStudy"])(server, study, series.sopInstances, study.StudyInstanceUID);

              case 5:
                return _context.abrupt("return", study.seriesMap[series.seriesInstanceUID]);

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  });
}
/**
 * Creates an immutable series loader object which loads each series sequentially using the iterator interface
 * @param {DICOMWebClient} dicomWebClient The DICOMWebClient instance to be used for series load
 * @param {string} studyInstanceUID The Study Instance UID from which series will be loaded
 * @param {Array} seriesInstanceUIDList A list of Series Instance UIDs
 * @returns {Object} Returns an object which supports loading of instances from each of given Series Instance UID
 */


function makeSeriesAsyncLoader(dicomWebClient, studyInstanceUID, seriesInstanceUIDList) {
  return Object.freeze({
    hasNext: function hasNext() {
      return seriesInstanceUIDList.length > 0;
    },
    next: function next() {
      return _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee2() {
        var seriesInstanceUID, sopInstances;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                seriesInstanceUID = seriesInstanceUIDList.shift();
                _context2.next = 3;
                return dicomWebClient.retrieveSeriesMetadata({
                  studyInstanceUID: studyInstanceUID,
                  seriesInstanceUID: seriesInstanceUID
                });

              case 3:
                sopInstances = _context2.sent;
                return _context2.abrupt("return", {
                  studyInstanceUID: studyInstanceUID,
                  seriesInstanceUID: seriesInstanceUID,
                  sopInstances: sopInstances
                });

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    }
  });
}
/**
 * Class for async load of study metadata.
 * It inherits from RetrieveMetadataLoader
 *
 * It loads the one series and then append to seriesLoader the others to be consumed/loaded
 */


var RetrieveMetadataLoaderAsync = /*#__PURE__*/function (_RetrieveMetadataLoad) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_2___default()(RetrieveMetadataLoaderAsync, _RetrieveMetadataLoad);

  var _super = _createSuper(RetrieveMetadataLoaderAsync);

  function RetrieveMetadataLoaderAsync() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default()(this, RetrieveMetadataLoaderAsync);

    return _super.apply(this, arguments);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_1___default()(RetrieveMetadataLoaderAsync, [{
    key: "configLoad",
    value: function configLoad() {
      var server = this.server;
      var client = new dicomweb_client__WEBPACK_IMPORTED_MODULE_7__["api"].DICOMwebClient({
        url: server.qidoRoot,
        headers: _DICOMWeb___WEBPACK_IMPORTED_MODULE_8__["default"].getAuthorizationHeader(server)
      });
      this.client = client;
    }
    /**
     * @returns {Array} Array of preLoaders. To be consumed as queue
     */

  }, {
    key: "getPreLoaders",
    value: /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function getPreLoaders() {
      var preLoaders, studyInstanceUID, _this$filters, seriesInstanceUID, client, options;

      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function getPreLoaders$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              preLoaders = [];
              studyInstanceUID = this.studyInstanceUID, _this$filters = this.filters;
              _this$filters = _this$filters === void 0 ? {} : _this$filters;
              seriesInstanceUID = _this$filters.seriesInstanceUID, client = this.client;

              if (seriesInstanceUID) {
                options = {
                  studyInstanceUID: studyInstanceUID,
                  queryParams: {
                    SeriesInstanceUID: seriesInstanceUID
                  }
                };
                preLoaders.push(client.searchForSeries.bind(client, options));
              } // Fallback preloader


              preLoaders.push(client.searchForSeries.bind(client, {
                studyInstanceUID: studyInstanceUID
              }));
              return _context3.delegateYield(preLoaders, "t0", 7);

            case 7:
            case "end":
              return _context3.stop();
          }
        }
      }, getPreLoaders, this);
    })
  }, {
    key: "preLoad",
    value: function () {
      var _preLoad = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee3() {
        var preLoaders, result, seriesSorted, seriesInstanceUIDsMap;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee3$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                preLoaders = this.getPreLoaders();
                _context4.next = 3;
                return this.runLoaders(preLoaders);

              case 3:
                result = _context4.sent;
                seriesSorted = Object(_sortStudy__WEBPACK_IMPORTED_MODULE_10__["sortStudySeries"])(result, _sortStudy__WEBPACK_IMPORTED_MODULE_10__["sortingCriteria"].seriesSortCriteria.seriesInfoSortingCriteria);
                seriesInstanceUIDsMap = mapStudySeries(seriesSorted);
                return _context4.abrupt("return", seriesInstanceUIDsMap);

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee3, this);
      }));

      function preLoad() {
        return _preLoad.apply(this, arguments);
      }

      return preLoad;
    }()
  }, {
    key: "load",
    value: function () {
      var _load = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee4(preLoadData) {
        var client, studyInstanceUID, seriesAsyncLoader, firstSeries;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee4$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                client = this.client, studyInstanceUID = this.studyInstanceUID;
                seriesAsyncLoader = makeSeriesAsyncLoader(client, studyInstanceUID, preLoadData);
                _context5.next = 4;
                return seriesAsyncLoader.next();

              case 4:
                firstSeries = _context5.sent;
                return _context5.abrupt("return", {
                  sopInstances: firstSeries.sopInstances,
                  asyncLoader: seriesAsyncLoader
                });

              case 6:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee4, this);
      }));

      function load(_x) {
        return _load.apply(this, arguments);
      }

      return load;
    }()
  }, {
    key: "posLoad",
    value: function () {
      var _posLoad = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.mark(function _callee5(loadData) {
        var server, studyInstanceUID, sopInstances, asyncLoader, study;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_5___default.a.wrap(function _callee5$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                server = this.server, studyInstanceUID = this.studyInstanceUID;
                sopInstances = loadData.sopInstances, asyncLoader = loadData.asyncLoader;
                _context6.next = 4;
                return Object(_studyInstanceHelpers__WEBPACK_IMPORTED_MODULE_12__["createStudyFromSOPInstanceList"])(server, sopInstances, studyInstanceUID);

              case 4:
                study = _context6.sent;

                if (asyncLoader.hasNext()) {
                  attachSeriesLoader(server, study, asyncLoader);
                }

                return _context6.abrupt("return", study);

              case 7:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee5, this);
      }));

      function posLoad(_x2) {
        return _posLoad.apply(this, arguments);
      }

      return posLoad;
    }()
  }]);

  return RetrieveMetadataLoaderAsync;
}(_retrieveMetadataLoader__WEBPACK_IMPORTED_MODULE_9__["default"]);



/***/ }),

/***/ "./studies/services/wado/retrieveMetadataLoaderSync.js":
/*!*************************************************************!*\
  !*** ./studies/services/wado/retrieveMetadataLoaderSync.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return RetrieveMetadataLoaderSync; });
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/inherits */ "../node_modules/@babel/runtime/helpers/inherits.js");
/* harmony import */ var _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ "../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js");
/* harmony import */ var _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ "../node_modules/@babel/runtime/helpers/getPrototypeOf.js");
/* harmony import */ var _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb___WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../DICOMWeb/ */ "./DICOMWeb/index.js");
/* harmony import */ var _studyInstanceHelpers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./studyInstanceHelpers */ "./studies/services/wado/studyInstanceHelpers.js");
/* harmony import */ var _retrieveMetadataLoader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./retrieveMetadataLoader */ "./studies/services/wado/retrieveMetadataLoader.js");








function _createSuper(Derived) { return function () { var Super = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6___default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5___default()(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }





/**
 * Class for sync load of study metadata.
 * It inherits from RetrieveMetadataLoader
 *
 * A list of loaders (getLoaders) can be created so, it will be applied a fallback load strategy.
 * I.e Retrieve metadata using all loaders possibilities.
 */

var RetrieveMetadataLoaderSync = /*#__PURE__*/function (_RetrieveMetadataLoad) {
  _babel_runtime_helpers_inherits__WEBPACK_IMPORTED_MODULE_4___default()(RetrieveMetadataLoaderSync, _RetrieveMetadataLoad);

  var _super = _createSuper(RetrieveMetadataLoaderSync);

  function RetrieveMetadataLoaderSync() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, RetrieveMetadataLoaderSync);

    return _super.apply(this, arguments);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(RetrieveMetadataLoaderSync, [{
    key: "getOptions",
    value: function getOptions() {
      var studyInstanceUID = this.studyInstanceUID,
          filters = this.filters;
      var options = {
        studyInstanceUID: studyInstanceUID
      };
      var seriesInstanceUID = filters.seriesInstanceUID;

      if (seriesInstanceUID) {
        options['seriesInstanceUID'] = seriesInstanceUID;
      }

      return options;
    }
    /**
     * @returns {Array} Array of loaders. To be consumed as queue
     */

  }, {
    key: "getLoaders",
    value: /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function getLoaders() {
      var loaders, studyInstanceUID, _this$filters, seriesInstanceUID, client;

      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function getLoaders$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              loaders = [];
              studyInstanceUID = this.studyInstanceUID, _this$filters = this.filters;
              _this$filters = _this$filters === void 0 ? {} : _this$filters;
              seriesInstanceUID = _this$filters.seriesInstanceUID, client = this.client;

              if (seriesInstanceUID) {
                loaders.push(client.retrieveSeriesMetadata.bind(client, {
                  studyInstanceUID: studyInstanceUID,
                  seriesInstanceUID: seriesInstanceUID
                }));
              }

              loaders.push(client.retrieveStudyMetadata.bind(client, {
                studyInstanceUID: studyInstanceUID
              }));
              return _context.delegateYield(loaders, "t0", 7);

            case 7:
            case "end":
              return _context.stop();
          }
        }
      }, getLoaders, this);
    })
  }, {
    key: "configLoad",
    value: function configLoad() {
      var server = this.server;
      var client = new dicomweb_client__WEBPACK_IMPORTED_MODULE_7__["api"].DICOMwebClient({
        url: server.wadoRoot,
        headers: _DICOMWeb___WEBPACK_IMPORTED_MODULE_8__["default"].getAuthorizationHeader(server)
      });
      this.client = client;
    }
  }, {
    key: "load",
    value: function () {
      var _load = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(preLoadData) {
        var loaders, result;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                loaders = this.getLoaders();
                result = this.runLoaders(loaders);
                return _context2.abrupt("return", result);

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee, this);
      }));

      function load(_x) {
        return _load.apply(this, arguments);
      }

      return load;
    }()
  }, {
    key: "posLoad",
    value: function () {
      var _posLoad = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2(loadData) {
        var server, studyInstanceUID;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                server = this.server, studyInstanceUID = this.studyInstanceUID;
                return _context3.abrupt("return", Object(_studyInstanceHelpers__WEBPACK_IMPORTED_MODULE_9__["createStudyFromSOPInstanceList"])(server, loadData, studyInstanceUID));

              case 2:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee2, this);
      }));

      function posLoad(_x2) {
        return _posLoad.apply(this, arguments);
      }

      return posLoad;
    }()
  }]);

  return RetrieveMetadataLoaderSync;
}(_retrieveMetadataLoader__WEBPACK_IMPORTED_MODULE_10__["default"]);



/***/ }),

/***/ "./studies/services/wado/studyInstanceHelpers.js":
/*!*******************************************************!*\
  !*** ./studies/services/wado/studyInstanceHelpers.js ***!
  \*******************************************************/
/*! exports provided: createStudyFromSOPInstanceList, addInstancesToStudy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createStudyFromSOPInstanceList", function() { return createStudyFromSOPInstanceList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addInstancesToStudy", function() { return addInstancesToStudy; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../DICOMWeb */ "./DICOMWeb/index.js");
/* harmony import */ var _classes_MetadataProvider__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../classes/MetadataProvider */ "./classes/MetadataProvider.js");
/* harmony import */ var _utils_getWADORSImageId__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../utils/getWADORSImageId */ "./utils/getWADORSImageId.js");
/* harmony import */ var _getReferencedSeriesSequence__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getReferencedSeriesSequence */ "./studies/services/wado/getReferencedSeriesSequence.js");
/* harmony import */ var _utils_cornerstoneWADOImageLoader__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../utils/cornerstoneWADOImageLoader */ "./utils/cornerstoneWADOImageLoader.js");






 // Modified by TungLT

/**
 * Create a plain JS object that describes a study (a study descriptor object)
 * @param {Object} server Object with server configuration parameters
 * @param {Object} aSopInstance a SOP Instance from which study information will be added
 * @param {String} studyInstanceUID of study, need to replace dicom tag of instance - iTech's security
 */

function createStudy(server, aSopInstance, studyInstanceUID) {
  // TODO: Pass a reference ID to the server instead of including the URLs here
  return {
    series: [],
    seriesMap: Object.create(null),
    seriesLoader: null,
    wadoUriRoot: server.wadoUriRoot,
    wadoRoot: server.wadoRoot,
    qidoRoot: server.qidoRoot,
    PatientName: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getName(aSopInstance['00100010']),
    PatientID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00100020']),
    PatientAge: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getNumber(aSopInstance['00101010']),
    PatientSize: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getNumber(aSopInstance['00101020']),
    PatientWeight: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getNumber(aSopInstance['00101030']),
    AccessionNumber: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00080050']),
    StudyTime: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00080030']),
    StudyDate: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00080020']),
    FrameOfReferenceUID: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00200052']),
    ReferencedSeriesSequence: Object(_getReferencedSeriesSequence__WEBPACK_IMPORTED_MODULE_5__["default"])(aSopInstance),
    modalities: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00080061']),
    // TODO -> Rename this.. it'll take a while to not mess this one up.
    StudyDescription: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00081030']),
    NumberOfStudyRelatedInstances: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00201208']),
    StudyInstanceUID: studyInstanceUID || _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['0020000D']),
    InstitutionName: _DICOMWeb__WEBPACK_IMPORTED_MODULE_2__["default"].getString(aSopInstance['00080080'])
  };
}
/** Returns a WADO url for an instance
 *
 * @param StudyInstanceUID
 * @param SeriesInstanceUID
 * @param SOPInstanceUID
 * @returns  {string}
 */


function buildInstanceWadoUrl(server, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) {
  // TODO: This can be removed, since DICOMWebClient has the same function. Not urgent, though
  var params = [];
  params.push('requestType=WADO');
  params.push("studyUID=".concat(StudyInstanceUID));
  params.push("seriesUID=".concat(SeriesInstanceUID));
  params.push("objectUID=".concat(SOPInstanceUID));
  params.push('contentType=application/dicom');
  params.push('transferSyntax=*');
  var paramString = params.join('&');
  return "".concat(server.wadoUriRoot, "?").concat(paramString);
}

function buildInstanceWadoRsUri(server, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID) {
  return "".concat(server.wadoRoot, "/studies/").concat(StudyInstanceUID, "/series/").concat(SeriesInstanceUID, "/instances/").concat(SOPInstanceUID);
}

function buildInstanceFrameWadoRsUri(server, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, frame) {
  var baseWadoRsUri = buildInstanceWadoRsUri(server, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID);
  frame = frame != null || 1;
  return "".concat(baseWadoRsUri, "/frames/").concat(frame);
}

function makeSOPInstance(_x, _x2, _x3) {
  return _makeSOPInstance.apply(this, arguments);
}
/**
 * Add a list of SOP Instances to a given study object descriptor
 * @param {Object} server Object with server configuration parameters
 * @param {Object} study The study descriptor to which the given SOP instances will be added
 * @param {Array} sopInstanceList A list of SOP instance objects
 */


function _makeSOPInstance() {
  _makeSOPInstance = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(server, study, instance) {
    var naturalizedInstance, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, series, wadouri, baseWadoRsUri, wadorsuri, sopInstance, wadoRSMetadata, cornerstoneWADOImageLoader, NumberOfFrames, i, wadorsImageId, _wadorsImageId;

    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return _classes_MetadataProvider__WEBPACK_IMPORTED_MODULE_3__["default"].addInstance(instance, {
              server: server,
              StudyInstanceUID: study.StudyInstanceUID
            });

          case 2:
            naturalizedInstance = _context2.sent;
            StudyInstanceUID = naturalizedInstance.StudyInstanceUID, SeriesInstanceUID = naturalizedInstance.SeriesInstanceUID, SOPInstanceUID = naturalizedInstance.SOPInstanceUID;
            series = study.seriesMap[SeriesInstanceUID];

            if (!series) {
              series = {
                SeriesInstanceUID: SeriesInstanceUID,
                SeriesDescription: naturalizedInstance.SeriesDescription,
                Modality: naturalizedInstance.Modality,
                SeriesNumber: naturalizedInstance.SeriesNumber,
                SeriesDate: naturalizedInstance.SeriesDate,
                SeriesTime: naturalizedInstance.SeriesTime,
                instances: []
              };
              study.seriesMap[SeriesInstanceUID] = series;
              study.series.push(series);
            }

            wadouri = buildInstanceWadoUrl(server, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID);
            baseWadoRsUri = buildInstanceWadoRsUri(server, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID);
            wadorsuri = buildInstanceFrameWadoRsUri(server, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID);
            sopInstance = {
              metadata: naturalizedInstance,
              baseWadoRsUri: baseWadoRsUri,
              wadouri: wadouri,
              wadorsuri: wadorsuri,
              wadoRoot: server.wadoRoot,
              imageRendering: server.imageRendering,
              thumbnailRendering: server.thumbnailRendering
            };
            series.instances.push(sopInstance);

            if (!(sopInstance.thumbnailRendering === 'wadors' || sopInstance.imageRendering === 'wadors')) {
              _context2.next = 18;
              break;
            }

            // If using WADO-RS for either images or thumbnails,
            // Need to add this to cornerstoneWADOImageLoader's provider
            // (it won't be hit on cornerstone.metaData.get, but cornerstoneWADOImageLoader
            // will cry if you don't add data to cornerstoneWADOImageLoader.wadors.metaDataManager).
            wadoRSMetadata = Object.assign(instance);
            _context2.next = 15;
            return Object(_utils_cornerstoneWADOImageLoader__WEBPACK_IMPORTED_MODULE_6__["getCornerstoneWADOImageLoader"])();

          case 15:
            cornerstoneWADOImageLoader = _context2.sent;
            NumberOfFrames = sopInstance.metadata.NumberOfFrames;

            if (NumberOfFrames) {
              for (i = 0; i < NumberOfFrames; i++) {
                wadorsImageId = Object(_utils_getWADORSImageId__WEBPACK_IMPORTED_MODULE_4__["default"])(sopInstance, i);
                cornerstoneWADOImageLoader.wadors.metaDataManager.add(wadorsImageId, wadoRSMetadata);
              }
            } else {
              _wadorsImageId = Object(_utils_getWADORSImageId__WEBPACK_IMPORTED_MODULE_4__["default"])(sopInstance);
              cornerstoneWADOImageLoader.wadors.metaDataManager.add(_wadorsImageId, wadoRSMetadata);
            }

          case 18:
            return _context2.abrupt("return", sopInstance);

          case 19:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _makeSOPInstance.apply(this, arguments);
}

function addInstancesToStudy(_x4, _x5, _x6) {
  return _addInstancesToStudy.apply(this, arguments);
}

function _addInstancesToStudy() {
  _addInstancesToStudy = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(server, study, sopInstanceList) {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            return _context3.abrupt("return", Promise.all(sopInstanceList.map(function (sopInstance) {
              return makeSOPInstance(server, study, sopInstance);
            })));

          case 1:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3);
  }));
  return _addInstancesToStudy.apply(this, arguments);
}

var createStudyFromSOPInstanceList = /*#__PURE__*/function () {
  var _ref = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(server, sopInstanceList, studyInstanceUID) {
    var firstSopInstance, study;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!(Array.isArray(sopInstanceList) && sopInstanceList.length > 0)) {
              _context.next = 6;
              break;
            }

            firstSopInstance = sopInstanceList[0];
            study = createStudy(server, firstSopInstance, studyInstanceUID);
            _context.next = 5;
            return addInstancesToStudy(server, study, sopInstanceList);

          case 5:
            return _context.abrupt("return", study);

          case 6:
            throw new Error('Failed to create study out of provided SOP instance list');

          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function createStudyFromSOPInstanceList(_x7, _x8, _x9) {
    return _ref.apply(this, arguments);
  };
}();



/***/ }),

/***/ "./studies/sortStudy.js":
/*!******************************!*\
  !*** ./studies/sortStudy.js ***!
  \******************************/
/*! exports provided: default, sortStudySeries, sortStudyInstances, sortingCriteria */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sortStudy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortStudySeries", function() { return sortStudySeries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortStudyInstances", function() { return sortStudyInstances; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sortingCriteria", function() { return sortingCriteria; });
/* harmony import */ var _getSeriesInfo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getSeriesInfo */ "./studies/getSeriesInfo.js");

/**
 * Series sorting criteria: series considered low priority are moved to the end
 * of the list and series number is used to break ties
 * @param {Object} firstSeries
 * @param {Object} secondSeries
 */

function seriesInfoSortingCriteria(firstSeries, secondSeries) {
  var a = Object(_getSeriesInfo__WEBPACK_IMPORTED_MODULE_0__["default"])(firstSeries);
  var b = Object(_getSeriesInfo__WEBPACK_IMPORTED_MODULE_0__["default"])(secondSeries);

  if (!a.isLowPriority && b.isLowPriority) {
    return -1;
  }

  if (a.isLowPriority && !b.isLowPriority) {
    return 1;
  }

  return a.SeriesNumber - b.SeriesNumber;
}

var seriesSortCriteria = {
  "default": function _default(a, b) {
    return a.SeriesNumber - b.SeriesNumber;
  },
  seriesInfoSortingCriteria: seriesInfoSortingCriteria
};
var instancesSortCriteria = {
  "default": function _default(a, b) {
    return a.InstanceNumber - b.InstanceNumber;
  }
};
var sortingCriteria = {
  seriesSortCriteria: seriesSortCriteria,
  instancesSortCriteria: instancesSortCriteria
};
/**
 * Sorts given series (given param is modified)
 * The default criteria is based on series number in ascending order.
 *
 * @param {Array} series List of series
 * @param {function} seriesSortingCriteria method for sorting
 * @returns {Array} sorted series object
 */

var sortStudySeries = function sortStudySeries(series) {
  var seriesSortingCriteria = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seriesSortCriteria["default"];
  return series.sort(seriesSortingCriteria);
};
/**
 * Sorts given instancesList (given param is modified)
 * The default criteria is based on instance number in ascending order.
 *
 * @param {Array} instancesList List of series
 * @param {function} instancesSortingCriteria method for sorting
 * @returns {Array} sorted instancesList object
 */


var sortStudyInstances = function sortStudyInstances(instancesList) {
  var instancesSortingCriteria = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : instancesSortCriteria["default"];
  return instancesList.sort(instancesSortingCriteria);
};
/**
 * Sorts the series and instances (by default) inside a study instance based on sortingCriteria (given param is modified)
 * The default criteria is based on series and instance numbers in ascending order.
 *
 * @param {Object} study The study instance
 * @param {boolean} [deepSort = true] to sort instance also
 * @param {function} [seriesSortingCriteria = seriesSortCriteria.default] method for sorting series
 * @param {function} [instancesSortingCriteria = instancesSortCriteria.default] method for sorting instances
 * @returns {Object} sorted study object
 */


function sortStudy(study) {
  var deepSort = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var seriesSortingCriteria = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : seriesSortCriteria["default"];
  var instancesSortingCriteria = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : instancesSortCriteria["default"];

  if (!study || !study.series) {
    throw new Error('Insufficient study data was provided to sortStudy');
  }

  sortStudySeries(study.series, seriesSortingCriteria);

  if (deepSort) {
    study.series.forEach(function (series) {
      sortStudyInstances(series.instances, instancesSortingCriteria);
    });
  }

  return study;
}


/***/ }),

/***/ "./ui/getOffset.js":
/*!*************************!*\
  !*** ./ui/getOffset.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getOffset; });
/**
 * Get the offset for the given element
 *
 * @param {Object} element DOM element which will have the offser calculated
 * @returns {Object} Object containing the top and left offset
 */
function getOffset(element) {
  var top = 0;
  var left = 0;

  if (element.offsetParent) {
    do {
      left += element.offsetLeft;
      top += element.offsetTop;
    } while (element = element.offsetParent);
  }

  return {
    left: left,
    top: top
  };
}

/***/ }),

/***/ "./ui/getScrollbarSize.js":
/*!********************************!*\
  !*** ./ui/getScrollbarSize.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getScrollbarSize; });
/**
 * Get the vertical and horizontal scrollbar sizes
 * Got from https://stackoverflow.com/questions/986937/how-can-i-get-the-browsers-scrollbar-sizes
 *
 * @returns {Array} Array containing the scrollbar horizontal and vertical sizes
 */
function getScrollbarSize() {
  var inner = document.createElement('p');
  inner.style.width = '100%';
  inner.style.height = '100%';
  var outer = document.createElement('div');
  outer.style.position = 'absolute';
  outer.style.top = '0px';
  outer.style.left = '0px';
  outer.style.visibility = 'hidden';
  outer.style.width = '100px';
  outer.style.height = '100px';
  outer.style.overflow = 'hidden';
  outer.appendChild(inner);
  document.body.appendChild(outer);
  var w1 = inner.offsetWidth;
  var h1 = inner.offsetHeight;
  outer.style.overflow = 'scroll';
  var w2 = inner.offsetWidth;
  var h2 = inner.offsetHeight;

  if (w1 === w2) {
    w2 = outer.clientWidth;
  }

  if (h1 === h2) {
    h2 = outer.clientHeight;
  }

  document.body.removeChild(outer);
  return [w1 - w2, h1 - h2];
}

/***/ }),

/***/ "./ui/handleError.js":
/*!***************************!*\
  !*** ./ui/handleError.js ***!
  \***************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return handleError; });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/defineProperty */ "../node_modules/@babel/runtime/helpers/defineProperty.js");
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../log */ "./log.js");


function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }


function handleError(error) {
  var title = error.title,
      message = error.message;

  if (!title) {
    if (error instanceof Error) {
      title = error.name;
    }
  }

  if (!message) {
    if (error instanceof Error) {
      message = error.message;
    }
  }

  var data = _objectSpread({
    title: title,
    message: message,
    "class": 'themed',
    hideConfirm: true,
    cancelLabel: 'Dismiss',
    cancelClass: 'btn-secondary'
  }, error || {});

  _log__WEBPACK_IMPORTED_MODULE_1__["default"].error(error); // TODO: Find a better way to handle errors instead of displaying a dialog for all of them.
  // OHIF.ui.showDialog('dialogForm', data);
}

/***/ }),

/***/ "./ui/index.js":
/*!*********************!*\
  !*** ./ui/index.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _handleError__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handleError */ "./ui/handleError.js");
/* harmony import */ var _isCharacterKeyPress__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isCharacterKeyPress */ "./ui/isCharacterKeyPress.js");
/* harmony import */ var _getOffset__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getOffset */ "./ui/getOffset.js");
/* harmony import */ var _getScrollbarSize__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getScrollbarSize */ "./ui/getScrollbarSize.js");





var ui = {
  getScrollbarSize: _getScrollbarSize__WEBPACK_IMPORTED_MODULE_3__["default"],
  getOffset: _getOffset__WEBPACK_IMPORTED_MODULE_2__["default"],
  isCharacterKeyPress: _isCharacterKeyPress__WEBPACK_IMPORTED_MODULE_1__["default"],
  handleError: _handleError__WEBPACK_IMPORTED_MODULE_0__["default"]
};
/* harmony default export */ __webpack_exports__["default"] = (ui);

/***/ }),

/***/ "./ui/isCharacterKeyPress.js":
/*!***********************************!*\
  !*** ./ui/isCharacterKeyPress.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isCharacterKeyPress; });
/**
 * Check if the pressed key combination will result in a character input
 * Got from https://stackoverflow.com/questions/4179708/how-to-detect-if-the-pressed-key-will-produce-a-character-inside-an-input-text
 *
 * @returns {Boolean} Whether the pressed key combination will input a character or not
 */
function isCharacterKeyPress(event) {
  if (typeof event.which === 'undefined') {
    // This is IE, which only fires keypress events for printable keys
    return true;
  }

  if (typeof event.which === 'number' && event.which > 0) {
    // In other browsers except old versions of WebKit, event.which is
    // only greater than zero if the keypress is a printable key.
    // We need to filter out backspace and ctrl/alt/meta key combinations
    return !event.ctrlKey && !event.metaKey && !event.altKey && event.which !== 8;
  }

  return false;
}

/***/ }),

/***/ "./user.js":
/*!*****************!*\
  !*** ./user.js ***!
  \*****************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// These should be overridden by the implementation
var user = {
  userLoggedIn: function userLoggedIn() {
    return false;
  },
  getUserId: function getUserId() {
    return null;
  },
  getName: function getName() {
    return null;
  },
  getAccessToken: function getAccessToken() {
    return null;
  },
  login: function login() {
    return new Promise(function (resolve, reject) {
      return reject();
    });
  },
  logout: function logout() {
    return new Promise(function (resolve, reject) {
      return reject();
    });
  },
  getData: function getData(key) {
    return null;
  },
  setData: function setData(key, value) {
    return null;
  }
};
/* harmony default export */ __webpack_exports__["default"] = (user);

/***/ }),

/***/ "./utils/StackManager.js":
/*!*******************************!*\
  !*** ./utils/StackManager.js ***!
  \*******************************/
/*! exports provided: StackManager, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StackManager", function() { return StackManager; });
/* harmony import */ var _classes_OHIFError_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../classes/OHIFError.js */ "./classes/OHIFError.js");
/* harmony import */ var _getImageId__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getImageId */ "./utils/getImageId.js");
/* harmony import */ var _classes_MetadataProvider_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../classes/MetadataProvider.js */ "./classes/MetadataProvider.js");



var stackMap = {};
var configuration = {};
var stackUpdatedCallbacks = [];
/**
 * Loop through the current series and add metadata to the
 * Cornerstone meta data provider. This will be used to fill information
 * into the viewport overlays, and to calculate reference lines and orientation markers
 * @param  {Object} stackMap              stackMap object
 * @param  {Object} study                 Study object
 * @param  {Object} displaySet            The set of images to make the stack from
 * @return {Array}                        Array with image IDs
 */

function createAndAddStack(stackMap, study, displaySet, stackUpdatedCallbacks) {
  var images = displaySet.images;

  if (!images) {
    return;
  }

  var numImages = images.length;
  var imageIds = [];
  var imageId;
  displaySet.images.forEach(function (instance, imageIndex) {
    var image = instance.getData();
    var metaData = {
      instance: image,
      // in this context, instance will be the data of the InstanceMetadata object...
      series: displaySet,
      // TODO: Check this
      study: study,
      numImages: numImages,
      imageIndex: imageIndex + 1
    };
    var naturalizedInstance = instance.getData().metadata;
    var NumberOfFrames = naturalizedInstance.NumberOfFrames;

    if (NumberOfFrames > 1) {
      for (var i = 0; i < NumberOfFrames; i++) {
        metaData.frameNumber = i;
        imageId = Object(_getImageId__WEBPACK_IMPORTED_MODULE_1__["default"])(image, i);
        imageIds.push(imageId);
        var _instance$getData$met = instance.getData().metadata,
            StudyInstanceUID = _instance$getData$met.StudyInstanceUID,
            SeriesInstanceUID = _instance$getData$met.SeriesInstanceUID,
            SOPInstanceUID = _instance$getData$met.SOPInstanceUID;
        _classes_MetadataProvider_js__WEBPACK_IMPORTED_MODULE_2__["default"].addImageIdToUIDs(imageId, {
          StudyInstanceUID: StudyInstanceUID,
          SeriesInstanceUID: SeriesInstanceUID,
          SOPInstanceUID: SOPInstanceUID
        });
      }
    } else {
      metaData.frameNumber = 1;
      imageId = Object(_getImageId__WEBPACK_IMPORTED_MODULE_1__["default"])(image);
      imageIds.push(imageId);
      var _StudyInstanceUID = naturalizedInstance.StudyInstanceUID,
          _SeriesInstanceUID = naturalizedInstance.SeriesInstanceUID,
          _SOPInstanceUID = naturalizedInstance.SOPInstanceUID;
      _classes_MetadataProvider_js__WEBPACK_IMPORTED_MODULE_2__["default"].addImageIdToUIDs(imageId, {
        StudyInstanceUID: _StudyInstanceUID,
        SeriesInstanceUID: _SeriesInstanceUID,
        SOPInstanceUID: _SOPInstanceUID
      });
    }
  });
  var stack = {
    StudyInstanceUID: study.StudyInstanceUID,
    displaySetInstanceUID: displaySet.displaySetInstanceUID,
    imageIds: imageIds,
    frameRate: displaySet.frameRate,
    isClip: displaySet.isClip
  };
  stackMap[displaySet.displaySetInstanceUID] = stack;
  return stack;
}

configuration = {
  createAndAddStack: createAndAddStack
};
/**
 * This object contains all the functions needed for interacting with the stack manager.
 * Generally, findStack is the only function used. If you want to know when new stacks
 * come in, you can register a callback with addStackUpdatedCallback.
 */

var StackManager = {
  /**
  * Removes all current stacks
  */
  clearStacks: function clearStacks() {
    stackMap = {};
  },

  /**
  * Create a stack from an image set, as well as add in the metadata on a per image bases.
  * @param study The study who's metadata will be added
  * @param displaySet The set of images to make the stack from
  * @return {Array} Array with image IDs
  */
  makeAndAddStack: function makeAndAddStack(study, displaySet) {
    return configuration.createAndAddStack(stackMap, study, displaySet, stackUpdatedCallbacks);
  },

  /**
  * Find a stack from the currently created stacks.
  * @param displaySetInstanceUID The UID of the stack to find.
  * @returns {*} undefined if not found, otherwise the stack object is returned.
  */
  findStack: function findStack(displaySetInstanceUID) {
    return stackMap[displaySetInstanceUID];
  },

  /**
  * Find a stack or reate one if it has not been created yet
  * @param study The study who's metadata will be added
  * @param displaySet The set of images to make the stack from
  * @return {Array} Array with image IDs
  */
  findOrCreateStack: function findOrCreateStack(study, displaySet) {
    var stack = this.findStack(displaySet.displaySetInstanceUID);

    if (!stack || !stack.imageIds) {
      stack = this.makeAndAddStack(study, displaySet);
    }

    return stack;
  },

  /**
  * Gets the underlying map of displaySetInstanceUID to stack object.
  * WARNING: Do not change this object. It directly affects the manager.
  * @returns {{}} map of displaySetInstanceUID -> stack.
  */
  getAllStacks: function getAllStacks() {
    return stackMap;
  },

  /**
  * Adds in a callback to be called on a stack being added / updated.
  * @param callback must accept at minimum one argument,
  * which is the stack that was added / updated.
  */
  addStackUpdatedCallback: function addStackUpdatedCallback(callback) {
    if (typeof callback !== 'function') {
      throw new _classes_OHIFError_js__WEBPACK_IMPORTED_MODULE_0__["default"]('callback must be provided as a function');
    }

    stackUpdatedCallbacks.push(callback);
  },

  /**
  * Return configuration
  */
  getConfiguration: function getConfiguration() {
    return configuration;
  },

  /**
  * Set configuration, in order to provide compatibility
  * with other systems by overriding this functions
  * @param {Object} config object with functions to be overrided
  *
  * For now, only makeAndAddStack can be overrided
  */
  setConfiguration: function setConfiguration(config) {
    configuration = config;
  }
};

/* harmony default export */ __webpack_exports__["default"] = (StackManager);

/***/ }),

/***/ "./utils/absoluteUrl.js":
/*!******************************!*\
  !*** ./utils/absoluteUrl.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var absoluteUrl = function absoluteUrl(path) {
  var absolutePath = '/';
  if (!path) return absolutePath; // TODO: Find another way to get root url

  var absoluteUrl = window.location.origin;
  var absoluteUrlParts = absoluteUrl.split('/');

  if (absoluteUrlParts.length > 4) {
    var rootUrlPrefixIndex = absoluteUrl.indexOf(absoluteUrlParts[3]);
    absolutePath += absoluteUrl.substring(rootUrlPrefixIndex) + path;
  } else {
    absolutePath += path;
  }

  return absolutePath.replace(/\/\/+/g, '/');
};

/* harmony default export */ __webpack_exports__["default"] = (absoluteUrl);

/***/ }),

/***/ "./utils/addServers.js":
/*!*****************************!*\
  !*** ./utils/addServers.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// TODO: figure out where else to put this function
var addServers = function addServers(servers, store) {
  if (!servers || !store) {
    throw new Error('The servers and store must be defined');
  }

  Object.keys(servers).forEach(function (serverType) {
    var endpoints = servers[serverType];
    endpoints.forEach(function (endpoint) {
      var server = Object.assign({}, endpoint);
      server.type = serverType;
      store.dispatch({
        type: 'ADD_SERVER',
        server: server
      });
    });
  });
};

/* harmony default export */ __webpack_exports__["default"] = (addServers);

/***/ }),

/***/ "./utils/b64toBlob.js":
/*!****************************!*\
  !*** ./utils/b64toBlob.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* Enabled JPEG images downloading on IE11. */
var b64toBlob = function b64toBlob(b64Data) {
  var contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  var sliceSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 512;
  var byteCharacters = atob(b64Data);
  var byteArrays = [];

  for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {
    var slice = byteCharacters.slice(offset, offset + sliceSize);
    var byteNumbers = new Array(slice.length);

    for (var i = 0; i < slice.length; i++) {
      byteNumbers[i] = slice.charCodeAt(i);
    }

    var byteArray = new Uint8Array(byteNumbers);
    byteArrays.push(byteArray);
  }

  var blob = new Blob(byteArrays, {
    type: contentType
  });
  return blob;
};

/* harmony default export */ __webpack_exports__["default"] = (b64toBlob);

/***/ }),

/***/ "./utils/cornerstoneWADOImageLoader.js":
/*!*********************************************!*\
  !*** ./utils/cornerstoneWADOImageLoader.js ***!
  \*********************************************/
/*! exports provided: getCornerstoneWADOImageLoader */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCornerstoneWADOImageLoader", function() { return getCornerstoneWADOImageLoader; });
function getCornerstoneWADOImageLoader() {
  return Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(null, /*! cornerstone-wado-image-loader */ "cornerstone-wado-image-loader", 7));
}

/***/ }),

/***/ "./utils/dicomLoaderService.js":
/*!*************************************!*\
  !*** ./utils/dicomLoaderService.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _babel_runtime_helpers_asyncIterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @babel/runtime/helpers/asyncIterator */ "../node_modules/@babel/runtime/helpers/asyncIterator.js");
/* harmony import */ var _babel_runtime_helpers_asyncIterator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncIterator__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_helpers_awaitAsyncGenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @babel/runtime/helpers/awaitAsyncGenerator */ "../node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js");
/* harmony import */ var _babel_runtime_helpers_awaitAsyncGenerator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_awaitAsyncGenerator__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_helpers_wrapAsyncGenerator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @babel/runtime/helpers/wrapAsyncGenerator */ "../node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js");
/* harmony import */ var _babel_runtime_helpers_wrapAsyncGenerator__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_wrapAsyncGenerator__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! cornerstone-core */ "cornerstone-core");
/* harmony import */ var cornerstone_core__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(cornerstone_core__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../DICOMWeb */ "./DICOMWeb/index.js");
/* harmony import */ var _cornerstoneWADOImageLoader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./cornerstoneWADOImageLoader */ "./utils/cornerstoneWADOImageLoader.js");












var getImageId = function getImageId(imageObj) {
  if (!imageObj) {
    return;
  }

  return typeof imageObj.getImageId === 'function' ? imageObj.getImageId() : imageObj.url;
};

var findImageIdOnStudies = function findImageIdOnStudies(studies, displaySetInstanceUID) {
  var study = studies.find(function (study) {
    var displaySet = study.displaySets.some(function (displaySet) {
      return displaySet.displaySetInstanceUID === displaySetInstanceUID;
    });
    return displaySet;
  });
  var _study$series = study.series,
      series = _study$series === void 0 ? [] : _study$series;

  var _ref = series[0] || {},
      _ref$instances = _ref.instances,
      instances = _ref$instances === void 0 ? [] : _ref$instances;

  var instance = instances[0];
  return getImageId(instance);
};

var someInvalidStrings = function someInvalidStrings(strings) {
  var stringsArray = Array.isArray(strings) ? strings : [strings];

  var emptyString = function emptyString(string) {
    return !string;
  };

  var invalid = stringsArray.some(emptyString);
  return invalid;
};

var getImageInstance = function getImageInstance(dataset) {
  return dataset && dataset.images && dataset.images[0];
};

var getImageInstanceId = function getImageInstanceId(imageInstance) {
  return getImageId(imageInstance);
};

var fetchIt = function fetchIt(url) {
  var headers = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _DICOMWeb__WEBPACK_IMPORTED_MODULE_9__["default"].getAuthorizationHeader();
  return fetch(url, headers).then(function (response) {
    return response.arrayBuffer();
  });
};

var cornerstoneRetriever = function cornerstoneRetriever(imageId) {
  return cornerstone_core__WEBPACK_IMPORTED_MODULE_7___default.a.loadAndCacheImage(imageId).then(function (image) {
    return image && image.data && image.data.byteArray.buffer;
  });
};

var wadorsRetriever = function wadorsRetriever(url, studyInstanceUID, seriesInstanceUID, sopInstanceUID) {
  var headers = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _DICOMWeb__WEBPACK_IMPORTED_MODULE_9__["default"].getAuthorizationHeader();
  var config = {
    url: url,
    headers: headers
  };
  var dicomWeb = new dicomweb_client__WEBPACK_IMPORTED_MODULE_8__["api"].DICOMwebClient(config);
  return dicomWeb.retrieveInstance({
    studyInstanceUID: studyInstanceUID,
    seriesInstanceUID: seriesInstanceUID,
    sopInstanceUID: sopInstanceUID
  });
};

var getImageLoaderType = function getImageLoaderType(imageId) {
  var loaderRegExp = /^\w+\:/;
  var loaderType = loaderRegExp.exec(imageId);
  return loaderRegExp.lastIndex === 0 && loaderType && loaderType[0] && loaderType[0].replace(':', '') || '';
};

var DicomLoaderService = /*#__PURE__*/function () {
  function DicomLoaderService() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default()(this, DicomLoaderService);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_3___default()(DicomLoaderService, [{
    key: "getLocalData",
    value: function () {
      var _getLocalData = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(dataset, studies) {
        var imageInstance, imageId, cornerstoneWADOImageLoader;
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(dataset && dataset.localFile)) {
                  _context.next = 9;
                  break;
                }

                // Use referenced imageInstance
                imageInstance = getImageInstance(dataset);
                imageId = getImageInstanceId(imageInstance); // or Try to get it from studies

                if (someInvalidStrings(imageId)) {
                  imageId = findImageIdOnStudies(studies, dataset.displaySetInstanceUID);
                }

                if (someInvalidStrings(imageId)) {
                  _context.next = 9;
                  break;
                }

                _context.next = 7;
                return Object(_cornerstoneWADOImageLoader__WEBPACK_IMPORTED_MODULE_10__["getCornerstoneWADOImageLoader"])();

              case 7:
                cornerstoneWADOImageLoader = _context.sent;
                return _context.abrupt("return", cornerstoneWADOImageLoader.wadouri.loadFileRequest(imageId));

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      function getLocalData(_x, _x2) {
        return _getLocalData.apply(this, arguments);
      }

      return getLocalData;
    }()
  }, {
    key: "getDataByImageType",
    value: function getDataByImageType(dataset) {
      var imageInstance = getImageInstance(dataset);

      if (imageInstance) {
        var imageId = getImageInstanceId(imageInstance);
        var getDicomDataMethod = fetchIt;
        var loaderType = getImageLoaderType(imageId);

        switch (loaderType) {
          case 'dicomfile':
            getDicomDataMethod = cornerstoneRetriever.bind(this, imageId);
            break;

          case 'wadors':
            var url = imageInstance.getData().wadoRoot;
            var studyInstanceUID = imageInstance.getStudyInstanceUID();
            var seriesInstanceUID = imageInstance.getSeriesInstanceUID();
            var sopInstanceUID = imageInstance.getSOPInstanceUID();
            var invalidParams = someInvalidStrings([url, studyInstanceUID, seriesInstanceUID, sopInstanceUID]);

            if (invalidParams) {
              return;
            }

            getDicomDataMethod = wadorsRetriever.bind(this, url, studyInstanceUID, seriesInstanceUID, sopInstanceUID);
            break;

          case 'wadouri':
            // Strip out the image loader specifier
            imageId = imageId.substring(imageId.indexOf(':') + 1);

            if (someInvalidStrings(imageId)) {
              return;
            }

            getDicomDataMethod = fetchIt.bind(this, imageId);
            break;
        }

        return getDicomDataMethod();
      }
    }
  }, {
    key: "getDataByDatasetType",
    value: function getDataByDatasetType(dataset) {
      var StudyInstanceUID = dataset.StudyInstanceUID,
          SeriesInstanceUID = dataset.SeriesInstanceUID,
          SOPInstanceUID = dataset.SOPInstanceUID,
          authorizationHeaders = dataset.authorizationHeaders,
          wadoRoot = dataset.wadoRoot,
          wadoUri = dataset.wadoUri; // Retrieve wadors or just try to fetch wadouri

      if (!someInvalidStrings(wadoRoot)) {
        return wadorsRetriever(wadoRoot, StudyInstanceUID, SeriesInstanceUID, SOPInstanceUID, authorizationHeaders);
      } else if (!someInvalidStrings(wadoUri)) {
        return fetchIt(wadoUri, {
          headers: authorizationHeaders
        });
      }
    }
  }, {
    key: "getLoaderIterator",
    value: function getLoaderIterator(dataset, studies) {
      var _this = this;

      return _babel_runtime_helpers_wrapAsyncGenerator__WEBPACK_IMPORTED_MODULE_6___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {
        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _this.getLocalData(dataset, studies);

              case 2:
                _context2.next = 4;
                return _this.getDataByImageType(dataset);

              case 4:
                _context2.next = 6;
                return _this.getDataByDatasetType(dataset);

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    }
  }, {
    key: "findDicomDataPromise",
    value: function () {
      var _findDicomDataPromise = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(dataset, studies) {
        var loaderIterator, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, loader;

        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                loaderIterator = this.getLoaderIterator(dataset, studies); // it returns first valid retriever method.

                _iteratorNormalCompletion = true;
                _didIteratorError = false;
                _context3.prev = 3;
                _iterator = _babel_runtime_helpers_asyncIterator__WEBPACK_IMPORTED_MODULE_4___default()(loaderIterator);

              case 5:
                _context3.next = 7;
                return _iterator.next();

              case 7:
                _step = _context3.sent;
                _iteratorNormalCompletion = _step.done;
                _context3.next = 11;
                return _step.value;

              case 11:
                _value = _context3.sent;

                if (_iteratorNormalCompletion) {
                  _context3.next = 19;
                  break;
                }

                loader = _value;

                if (!loader) {
                  _context3.next = 16;
                  break;
                }

                return _context3.abrupt("return", loader);

              case 16:
                _iteratorNormalCompletion = true;
                _context3.next = 5;
                break;

              case 19:
                _context3.next = 25;
                break;

              case 21:
                _context3.prev = 21;
                _context3.t0 = _context3["catch"](3);
                _didIteratorError = true;
                _iteratorError = _context3.t0;

              case 25:
                _context3.prev = 25;
                _context3.prev = 26;

                if (!(!_iteratorNormalCompletion && _iterator["return"] != null)) {
                  _context3.next = 30;
                  break;
                }

                _context3.next = 30;
                return _iterator["return"]();

              case 30:
                _context3.prev = 30;

                if (!_didIteratorError) {
                  _context3.next = 33;
                  break;
                }

                throw _iteratorError;

              case 33:
                return _context3.finish(30);

              case 34:
                return _context3.finish(25);

              case 35:
                throw new Error('Invalid dicom data loader');

              case 36:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[3, 21, 25, 35], [26,, 30, 34]]);
      }));

      function findDicomDataPromise(_x3, _x4) {
        return _findDicomDataPromise.apply(this, arguments);
      }

      return findDicomDataPromise;
    }()
  }]);

  return DicomLoaderService;
}();

var dicomLoaderService = new DicomLoaderService();
/* harmony default export */ __webpack_exports__["default"] = (dicomLoaderService);

/***/ }),

/***/ "./utils/getImageId.js":
/*!*****************************!*\
  !*** ./utils/getImageId.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getImageId; });
/* harmony import */ var _getWADORSImageId__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWADORSImageId */ "./utils/getWADORSImageId.js");
 // https://stackoverflow.com/a/6021027/3895126

function updateQueryStringParameter(uri, key, value) {
  var regex = new RegExp('([?&])' + key + '=.*?(&|$)', 'i');
  var separator = uri.indexOf('?') !== -1 ? '&' : '?';

  if (uri.match(regex)) {
    return uri.replace(regex, '$1' + key + '=' + value + '$2');
  }

  return uri + separator + key + '=' + value;
}
/**
 * Obtain an imageId for Cornerstone from an image instance
 *
 * @param instance
 * @param frame
 * @param thumbnail
 * @returns {string} The imageId to be used by Cornerstone
 */


function getImageId(instance, frame) {
  var thumbnail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  if (!instance) {
    return;
  }

  if (typeof instance.getImageId === 'function') {
    return instance.getImageId();
  }

  if (instance.url) {
    if (frame !== undefined) {
      instance.url = updateQueryStringParameter(instance.url, 'frame', frame);
    }

    return instance.url;
  }

  var renderingAttr = thumbnail ? 'thumbnailRendering' : 'imageRendering';

  if (!instance[renderingAttr] || instance[renderingAttr] === 'wadouri' || !instance.wadorsuri) {
    var imageId = 'dicomweb:' + instance.wadouri;

    if (frame !== undefined) {
      imageId += '&frame=' + frame;
    }

    return imageId;
  }

  return Object(_getWADORSImageId__WEBPACK_IMPORTED_MODULE_0__["default"])(instance, frame, thumbnail); // WADO-RS Retrieve Frame
}

/***/ }),

/***/ "./utils/getImageSetCalculatedSpacings.js":
/*!************************************************!*\
  !*** ./utils/getImageSetCalculatedSpacings.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getImageSetCalculatedSpacings; });
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ "../node_modules/@babel/runtime/helpers/toConsumableArray.js");
/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__);

function getImageSetCalculatedSpacings(imageSet) {
  // console.log('getImageSetCalculatedSpacings', imageSet);
  var calculatedSpacings = {
    mostUnique: 0,
    max: 0,
    min: 0
  };
  var spacings = [];

  for (var i = 0; i < imageSet.length; i++) {
    var metadata = imageSet[i].getData().metadata;
    var ImagePositionPatient = metadata.ImagePositionPatient,
        ImageOrientationPatient = metadata.ImageOrientationPatient;
    if (!ImagePositionPatient || !ImageOrientationPatient) return;

    var thisPosition = _getZPosAlongPlaneDirection(ImagePositionPatient, ImageOrientationPatient);

    if (i > 0) {
      if (i !== imageSet.length - 1) spacings[i] = thisPosition;
      spacings[i - 1] = _roundToTwo(Math.abs(thisPosition - spacings[i - 1]));
    } else spacings.push(thisPosition);
  } // 


  var _getImageSetCalculate = _getImageSetCalculatedSpacings(spacings),
      mostUnique = _getImageSetCalculate.mostUnique,
      max = _getImageSetCalculate.max,
      min = _getImageSetCalculate.min;

  calculatedSpacings.mostUnique = mostUnique;
  calculatedSpacings.max = max;
  calculatedSpacings.min = min;
  return calculatedSpacings;
} // Compute true zPos along Plane normals from Image Position Patient (0020,0032) and Image Orientation Patient (0020,0037)
// https://github.com/horosproject/horosplugins/blob/767f630607094e3ba3b814f788fc49736c70367d/VoxelVolume/VoxelVolumeFilter.m

function _getZPosAlongPlaneDirection(imagePos, imageOrient) {
  // console.log('getZPosAlongPlaneDirection', imagePos, imageOrient);
  // image positions, normally this is the top-left coordinate of the image
  var xPos = imagePos[0];
  var yPos = imagePos[1];
  var zPos = imagePos[2]; // normal vectors along X, Y, Z of the image

  /*
  "C.7.6.2.1.1 Image Position And Image Orientation. The Image Position (0020,0032) specifies the x, y,
   and z coordinates of the upper left hand corner of the image; it is the center of the first voxel transmitted.
   Image Orientation (0020,0037) specifies the direction cosines of the first row and the first column with respect to the patient.
   These Attributes shall be provide as a pair. Row value for the x, y, and z axes respectively followed by the Column value for the x,
   y, and z axes respectively. The direction of the axes is defined fully by the patient's orientation. The x-axis is increasing to the
   left hand side of the patient. The y-axis is increasing to the posterior side of the patient.
   The z-axis is increasing toward the head of the patient. The patient based coordinate system is a right handed system,%
   i.e. the vector cross product of a unit vector along the positive x-axis and a unit vector along the positive y-axis is equal to a unit vector%
   along the positive z-axis."
   
   dst_nrm_dircos_x = dircos(2) * dircos(6) - dircos(3) * dircos(5);
   dst_nrm_dircos_y = dircos(3) * dircos(4) - dircos(1) * dircos(6);
   dst_nrm_dircos_z = dircos(1) * dircos(5) - dircos(2) * dircos(4);
   
   newx = dircos(1) * xpos + dircos(2)* ypos + dircos(3) * zpos;
   newy = dircos(4)* xpos + dircos(5)* ypos + dircos(6) * zpos;
   newz = dst_nrm_dircos_x * xpos + dst_nrm_dircos_y * ypos+ dst_nrm_dircos_z * zpos;
   */

  var dst_normal_IOP_x = imageOrient[2 - 1] * imageOrient[6 - 1] - imageOrient[3 - 1] * imageOrient[5 - 1];
  var dst_normal_IOP_y = imageOrient[3 - 1] * imageOrient[4 - 1] - imageOrient[1 - 1] * imageOrient[6 - 1];
  var dst_normal_IOP_z = imageOrient[1 - 1] * imageOrient[5 - 1] - imageOrient[2 - 1] * imageOrient[4 - 1];
  var newZ = dst_normal_IOP_x * xPos + dst_normal_IOP_y * yPos + dst_normal_IOP_z * zPos;
  return newZ;
}

function _roundToTwo(num) {
  return +(Math.round(num + 'e+2') + 'e-2');
} // return an array of spacing between instances in the set


function _getImageSetCalculatedSpacings(spacings) {
  // console.time('_getImageSetCalculatedSpacings');
  var unique_values = _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(new Set(spacings));

  var count = new Array(unique_values.length).fill(0);
  var max = 0;
  var min = Infinity; // console.log('_getImageSetCalculatedSpacings uniques', unique_values);

  spacings.forEach(function (spacing) {
    if (spacing > max) max = spacing;
    if (spacing < min) min = spacing;
    unique_values.forEach(function (val, index) {
      if (val === spacing) count[index]++;
    });
  }); // console.log('_getImageSetCalculatedSpacings count', count);

  var maxCountIndex = count.indexOf(Math.max.apply(Math, _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0___default()(count))); // console.timeEnd('_getImageSetCalculatedSpacings');

  return {
    mostUnique: unique_values[maxCountIndex],
    max: max,
    min: min
  };
}

/***/ }),

/***/ "./utils/getWADORSImageId.js":
/*!***********************************!*\
  !*** ./utils/getWADORSImageId.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getWADORSImageId; });
function getWADORSImageUrl(instance, frame) {
  var wadorsuri = instance.wadorsuri;

  if (!wadorsuri) {
    return;
  } // Use null to obtain an imageId which represents the instance


  if (frame === null) {
    wadorsuri = wadorsuri.replace(/frames\/(\d+)/, '');
  } else {
    // We need to sum 1 because WADO-RS frame number is 1-based
    frame = frame ? parseInt(frame) + 1 : 1; // Replaces /frame/1 by /frame/{frame}

    wadorsuri = wadorsuri.replace(/frames\/(\d+)/, "frames/".concat(frame));
  }

  return wadorsuri;
}
/**
 * Obtain an imageId for Cornerstone based on the WADO-RS scheme
 *
 * @param {object} instanceMetada metadata object (InstanceMetadata)
 * @param {(string\|number)} [frame] the frame number
 * @returns {string} The imageId to be used by Cornerstone
 */


function getWADORSImageId(instance, frame) {
  var uri = getWADORSImageUrl(instance, frame);

  if (!uri) {
    return;
  }

  return "wadors:".concat(uri);
}

/***/ }),

/***/ "./utils/guid.js":
/*!***********************!*\
  !*** ./utils/guid.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * Create a random GUID
 *
 * @return {string}
 */
var guid = function guid() {
  var getFourRandomValues = function getFourRandomValues() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
  };

  return getFourRandomValues() + getFourRandomValues() + '-' + getFourRandomValues() + '-' + getFourRandomValues() + '-' + getFourRandomValues() + '-' + getFourRandomValues() + getFourRandomValues() + getFourRandomValues();
};

/* harmony default export */ __webpack_exports__["default"] = (guid);

/***/ }),

/***/ "./utils/hotkeys/index.js":
/*!********************************!*\
  !*** ./utils/hotkeys/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var mousetrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mousetrap */ "../node_modules/mousetrap/mousetrap.js");
/* harmony import */ var mousetrap__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mousetrap__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _pausePlugin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pausePlugin */ "./utils/hotkeys/pausePlugin.js");
/* harmony import */ var _recordPlugin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recordPlugin */ "./utils/hotkeys/recordPlugin.js");



Object(_recordPlugin__WEBPACK_IMPORTED_MODULE_2__["default"])(mousetrap__WEBPACK_IMPORTED_MODULE_0___default.a);
Object(_pausePlugin__WEBPACK_IMPORTED_MODULE_1__["default"])(mousetrap__WEBPACK_IMPORTED_MODULE_0___default.a);
/* harmony default export */ __webpack_exports__["default"] = (mousetrap__WEBPACK_IMPORTED_MODULE_0___default.a);

/***/ }),

/***/ "./utils/hotkeys/pausePlugin.js":
/*!**************************************!*\
  !*** ./utils/hotkeys/pausePlugin.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * adds a pause and unpause method to Mousetrap
 * this allows you to enable or disable keyboard shortcuts
 * without having to reset Mousetrap and rebind everything
 *
 * https://github.com/ccampbell/mousetrap/blob/master/plugins/pause/mousetrap-pause.js
 */
/* harmony default export */ __webpack_exports__["default"] = (function (Mousetrap) {
  var _originalStopCallback = Mousetrap.prototype.stopCallback;

  Mousetrap.prototype.stopCallback = function (e, element, combo) {
    var self = this;

    if (self.paused) {
      return true;
    }

    return _originalStopCallback.call(self, e, element, combo);
  };

  Mousetrap.prototype.pause = function () {
    var self = this;
    self.paused = true;
  };

  Mousetrap.prototype.unpause = function () {
    var self = this;
    self.paused = false;
  };

  Mousetrap.init();
});

/***/ }),

/***/ "./utils/hotkeys/recordPlugin.js":
/*!***************************************!*\
  !*** ./utils/hotkeys/recordPlugin.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * This extension allows you to record a sequence using Mousetrap.
 * {@link https://craig.is/killing/mice}
 *
 * @author Dan Tao <daniel.tao@gmail.com>
 */
/* harmony default export */ __webpack_exports__["default"] = (function (Mousetrap) {
  /**
   * the sequence currently being recorded
   *
   * @type {Array}
   */
  var _recordedSequence = [],

  /**
   * a callback to invoke after recording a sequence
   *
   * @type {Function|null}
   */
  _recordedSequenceCallback = null,

  /**
   * a list of all of the keys currently held down
   *
   * @type {Array}
   */
  _currentRecordedKeys = [],

  /**
   * temporary state where we remember if we've already captured a
   * character key in the current combo
   *
   * @type {boolean}
   */
  _recordedCharacterKey = false,

  /**
   * a handle for the timer of the current recording
   *
   * @type {null|number}
   */
  _recordTimer = null;
  var
  /**
  * the original handleKey method to override when Mousetrap.record() is
  * called
  *
  * @type {Function}
  */
  _origHandleKey = Mousetrap.prototype.handleKey;
  /**
   * handles a character key event
   *
   * @param {string} character
   * @param {Array} modifiers
   * @param {Event} e
   * @returns void
   */

  function _handleKey(character, modifiers, e) {
    var self = this;

    if (!self.recording) {
      _origHandleKey.apply(self, arguments);

      return;
    } // remember this character if we're currently recording a sequence


    if (e.type === 'keydown') {
      if (character.length === 1 && _recordedCharacterKey) {
        _recordCurrentCombo();
      }

      for (var i = 0; i < modifiers.length; ++i) {
        _recordKey(modifiers[i]);
      }

      _recordKey(character); // once a key is released, all keys that were held down at the time
      // count as a keypress

    } else if (e.type === 'keyup' && _currentRecordedKeys.length > 0) {
      _recordCurrentCombo();
    }
  }
  /**
   * marks a character key as held down while recording a sequence
   *
   * @param {string} key
   * @returns void
   */


  function _recordKey(key) {
    // one-off implementation of Array.indexOf, since IE6-9 don't support it
    for (var i = 0; i < _currentRecordedKeys.length; ++i) {
      if (_currentRecordedKeys[i] === key) {
        return;
      }
    }

    _currentRecordedKeys.push(key);

    if (key.length === 1) {
      _recordedCharacterKey = true;
    }
  }
  /**
   * marks whatever key combination that's been recorded so far as finished
   * and gets ready for the next combo
   *
   * @returns void
   */


  function _recordCurrentCombo() {
    _recordedSequence.push(_currentRecordedKeys);

    _currentRecordedKeys = [];
    _recordedCharacterKey = false;

    _finishRecording();
  }
  /**
   * ensures each combo in a sequence is in a predictable order and formats
   * key combos to be '+'-delimited
   *
   * modifies the sequence in-place
   *
   * @param {Array} sequence
   * @returns void
   */


  function _normalizeSequence(sequence) {
    for (var i = 0; i < sequence.length; ++i) {
      sequence[i].sort(function (x, y) {
        // modifier keys always come first, in alphabetical order
        if (x.length > 1 && y.length === 1) {
          return -1;
        } else if (x.length === 1 && y.length > 1) {
          return 1;
        } // character keys come next (list should contain no duplicates,
        // so no need for equality check)


        return x > y ? 1 : -1;
      });
      sequence[i] = sequence[i].join('+');
    }
  }
  /**
   * finishes the current recording, passes the recorded sequence to the stored
   * callback, and sets Mousetrap.handleKey back to its original function
   *
   * @returns void
   */


  function _finishRecording() {
    if (_recordedSequenceCallback) {
      _normalizeSequence(_recordedSequence);

      _recordedSequenceCallback(_recordedSequence);
    } // reset all recorded state


    _recordedSequence = [];
    _recordedSequenceCallback = null;
    _currentRecordedKeys = [];
  }
  /**
   * called to set a 1 second timeout on the current recording
   *
   * this is so after each key press in the sequence the recording will wait for
   * 1 more second before executing the callback
   *
   * @returns void
   */


  function _restartRecordTimer() {
    clearTimeout(_recordTimer);
    _recordTimer = setTimeout(_finishRecording, 1000);
  }
  /**
   * records the next sequence and passes it to a callback once it's
   * completed
   *
   * @param {Function} callback
   * @returns void
   */


  Mousetrap.prototype.record = function (callback) {
    var self = this;
    self.recording = true;

    _recordedSequenceCallback = function _recordedSequenceCallback() {
      self.recording = false;
      callback.apply(self, arguments);
    };
  };
  /**
   * stop recording
   *
   * @param {Function} callback
   * @returns void
   */


  Mousetrap.prototype.stopRecord = function () {
    var self = this;
    self.recording = false;
  };
  /**
   * start recording
   *
   * @param {Function} callback
   * @returns void
   */


  Mousetrap.prototype.startRecording = function () {
    var self = this;
    self.recording = true;
  };

  Mousetrap.prototype.handleKey = function () {
    var self = this;

    _handleKey.apply(self, arguments);
  };

  Mousetrap.init();
});

/***/ }),

/***/ "./utils/index.js":
/*!************************!*\
  !*** ./utils/index.js ***!
  \************************/
/*! exports provided: guid, ObjectPath, absoluteUrl, addServers, sortBy, writeScript, b64toBlob, StackManager, studyMetadataManager, DicomLoaderService, urlUtil, loadAndCacheDerivedDisplaySets, makeCancelable, hotkeys, getImageSetCalculatedSpacings, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _absoluteUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./absoluteUrl */ "./utils/absoluteUrl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "absoluteUrl", function() { return _absoluteUrl__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _addServers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./addServers */ "./utils/addServers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addServers", function() { return _addServers__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _b64toBlob__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./b64toBlob */ "./utils/b64toBlob.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "b64toBlob", function() { return _b64toBlob__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _dicomLoaderService__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dicomLoaderService */ "./utils/dicomLoaderService.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DicomLoaderService", function() { return _dicomLoaderService__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _getImageSetCalculatedSpacings__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getImageSetCalculatedSpacings */ "./utils/getImageSetCalculatedSpacings.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getImageSetCalculatedSpacings", function() { return _getImageSetCalculatedSpacings__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _guid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./guid */ "./utils/guid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "guid", function() { return _guid__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _hotkeys__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./hotkeys */ "./utils/hotkeys/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "hotkeys", function() { return _hotkeys__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _loadAndCacheDerivedDisplaySets__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./loadAndCacheDerivedDisplaySets */ "./utils/loadAndCacheDerivedDisplaySets.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loadAndCacheDerivedDisplaySets", function() { return _loadAndCacheDerivedDisplaySets__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _makeCancelable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./makeCancelable */ "./utils/makeCancelable.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "makeCancelable", function() { return _makeCancelable__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _objectPath__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./objectPath */ "./utils/objectPath.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ObjectPath", function() { return _objectPath__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _sortBy__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./sortBy */ "./utils/sortBy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sortBy", function() { return _sortBy__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony import */ var _StackManager__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./StackManager */ "./utils/StackManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StackManager", function() { return _StackManager__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _studyMetadataManager__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./studyMetadataManager */ "./utils/studyMetadataManager.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "studyMetadataManager", function() { return _studyMetadataManager__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _urlUtil__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./urlUtil */ "./utils/urlUtil.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "urlUtil", function() { return _urlUtil__WEBPACK_IMPORTED_MODULE_13__; });
/* harmony import */ var _writeScript__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./writeScript */ "./utils/writeScript.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "writeScript", function() { return _writeScript__WEBPACK_IMPORTED_MODULE_14__["default"]; });
















var utils = {
  guid: _guid__WEBPACK_IMPORTED_MODULE_5__["default"],
  ObjectPath: _objectPath__WEBPACK_IMPORTED_MODULE_9__["default"],
  absoluteUrl: _absoluteUrl__WEBPACK_IMPORTED_MODULE_0__["default"],
  addServers: _addServers__WEBPACK_IMPORTED_MODULE_1__["default"],
  sortBy: _sortBy__WEBPACK_IMPORTED_MODULE_10__["default"],
  writeScript: _writeScript__WEBPACK_IMPORTED_MODULE_14__["default"],
  b64toBlob: _b64toBlob__WEBPACK_IMPORTED_MODULE_2__["default"],
  StackManager: _StackManager__WEBPACK_IMPORTED_MODULE_11__["default"],
  studyMetadataManager: _studyMetadataManager__WEBPACK_IMPORTED_MODULE_12__["default"],
  DicomLoaderService: _dicomLoaderService__WEBPACK_IMPORTED_MODULE_3__["default"],
  urlUtil: _urlUtil__WEBPACK_IMPORTED_MODULE_13__,
  loadAndCacheDerivedDisplaySets: _loadAndCacheDerivedDisplaySets__WEBPACK_IMPORTED_MODULE_7__["default"],
  makeCancelable: _makeCancelable__WEBPACK_IMPORTED_MODULE_8__["default"],
  hotkeys: _hotkeys__WEBPACK_IMPORTED_MODULE_6__["default"],
  getImageSetCalculatedSpacings: _getImageSetCalculatedSpacings__WEBPACK_IMPORTED_MODULE_4__["default"]
};

/* harmony default export */ __webpack_exports__["default"] = (utils);

/***/ }),

/***/ "./utils/isDisplaySetReconstructable.js":
/*!**********************************************!*\
  !*** ./utils/isDisplaySetReconstructable.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isDisplaySetReconstructable; });
/**
 * Checks if a series is reconstructable to a 3D volume.
 *
 * @param {Object[]} instances An array of `OHIFInstanceMetadata` objects.
 */
function isDisplaySetReconstructable(instances) {
  if (!instances.length) {
    return {
      value: false
    };
  }

  var firstInstance = instances[0].getData().metadata;
  var Modality = firstInstance.Modality;
  var isMultiframe = firstInstance.NumberOfFrames > 1;

  if (!constructableModalities.includes(Modality)) {
    return {
      value: false
    };
  } // Can't reconstruct if we only have one image.


  if (!isMultiframe && instances.length === 1) {
    return {
      value: false
    };
  }

  if (isMultiframe) {
    return processMultiframe(instances[0]);
  }

  return processSingleframe(instances);
}

function processMultiframe(instance) {
  //TODO: deal with multriframe checks! return false for now as can't reconstruct.
  return {
    value: false
  };
}

function processSingleframe(instances) {
  var firstImage = instances[0].getData().metadata;
  var firstImageRows = firstImage.Rows;
  var firstImageColumns = firstImage.Columns;
  var firstImageSamplesPerPixel = firstImage.SamplesPerPixel;
  var firstImageOrientationPatient = firstImage.ImageOrientationPatient;
  var firstImagePositionPatient = firstImage.ImagePositionPatient; // Can't reconstruct if we:
  // -- Have a different dimensions within a displaySet.
  // -- Have a different number of components within a displaySet.
  // -- Have different orientations within a displaySet.

  for (var i = 1; i < instances.length; i++) {
    var instance = instances[i].getData().metadata;
    var Rows = instance.Rows,
        Columns = instance.Columns,
        SamplesPerPixel = instance.SamplesPerPixel,
        ImageOrientationPatient = instance.ImageOrientationPatient;

    if (Rows !== firstImageRows || Columns !== firstImageColumns || SamplesPerPixel !== firstImageSamplesPerPixel || !_isSameOrientation(ImageOrientationPatient, firstImageOrientationPatient)) {
      return {
        value: false
      };
    }
  }

  var missingFrames = 0; // Check if frame spacing is approximately equal within a spacingTolerance.
  // If spacing is on a uniform grid but we are missing frames,
  // Allow reconstruction, but pass back the number of missing frames.

  if (instances.length > 2) {
    var lastIpp = instances[instances.length - 1].getData().metadata.ImagePositionPatient; // We can't reconstruct if we are missing ImagePositionPatient values

    if (!firstImagePositionPatient || !lastIpp) {
      return {
        value: false
      };
    }

    var averageSpacingBetweenFrames = _getPerpendicularDistance(firstImagePositionPatient, lastIpp) / (instances.length - 1); // let previousImagePositionPatient = firstImagePositionPatient;
    // for (let i = 0; i < instances.length; i++) {
    //     const instance = instances[i].getData().metadata;
    //     const {ImagePositionPatient} = instance;
    //     Temporary disable slice spacing issues, will assume a spacing value calculated from ImagePositionPatient and ImageOrientationPatient
    //     const spacingBetweenFrames = _getPerpendicularDistance(
    //         ImagePositionPatient,
    //         previousImagePositionPatient
    //     );
    //     const spacingIssue = _getSpacingIssue(
    //         spacingBetweenFrames,
    //         averageSpacingBetweenFrames
    //     );
    //     if (spacingIssue) {
    //         const issue = spacingIssue.issue;
    //         if (issue === reconstructionIssues.MISSING_FRAMES) {
    //             missingFrames += spacingIssue.missingFrames;
    //         } else if (issue === reconstructionIssues.IRREGULAR_SPACING) {
    //             return {value: false};
    //         }
    //     }
    //     previousImagePositionPatient = ImagePositionPatient;
    // }
  }

  return {
    value: true,
    missingFrames: missingFrames
  };
}

function _isSameOrientation(iop1, iop2) {
  if (iop1 === undefined || !iop2 === undefined) {
    return;
  }

  return Math.abs(iop1[0] - iop2[0]) < iopTolerance && Math.abs(iop1[1] - iop2[1]) < iopTolerance && Math.abs(iop1[2] - iop2[2]) < iopTolerance;
} // TODO: Is 10% a reasonable spacingTolerance for spacing?


var spacingTolerance = 0.1;
var iopTolerance = 0.01;
/**
 * Checks for spacing issues.
 *
 * @param {number} spacing The spacing between two frames.
 * @param {number} averageSpacing The average spacing between all frames.
 *
 * @returns {Object} An object containing the issue and extra information if necessary.
 */

function _getSpacingIssue(spacing, averageSpacing) {
  var equalWithinTolerance = Math.abs(spacing - averageSpacing) < averageSpacing * spacingTolerance;

  if (equalWithinTolerance) {
    return;
  }

  var multipleOfAverageSpacing = spacing / averageSpacing;
  var numberOfSpacings = Math.round(multipleOfAverageSpacing);
  var errorForEachSpacing = Math.abs(spacing - numberOfSpacings * averageSpacing) / numberOfSpacings;

  if (errorForEachSpacing < spacingTolerance * averageSpacing) {
    return {
      issue: reconstructionIssues.MISSING_FRAMES,
      missingFrames: numberOfSpacings - 1
    };
  }

  return {
    issue: reconstructionIssues.IRREGULAR_SPACING
  };
}

function _getPerpendicularDistance(a, b) {
  return Math.sqrt(Math.pow(a[0] - b[0], 2) + Math.pow(a[1] - b[1], 2) + Math.pow(a[2] - b[2], 2));
}

var constructableModalities = ['MR', 'CT', 'PT', 'NM'];
var reconstructionIssues = {
  MISSING_FRAMES: 'missingframes',
  IRREGULAR_SPACING: 'irregularspacing'
};

/***/ }),

/***/ "./utils/isImage.js":
/*!**************************!*\
  !*** ./utils/isImage.js ***!
  \**************************/
/*! exports provided: isImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isImage", function() { return isImage; });
/* harmony import */ var _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sopClassDictionary */ "./utils/sopClassDictionary.js");

var imagesTypes = [_sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].ComputedRadiographyImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].DigitalXRayImageStorageForPresentation, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].DigitalXRayImageStorageForProcessing, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].DigitalMammographyXRayImageStorageForPresentation, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].DigitalMammographyXRayImageStorageForProcessing, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].DigitalIntraOralXRayImageStorageForPresentation, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].DigitalIntraOralXRayImageStorageForProcessing, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].CTImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].EnhancedCTImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].LegacyConvertedEnhancedCTImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].UltrasoundMultiframeImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].MRImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].EnhancedMRImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].EnhancedMRColorImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].LegacyConvertedEnhancedMRImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].UltrasoundImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].SecondaryCaptureImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].MultiframeSingleBitSecondaryCaptureImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].MultiframeGrayscaleByteSecondaryCaptureImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].MultiframeGrayscaleWordSecondaryCaptureImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].MultiframeTrueColorSecondaryCaptureImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].XRayAngiographicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].EnhancedXAImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].XRayRadiofluoroscopicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].EnhancedXRFImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].XRay3DAngiographicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].XRay3DCraniofacialImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].BreastTomosynthesisImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].BreastProjectionXRayImageStorageForPresentation, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].BreastProjectionXRayImageStorageForProcessing, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].IntravascularOpticalCoherenceTomographyImageStorageForPresentation, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].IntravascularOpticalCoherenceTomographyImageStorageForProcessing, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].NuclearMedicineImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VLEndoscopicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VideoEndoscopicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VLMicroscopicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VideoMicroscopicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VLSlideCoordinatesMicroscopicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VLPhotographicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VideoPhotographicImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].OphthalmicPhotography8BitImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].OphthalmicPhotography16BitImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].OphthalmicTomographyImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].VLWholeSlideMicroscopyImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].PositronEmissionTomographyImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].EnhancedPETImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].LegacyConvertedEnhancedPETImageStorage, _sopClassDictionary__WEBPACK_IMPORTED_MODULE_0__["sopClassDictionary"].RTImageStorage];
/**
 * Checks whether dicom files with specified SOP Class UID have image data
 * @param {string} SOPClassUID - SOP Class UID to be checked
 * @returns {boolean} - true if it has image data
 */

var isImage = function isImage(SOPClassUID) {
  if (!SOPClassUID) return false;
  return imagesTypes.indexOf(SOPClassUID) !== -1;
};

/***/ }),

/***/ "./utils/isLowPriorityModality.js":
/*!****************************************!*\
  !*** ./utils/isLowPriorityModality.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return isLowPriorityModality; });
var LOW_PRIORITY_MODALITIES = Object.freeze(['SEG', 'KO', 'PR']);
function isLowPriorityModality(Modality) {
  return LOW_PRIORITY_MODALITIES.includes(Modality);
}

/***/ }),

/***/ "./utils/loadAndCacheDerivedDisplaySets.js":
/*!*************************************************!*\
  !*** ./utils/loadAndCacheDerivedDisplaySets.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _studyMetadataManager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./studyMetadataManager */ "./utils/studyMetadataManager.js");

/**
 * Study schema
 *
 * @typedef {Object} Study
 * @property {Array} seriesList -
 * @property {Object} seriesMap -
 * @property {Object} seriesLoader -
 * @property {string} wadoUriRoot -
 * @property {string} wadoRoot -
 * @property {string} qidoRoot -
 * @property {string} patientName -
 * @property {string} patientId -
 * @property {number} patientAge -
 * @property {number} patientSize -
 * @property {number} patientWeight -
 * @property {string} accessionNumber -
 * @property {string} studyDate -
 * @property {string} studyTime -
 * @property {string} modalities -
 * @property {string} studyDescription -
 * @property {string} imageCount -
 * @property {string} studyInstanceUid -
 * @property {string} institutionName -
 * @property {Array} displaySets -
 */

/**
 * Factory function to load and cache derived display sets.
 *
 * @param {object} referencedDisplaySet Display set
 * @param {string} referencedDisplaySet.displaySetInstanceUid Display set instance uid
 * @param {string} referencedDisplaySet.seriesDate
 * @param {string} referencedDisplaySet.seriesTime
 * @param {string} referencedDisplaySet.seriesInstanceUid
 * @param {string} referencedDisplaySet.seriesNumber
 * @param {string} referencedDisplaySet.seriesDescription
 * @param {number} referencedDisplaySet.numImageFrames
 * @param {string} referencedDisplaySet.frameRate
 * @param {string} referencedDisplaySet.modality
 * @param {boolean} referencedDisplaySet.isMultiFrame
 * @param {number} referencedDisplaySet.instanceNumber
 * @param {boolean} referencedDisplaySet.isReconstructable
 * @param {string} referencedDisplaySet.studyInstanceUid
 * @param {Array} referencedDisplaySet.sopClassUids
 * @param {Study[]} studies Collection of studies
 * @returns void
 */

var loadAndCacheDerivedDisplaySets = function loadAndCacheDerivedDisplaySets(referencedDisplaySet, studies) {
  var StudyInstanceUID = referencedDisplaySet.StudyInstanceUID,
      SeriesInstanceUID = referencedDisplaySet.SeriesInstanceUID;
  var studyMetadata = _studyMetadataManager__WEBPACK_IMPORTED_MODULE_0__["default"].get(StudyInstanceUID);

  if (!studyMetadata) {
    return;
  }

  var derivedDisplaySets = studyMetadata.getDerivedDatasets({
    referencedSeriesInstanceUID: SeriesInstanceUID
  });

  if (!derivedDisplaySets.length) {
    return;
  } // Filter by type


  var displaySetsPerModality = {};
  derivedDisplaySets.forEach(function (displaySet) {
    var Modality = displaySet.Modality;

    if (displaySetsPerModality[Modality] === undefined) {
      displaySetsPerModality[Modality] = [];
    }

    displaySetsPerModality[Modality].push(displaySet);
  }); // For each type, see if any are loaded, if not load the most recent.

  Object.keys(displaySetsPerModality).forEach(function (key) {
    var displaySets = displaySetsPerModality[key];
    var isLoaded = displaySets.some(function (displaySet) {
      return displaySet.isLoaded;
    });

    if (isLoaded) {
      return;
    } // find most recent and load it.


    var recentDateTime = 0;
    var recentDisplaySet;
    displaySets.forEach(function (displaySet) {
      var dateTime = Number("".concat(displaySet.SeriesDate).concat(displaySet.SeriesTime));

      if (dateTime > recentDateTime) {
        recentDateTime = dateTime;
        recentDisplaySet = displaySet;
      }
    });
    recentDisplaySet.load(referencedDisplaySet, studies);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (loadAndCacheDerivedDisplaySets);

/***/ }),

/***/ "./utils/makeCancelable.js":
/*!*********************************!*\
  !*** ./utils/makeCancelable.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return makeCancelable; });
function makeCancelable(thenable) {
  var isCanceled = false;
  var promise = Promise.resolve(thenable).then(function (result) {
    if (isCanceled) throw Object.freeze({
      isCanceled: isCanceled
    });
    return result;
  }, function (error) {
    if (isCanceled) throw Object.freeze({
      isCanceled: isCanceled,
      error: error
    });
    throw error;
  });
  return Object.assign(Object.create(promise), {
    then: promise.then.bind(promise),
    cancel: function cancel() {
      isCanceled = true;
    }
  });
}

/***/ }),

/***/ "./utils/metadataProvider/fetchOverlayData.js":
/*!****************************************************!*\
  !*** ./utils/metadataProvider/fetchOverlayData.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return fetchOverlayData; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../DICOMWeb */ "./DICOMWeb/index.js");
/* harmony import */ var _str2ab__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../str2ab */ "./utils/str2ab.js");
/* harmony import */ var _unpackOverlay__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./unpackOverlay */ "./utils/metadataProvider/unpackOverlay.js");






function fetchOverlayData(_x, _x2) {
  return _fetchOverlayData.apply(this, arguments);
}

function _fetchOverlayData() {
  _fetchOverlayData = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(instance, server) {
    var OverlayDataPromises, OverlayDataTags;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            OverlayDataPromises = [];
            OverlayDataTags = [];
            return _context.abrupt("return", new Promise(function (resolve, reject) {
              for (var overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {
                var groupStr = "60".concat(overlayGroup.toString(16));

                if (groupStr.length === 3) {
                  groupStr = "600".concat(overlayGroup.toString(16));
                }

                var OverlayDataTag = "".concat(groupStr, "3000");

                if (instance[OverlayDataTag] && instance[OverlayDataTag].InlineBinary) {
                  var inlineBinaryData = atob(instance[OverlayDataTag].InlineBinary);
                  var arraybuffer = Object(_str2ab__WEBPACK_IMPORTED_MODULE_4__["default"])(inlineBinaryData);
                  instance[OverlayDataTag] = Object(_unpackOverlay__WEBPACK_IMPORTED_MODULE_5__["default"])(arraybuffer);
                } else if (instance[OverlayDataTag] && instance[OverlayDataTag].BulkDataURI) {
                  OverlayDataPromises.push(_getOverlayData(instance[OverlayDataTag], server));
                  OverlayDataTags.push(OverlayDataTag);
                } else if (instance[OverlayDataTag] && instance[OverlayDataTag] instanceof ArrayBuffer) {
                  instance[OverlayDataTag] = Object(_unpackOverlay__WEBPACK_IMPORTED_MODULE_5__["default"])(instance[OverlayDataTag]);
                }
              }

              if (OverlayDataPromises.length) {
                Promise.all(OverlayDataPromises).then(function (results) {
                  for (var i = 0; i < results.length; i++) {
                    instance[OverlayDataTags[i]] = results[i];
                  }

                  resolve();
                });
              } else {
                resolve();
              }
            }));

          case 3:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _fetchOverlayData.apply(this, arguments);
}

function _getOverlayData(_x3, _x4) {
  return _getOverlayData2.apply(this, arguments);
}

function _getOverlayData2() {
  _getOverlayData2 = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(tag, server) {
    var BulkDataURI, uri, config, dicomWeb, options;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            BulkDataURI = tag.BulkDataURI;
            uri = BulkDataURI; // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning
            // incorrect bulk data URIs

            if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {
              uri = uri.replace('http', 'https');
            }

            config = {
              url: server.wadoRoot,
              //BulkDataURI is absolute, so this isn't used
              headers: _DICOMWeb__WEBPACK_IMPORTED_MODULE_3__["default"].getAuthorizationHeader(server)
            };
            dicomWeb = new dicomweb_client__WEBPACK_IMPORTED_MODULE_2__["api"].DICOMwebClient(config);
            options = {
              BulkDataURI: uri
            };
            return _context2.abrupt("return", dicomWeb.retrieveBulkData(options).then(function (result) {
              return result[0];
            }).then(_unpackOverlay__WEBPACK_IMPORTED_MODULE_5__["default"]));

          case 7:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _getOverlayData2.apply(this, arguments);
}

/***/ }),

/***/ "./utils/metadataProvider/fetchPaletteColorLookupTableData.js":
/*!********************************************************************!*\
  !*** ./utils/metadataProvider/fetchPaletteColorLookupTableData.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return fetchPaletteColorLookupTableData; });
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ "../node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ "../node_modules/@babel/runtime/helpers/asyncToGenerator.js");
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var dicomweb_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! dicomweb-client */ "../node_modules/dicomweb-client/build/dicomweb-client.es.js");
/* harmony import */ var _DICOMWeb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../DICOMWeb */ "./DICOMWeb/index.js");
/* harmony import */ var _str2ab__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../str2ab */ "./utils/str2ab.js");






function fetchPaletteColorLookupTableData(_x, _x2) {
  return _fetchPaletteColorLookupTableData.apply(this, arguments);
}
/**
 * Simple cache schema for retrieved color palettes.
 */

function _fetchPaletteColorLookupTableData() {
  _fetchPaletteColorLookupTableData = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(instance, server) {
    var PaletteColorLookupTableUID, RedPaletteColorLookupTableDescriptor, GreenPaletteColorLookupTableDescriptor, BluePaletteColorLookupTableDescriptor, RedPaletteColorLookupTableData, GreenPaletteColorLookupTableData, BluePaletteColorLookupTableData;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            PaletteColorLookupTableUID = instance.PaletteColorLookupTableUID, RedPaletteColorLookupTableDescriptor = instance.RedPaletteColorLookupTableDescriptor, GreenPaletteColorLookupTableDescriptor = instance.GreenPaletteColorLookupTableDescriptor, BluePaletteColorLookupTableDescriptor = instance.BluePaletteColorLookupTableDescriptor, RedPaletteColorLookupTableData = instance.RedPaletteColorLookupTableData, GreenPaletteColorLookupTableData = instance.GreenPaletteColorLookupTableData, BluePaletteColorLookupTableData = instance.BluePaletteColorLookupTableData;
            return _context.abrupt("return", new Promise(function (resolve, reject) {
              var entry;

              if (_paletteColorCache.isValidUID(PaletteColorLookupTableUID)) {
                entry = _paletteColorCache.get(PaletteColorLookupTableUID);

                if (entry) {
                  return resolve(entry);
                }
              } // no entry in cache... Fetch remote data.


              var promises = [_getPaletteColor(server, RedPaletteColorLookupTableData, RedPaletteColorLookupTableDescriptor), _getPaletteColor(server, GreenPaletteColorLookupTableData, GreenPaletteColorLookupTableDescriptor), _getPaletteColor(server, BluePaletteColorLookupTableData, BluePaletteColorLookupTableDescriptor)];
              Promise.all(promises).then(function (_ref) {
                var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(_ref, 3),
                    RedPaletteColorLookupTableData = _ref2[0],
                    GreenPaletteColorLookupTableData = _ref2[1],
                    BluePaletteColorLookupTableData = _ref2[2];

                // when PaletteColorLookupTableUID is present, the entry can be cached...
                _paletteColorCache.add({
                  RedPaletteColorLookupTableData: RedPaletteColorLookupTableData,
                  GreenPaletteColorLookupTableData: GreenPaletteColorLookupTableData,
                  BluePaletteColorLookupTableData: BluePaletteColorLookupTableData,
                  PaletteColorLookupTableUID: PaletteColorLookupTableUID
                });

                instance.RedPaletteColorLookupTableData = RedPaletteColorLookupTableData;
                instance.GreenPaletteColorLookupTableData = GreenPaletteColorLookupTableData;
                instance.BluePaletteColorLookupTableData = BluePaletteColorLookupTableData;
                resolve();
              });
            }));

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _fetchPaletteColorLookupTableData.apply(this, arguments);
}

var _paletteColorCache = {
  count: 0,
  maxAge: 24 * 60 * 60 * 1000,
  // 24h cache?
  entries: {},
  isValidUID: function isValidUID(PaletteColorLookupTableUID) {
    return typeof PaletteColorLookupTableUID === 'string' && PaletteColorLookupTableUID.length > 0;
  },
  get: function get(PaletteColorLookupTableUID) {
    var entry = null;

    if (this.entries.hasOwnProperty(PaletteColorLookupTableUID)) {
      entry = this.entries[PaletteColorLookupTableUID]; // check how the entry is...

      if (Date.now() - entry.time > this.maxAge) {
        // entry is too old... remove entry.
        delete this.entries[PaletteColorLookupTableUID];
        this.count--;
        entry = null;
      }
    }

    return entry;
  },
  add: function add(entry) {
    if (this.isValidUID(entry.uid)) {
      var PaletteColorLookupTableUID = entry.uid;

      if (this.entries.hasOwnProperty(PaletteColorLookupTableUID) !== true) {
        this.count++; // increment cache entry count...
      }

      entry.time = Date.now();
      this.entries[PaletteColorLookupTableUID] = entry; // @TODO: Add logic to get rid of old entries and reduce memory usage...
    }
  }
};

function _getPaletteColor(server, paletteColorLookupTableData, lutDescriptor) {
  var numLutEntries = lutDescriptor[0];
  var bits = lutDescriptor[2];

  var readUInt16 = function readUInt16(byteArray, position) {
    return byteArray[position] + byteArray[position + 1] * 256;
  };

  var arrayBufferToPaletteColorLUT = function arrayBufferToPaletteColorLUT(arraybuffer) {
    var byteArray = new Uint8Array(arraybuffer);
    var lut = [];

    if (bits === 16) {
      for (var i = 0; i < numLutEntries; i++) {
        lut[i] = readUInt16(byteArray, i * 2);
      }
    } else {
      for (var _i = 0; _i < numLutEntries; _i++) {
        lut[_i] = byteArray[_i];
      }
    }

    return lut;
  };

  if (paletteColorLookupTableData.BulkDataURI) {
    var uri = paletteColorLookupTableData.BulkDataURI; // TODO: Workaround for dcm4chee behind SSL-terminating proxy returning
    // incorrect bulk data URIs

    if (server.wadoRoot.indexOf('https') === 0 && !uri.includes('https')) {
      uri = uri.replace('http', 'https');
    }

    var config = {
      url: server.wadoRoot,
      //BulkDataURI is absolute, so this isn't used
      headers: _DICOMWeb__WEBPACK_IMPORTED_MODULE_4__["default"].getAuthorizationHeader(server)
    };
    var dicomWeb = new dicomweb_client__WEBPACK_IMPORTED_MODULE_3__["api"].DICOMwebClient(config);
    var options = {
      BulkDataURI: uri
    };
    return dicomWeb.retrieveBulkData(options).then(function (result) {
      return result[0];
    }).then(arrayBufferToPaletteColorLUT);
  } else if (paletteColorLookupTableData.InlineBinary) {
    var inlineBinaryData = atob(paletteColorLookupTableData.InlineBinary);
    var arraybuffer = Object(_str2ab__WEBPACK_IMPORTED_MODULE_5__["default"])(inlineBinaryData);
    return new Promise(function (resolve) {
      resolve(arrayBufferToPaletteColorLUT(arraybuffer));
    });
  }

  return Promise.resolve(arrayBufferToPaletteColorLUT(paletteColorLookupTableData));
}

/***/ }),

/***/ "./utils/metadataProvider/getPixelSpacingInformation.js":
/*!**************************************************************!*\
  !*** ./utils/metadataProvider/getPixelSpacingInformation.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return getPixelSpacingInformation; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../log */ "./log.js");


function getPixelSpacingInformation(instance) {
  // See http://gdcm.sourceforge.net/wiki/index.php/Imager_Pixel_Spacing
  // TODO: Add Ultrasound region spacing
  // TODO: Add manual calibration
  // TODO: Use ENUMS from dcmjs
  var projectionRadiographSOPClassUIDs = ['1.2.840.10008.5.1.4.1.1.1', //	CR Image Storage
  '1.2.840.10008.5.1.4.1.1.1.1', //	Digital X-Ray Image Storage – for Presentation
  '1.2.840.10008.5.1.4.1.1.1.1.1', //	Digital X-Ray Image Storage – for Processing
  '1.2.840.10008.5.1.4.1.1.1.2', //	Digital Mammography X-Ray Image Storage – for Presentation
  '1.2.840.10008.5.1.4.1.1.1.2.1', //	Digital Mammography X-Ray Image Storage – for Processing
  '1.2.840.10008.5.1.4.1.1.1.3', //	Digital Intra – oral X-Ray Image Storage – for Presentation
  '1.2.840.10008.5.1.4.1.1.1.3.1', //	Digital Intra – oral X-Ray Image Storage – for Processing
  '1.2.840.10008.5.1.4.1.1.12.1', //	X-Ray Angiographic Image Storage
  '1.2.840.10008.5.1.4.1.1.12.1.1', //	Enhanced XA Image Storage
  '1.2.840.10008.5.1.4.1.1.12.2', //	X-Ray Radiofluoroscopic Image Storage
  '1.2.840.10008.5.1.4.1.1.12.2.1', //	Enhanced XRF Image Storage
  '1.2.840.10008.5.1.4.1.1.12.3' // X-Ray Angiographic Bi-plane Image Storage	Retired
  ];
  var PixelSpacing = instance.PixelSpacing,
      ImagerPixelSpacing = instance.ImagerPixelSpacing,
      SOPClassUID = instance.SOPClassUID,
      PixelSpacingCalibrationType = instance.PixelSpacingCalibrationType,
      PixelSpacingCalibrationDescription = instance.PixelSpacingCalibrationDescription,
      EstimatedRadiographicMagnificationFactor = instance.EstimatedRadiographicMagnificationFactor,
      SequenceOfUltrasoundRegions = instance.SequenceOfUltrasoundRegions;
  var isProjection = projectionRadiographSOPClassUIDs.includes(SOPClassUID);
  var TYPES = {
    NOT_APPLICABLE: 'NOT_APPLICABLE',
    UNKNOWN: 'UNKNOWN',
    CALIBRATED: 'CALIBRATED',
    DETECTOR: 'DETECTOR'
  };

  if (isProjection && !ImagerPixelSpacing) {
    // If only Pixel Spacing is present, and this is a projection radiograph,
    // PixelSpacing should be used, but the user should be informed that
    // what it means is unknown
    return {
      PixelSpacing: PixelSpacing,
      type: TYPES.UNKNOWN,
      isProjection: isProjection
    };
  } else if (PixelSpacing && ImagerPixelSpacing && PixelSpacing === ImagerPixelSpacing) {
    // If Imager Pixel Spacing and Pixel Spacing are present and they have the same values,
    // then the user should be informed that the measurements are at the detector plane
    return {
      PixelSpacing: PixelSpacing,
      type: TYPES.DETECTOR,
      isProjection: isProjection
    };
  } else if (PixelSpacing && ImagerPixelSpacing && PixelSpacing !== ImagerPixelSpacing) {
    // If Imager Pixel Spacing and Pixel Spacing are present and they have different values,
    // then the user should be informed that these are "calibrated"
    // (in some unknown manner if Pixel Spacing Calibration Type and/or
    // Pixel Spacing Calibration Description are absent)
    return {
      PixelSpacing: PixelSpacing,
      type: TYPES.CALIBRATED,
      isProjection: isProjection,
      PixelSpacingCalibrationType: PixelSpacingCalibrationType,
      PixelSpacingCalibrationDescription: PixelSpacingCalibrationDescription
    };
  } else if (!PixelSpacing && ImagerPixelSpacing) {
    var CorrectedImagerPixelSpacing = ImagerPixelSpacing;

    if (EstimatedRadiographicMagnificationFactor) {
      // Note that in IHE Mammo profile compliant displays, the value of Imager Pixel Spacing is required to be corrected by
      // Estimated Radiographic Magnification Factor and the user informed of that.
      // TODO: should this correction be done before all of this logic?
      CorrectedImagerPixelSpacing = ImagerPixelSpacing.map(function (pixelSpacing) {
        return pixelSpacing / EstimatedRadiographicMagnificationFactor;
      });
    } else {
      _log__WEBPACK_IMPORTED_MODULE_1__["default"].info('EstimatedRadiographicMagnificationFactor was not present. Unable to correct ImagerPixelSpacing.');
    }

    return {
      PixelSpacing: CorrectedImagerPixelSpacing,
      isProjection: isProjection
    };
  } else if (SequenceOfUltrasoundRegions && _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(SequenceOfUltrasoundRegions) === 'object') {
    var PhysicalDeltaX = SequenceOfUltrasoundRegions.PhysicalDeltaX,
        PhysicalDeltaY = SequenceOfUltrasoundRegions.PhysicalDeltaY;
    var USPixelSpacing = [PhysicalDeltaX * 10, PhysicalDeltaY * 10];
    return {
      PixelSpacing: USPixelSpacing
    };
  } else if (SequenceOfUltrasoundRegions && Array.isArray(SequenceOfUltrasoundRegions) && SequenceOfUltrasoundRegions.length > 1) {
    _log__WEBPACK_IMPORTED_MODULE_1__["default"].warn('Sequence of Ultrasound Regions > one entry. This is not yet implemented, all measurements will be shown in pixels.');
  } else if (isProjection === false && !ImagerPixelSpacing) {
    // If only Pixel Spacing is present, and this is not a projection radiograph,
    // we can stop here
    return {
      PixelSpacing: PixelSpacing,
      type: TYPES.NOT_APPLICABLE,
      isProjection: isProjection
    };
  }

  _log__WEBPACK_IMPORTED_MODULE_1__["default"].info('Unknown combination of PixelSpacing and ImagerPixelSpacing identified. Unable to determine spacing.');
}

/***/ }),

/***/ "./utils/metadataProvider/unpackOverlay.js":
/*!*************************************************!*\
  !*** ./utils/metadataProvider/unpackOverlay.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return unpackOverlay; });
function unpackOverlay(arrayBuffer) {
  var bitArray = new Uint8Array(arrayBuffer);
  var byteArray = new Uint8Array(8 * bitArray.length);

  for (var byteIndex = 0; byteIndex < byteArray.length; byteIndex++) {
    var bitIndex = byteIndex % 8;
    var bitByteIndex = Math.floor(byteIndex / 8);
    byteArray[byteIndex] = 1 * ((bitArray[bitByteIndex] & 1 << bitIndex) >> bitIndex);
  }

  return byteArray;
}

/***/ }),

/***/ "./utils/objectPath.js":
/*!*****************************!*\
  !*** ./utils/objectPath.js ***!
  \*****************************/
/*! exports provided: ObjectPath, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ObjectPath", function() { return ObjectPath; });
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ "../node_modules/@babel/runtime/helpers/typeof.js");
/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ "../node_modules/@babel/runtime/helpers/classCallCheck.js");
/* harmony import */ var _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/createClass */ "../node_modules/@babel/runtime/helpers/createClass.js");
/* harmony import */ var _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2__);



var ObjectPath = /*#__PURE__*/function () {
  function ObjectPath() {
    _babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default()(this, ObjectPath);
  }

  _babel_runtime_helpers_createClass__WEBPACK_IMPORTED_MODULE_2___default()(ObjectPath, null, [{
    key: "set",

    /**
    * Set an object property based on "path" (namespace) supplied creating
    * ... intermediary objects if they do not exist.
    * @param object {Object} An object where the properties specified on path should be set.
    * @param path {String} A string representing the property to be set, e.g. "user.study.series.timepoint".
    * @param value {Any} The value of the property that will be set.
    * @return {Boolean} Returns "true" on success, "false" if any intermediate component of the supplied path
    * ... is not a valid Object, in which case the property cannot be set. No excpetions are thrown.
    */
    value: function set(object, path, value) {
      var components = ObjectPath.getPathComponents(path),
          length = components !== null ? components.length : 0,
          result = false;

      if (length > 0 && ObjectPath.isValidObject(object)) {
        var i = 0,
            last = length - 1,
            currentObject = object;

        while (i < last) {
          var field = components[i];

          if (field in currentObject) {
            if (!ObjectPath.isValidObject(currentObject[field])) {
              break;
            }
          } else {
            currentObject[field] = {};
          }

          currentObject = currentObject[field];
          i++;
        }

        if (i === last) {
          currentObject[components[last]] = value;
          result = true;
        }
      }

      return result;
    }
    /**
    * Get an object property based on "path" (namespace) supplied traversing the object
    * ... tree as necessary.
    * @param object {Object} An object where the properties specified might exist.
    * @param path {String} A string representing the property to be searched for, e.g. "user.study.series.timepoint".
    * @return {Any} The value of the property if found. By default, returns the special type "undefined".
    */

  }, {
    key: "get",
    value: function get(object, path) {
      var found,
          // undefined by default
      components = ObjectPath.getPathComponents(path),
          length = components !== null ? components.length : 0;

      if (length > 0 && ObjectPath.isValidObject(object)) {
        var i = 0,
            last = length - 1,
            currentObject = object;

        while (i < last) {
          var field = components[i];
          var isValid = ObjectPath.isValidObject(currentObject[field]);

          if (field in currentObject && isValid) {
            currentObject = currentObject[field];
            i++;
          } else {
            break;
          }
        }

        if (i === last && components[last] in currentObject) {
          found = currentObject[components[last]];
        }
      }

      return found;
    }
    /**
    * Check if the supplied argument is a real JavaScript Object instance.
    * @param object {Any} The subject to be tested.
    * @return {Boolean} Returns "true" if the object is a real Object instance and "false" otherwise.
    */

  }, {
    key: "isValidObject",
    value: function isValidObject(object) {
      return _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(object) === 'object' && object !== null && object instanceof Object;
    }
  }, {
    key: "getPathComponents",
    value: function getPathComponents(path) {
      return typeof path === 'string' ? path.split('.') : null;
    }
  }]);

  return ObjectPath;
}();
/* harmony default export */ __webpack_exports__["default"] = (ObjectPath);

/***/ }),

/***/ "./utils/sopClassDictionary.js":
/*!*************************************!*\
  !*** ./utils/sopClassDictionary.js ***!
  \*************************************/
/*! exports provided: sopClassDictionary */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sopClassDictionary", function() { return sopClassDictionary; });
// TODO: Deprecate since we have the same thing in dcmjs?
var sopClassDictionary = {
  ComputedRadiographyImageStorage: '1.2.840.10008.5.1.4.1.1.1',
  DigitalXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.1',
  DigitalXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.1.1',
  DigitalMammographyXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.2',
  DigitalMammographyXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.2.1',
  DigitalIntraOralXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.1.3',
  DigitalIntraOralXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.1.3.1',
  CTImageStorage: '1.2.840.10008.5.1.4.1.1.2',
  EnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.1',
  LegacyConvertedEnhancedCTImageStorage: '1.2.840.10008.5.1.4.1.1.2.2',
  UltrasoundMultiframeImageStorage: '1.2.840.10008.5.1.4.1.1.3.1',
  MRImageStorage: '1.2.840.10008.5.1.4.1.1.4',
  EnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.1',
  MRSpectroscopyStorage: '1.2.840.10008.5.1.4.1.1.4.2',
  EnhancedMRColorImageStorage: '1.2.840.10008.5.1.4.1.1.4.3',
  LegacyConvertedEnhancedMRImageStorage: '1.2.840.10008.5.1.4.1.1.4.4',
  UltrasoundImageStorage: '1.2.840.10008.5.1.4.1.1.6.1',
  EnhancedUSVolumeStorage: '1.2.840.10008.5.1.4.1.1.6.2',
  SecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7',
  MultiframeSingleBitSecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7.1',
  MultiframeGrayscaleByteSecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7.2',
  MultiframeGrayscaleWordSecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7.3',
  MultiframeTrueColorSecondaryCaptureImageStorage: '1.2.840.10008.5.1.4.1.1.7.4',
  Sop12LeadECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.1',
  GeneralECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.2',
  AmbulatoryECGWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.1.3',
  HemodynamicWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.2.1',
  CardiacElectrophysiologyWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.3.1',
  BasicVoiceAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.1',
  GeneralAudioWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.4.2',
  ArterialPulseWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.5.1',
  RespiratoryWaveformStorage: '1.2.840.10008.5.1.4.1.1.9.6.1',
  GrayscaleSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.1',
  ColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.2',
  PseudoColorSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.3',
  BlendingSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.4',
  XAXRFGrayscaleSoftcopyPresentationStateStorage: '1.2.840.10008.5.1.4.1.1.11.5',
  XRayAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.12.1',
  EnhancedXAImageStorage: '1.2.840.10008.5.1.4.1.1.12.1.1',
  XRayRadiofluoroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.12.2',
  EnhancedXRFImageStorage: '1.2.840.10008.5.1.4.1.1.12.2.1',
  XRay3DAngiographicImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.1',
  XRay3DCraniofacialImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.2',
  BreastTomosynthesisImageStorage: '1.2.840.10008.5.1.4.1.1.13.1.3',
  BreastProjectionXRayImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.13.1.4',
  BreastProjectionXRayImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.13.1.5',
  IntravascularOpticalCoherenceTomographyImageStorageForPresentation: '1.2.840.10008.5.1.4.1.1.14.1',
  IntravascularOpticalCoherenceTomographyImageStorageForProcessing: '1.2.840.10008.5.1.4.1.1.14.2',
  NuclearMedicineImageStorage: '1.2.840.10008.5.1.4.1.1.20',
  RawDataStorage: '1.2.840.10008.5.1.4.1.1.66',
  SpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.1',
  SpatialFiducialsStorage: '1.2.840.10008.5.1.4.1.1.66.2',
  DeformableSpatialRegistrationStorage: '1.2.840.10008.5.1.4.1.1.66.3',
  SegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.4',
  SurfaceSegmentationStorage: '1.2.840.10008.5.1.4.1.1.66.5',
  RealWorldValueMappingStorage: '1.2.840.10008.5.1.4.1.1.67',
  SurfaceScanMeshStorage: '1.2.840.10008.5.1.4.1.1.68.1',
  SurfaceScanPointCloudStorage: '1.2.840.10008.5.1.4.1.1.68.2',
  VLEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1',
  VideoEndoscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.1.1',
  VLMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2',
  VideoMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.2.1',
  VLSlideCoordinatesMicroscopicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.3',
  VLPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4',
  VideoPhotographicImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.4.1',
  OphthalmicPhotography8BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.1',
  OphthalmicPhotography16BitImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.2',
  StereometricRelationshipStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.3',
  OphthalmicTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.5.4',
  VLWholeSlideMicroscopyImageStorage: '1.2.840.10008.5.1.4.1.1.77.1.6',
  LensometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.1',
  AutorefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.2',
  KeratometryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.3',
  SubjectiveRefractionMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.4',
  VisualAcuityMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.5',
  SpectaclePrescriptionReportStorage: '1.2.840.10008.5.1.4.1.1.78.6',
  OphthalmicAxialMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.78.7',
  IntraocularLensCalculationsStorage: '1.2.840.10008.5.1.4.1.1.78.8',
  MacularGridThicknessandVolumeReport: '1.2.840.10008.5.1.4.1.1.79.1',
  OphthalmicVisualFieldStaticPerimetryMeasurementsStorage: '1.2.840.10008.5.1.4.1.1.80.1',
  OphthalmicThicknessMapStorage: '1.2.840.10008.5.1.4.1.1.81.1',
  CornealTopographyMapStorage: '1.2.840.10008.5.1.4.1.1.82.1',
  BasicTextSR: '1.2.840.10008.5.1.4.1.1.88.11',
  EnhancedSR: '1.2.840.10008.5.1.4.1.1.88.22',
  ComprehensiveSR: '1.2.840.10008.5.1.4.1.1.88.33',
  Comprehensive3DSR: '1.2.840.10008.5.1.4.1.1.88.34',
  ProcedureLog: '1.2.840.10008.5.1.4.1.1.88.40',
  MammographyCADSR: '1.2.840.10008.5.1.4.1.1.88.50',
  KeyObjectSelection: '1.2.840.10008.5.1.4.1.1.88.59',
  ChestCADSR: '1.2.840.10008.5.1.4.1.1.88.65',
  XRayRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.67',
  RadiopharmaceuticalRadiationDoseSR: '1.2.840.10008.5.1.4.1.1.88.68',
  ColonCADSR: '1.2.840.10008.5.1.4.1.1.88.69',
  ImplantationPlanSRDocumentStorage: '1.2.840.10008.5.1.4.1.1.88.70',
  EncapsulatedPDFStorage: '1.2.840.10008.5.1.4.1.1.104.1',
  EncapsulatedCDAStorage: '1.2.840.10008.5.1.4.1.1.104.2',
  PositronEmissionTomographyImageStorage: '1.2.840.10008.5.1.4.1.1.128',
  EnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.130',
  LegacyConvertedEnhancedPETImageStorage: '1.2.840.10008.5.1.4.1.1.128.1',
  BasicStructuredDisplayStorage: '1.2.840.10008.5.1.4.1.1.131',
  RTImageStorage: '1.2.840.10008.5.1.4.1.1.481.1',
  RTDoseStorage: '1.2.840.10008.5.1.4.1.1.481.2',
  RTStructureSetStorage: '1.2.840.10008.5.1.4.1.1.481.3',
  RTBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.4',
  RTPlanStorage: '1.2.840.10008.5.1.4.1.1.481.5',
  RTBrachyTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.6',
  RTTreatmentSummaryRecordStorage: '1.2.840.10008.5.1.4.1.1.481.7',
  RTIonPlanStorage: '1.2.840.10008.5.1.4.1.1.481.8',
  RTIonBeamsTreatmentRecordStorage: '1.2.840.10008.5.1.4.1.1.481.9',
  RTBeamsDeliveryInstructionStorage: '1.2.840.10008.5.1.4.34.7',
  GenericImplantTemplateStorage: '1.2.840.10008.5.1.4.43.1',
  ImplantAssemblyTemplateStorage: '1.2.840.10008.5.1.4.44.1',
  ImplantTemplateGroupStorage: '1.2.840.10008.5.1.4.45.1'
};

/***/ }),

/***/ "./utils/sortBy.js":
/*!*************************!*\
  !*** ./utils/sortBy.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sortBy; });
// Return the array sorting function for its object's properties
function sortBy() {
  var fields = [].slice.call(arguments),
      n_fields = fields.length;
  return function (A, B) {
    var a, b, field, key, reverse, result, i;

    for (i = 0; i < n_fields; i++) {
      result = 0;
      field = fields[i];
      key = typeof field === 'string' ? field : field.name;
      a = A[key];
      b = B[key];

      if (typeof field.primer !== 'undefined') {
        a = field.primer(a);
        b = field.primer(b);
      }

      reverse = field.reverse ? -1 : 1;

      if (a < b) {
        result = reverse * -1;
      }

      if (a > b) {
        result = reverse * 1;
      }

      if (result !== 0) {
        break;
      }
    }

    return result;
  };
}

/***/ }),

/***/ "./utils/str2ab.js":
/*!*************************!*\
  !*** ./utils/str2ab.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return str2ab; });
/**
 * Convert String to ArrayBuffer
 *
 * @param {String} str Input String
 * @return {ArrayBuffer} Output converted ArrayBuffer
 */
function str2ab(str) {
  var strLen = str.length;
  var bytes = new Uint8Array(strLen);

  for (var i = 0; i < strLen; i++) {
    bytes[i] = str.charCodeAt(i);
  }

  return bytes.buffer;
}

/***/ }),

/***/ "./utils/studyMetadataManager.js":
/*!***************************************!*\
  !*** ./utils/studyMetadataManager.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _classes_TypeSafeCollection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../classes/TypeSafeCollection */ "./classes/TypeSafeCollection.js");

var studyMetadataList = new _classes_TypeSafeCollection__WEBPACK_IMPORTED_MODULE_0__["TypeSafeCollection"]();

function add(studyMetadata) {
  studyMetadataList.insert(studyMetadata);
}

function get(studyInstanceUID) {
  return studyMetadataList.findBy({
    studyInstanceUID: studyInstanceUID
  });
}

function all(options) {
  return studyMetadataList.all(options);
}

function remove(studyInstanceUID) {
  studyMetadataList.remove({
    studyInstanceUID: studyInstanceUID
  });
}

function purge() {
  studyMetadataList.removeAll();
}

/* harmony default export */ __webpack_exports__["default"] = ({
  add: add,
  get: get,
  all: all,
  remove: remove,
  purge: purge
});

/***/ }),

/***/ "./utils/urlUtil.js":
/*!**************************!*\
  !*** ./utils/urlUtil.js ***!
  \**************************/
/*! exports provided: parse, queryString, paramString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "parse", function() { return parse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryString", function() { return queryString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paramString", function() { return paramString; });
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ "../node_modules/@babel/runtime/helpers/slicedToArray.js");
/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! query-string */ "../node_modules/query-string/index.js");
/* harmony import */ var query_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(query_string__WEBPACK_IMPORTED_MODULE_1__);


var PARAM_SEPARATOR = ';';
var PARAM_PATTERN_IDENTIFIER = ':';

function toLowerCaseFirstLetter(word) {
  return word[0].toLowerCase() + word.slice(1);
}

var getQueryFilters = function getQueryFilters() {
  var location = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var search = location.search;

  if (!search) {
    return;
  }

  var searchParameters = parse(search);
  var filters = {};
  Object.entries(searchParameters).forEach(function (_ref) {
    var _ref2 = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default()(_ref, 2),
        key = _ref2[0],
        value = _ref2[1];

    filters[toLowerCaseFirstLetter(key)] = value;
  });
  return filters;
};

var decode = function decode() {
  var strToDecode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

  try {
    var decoded = window.atob(strToDecode);
    return decoded;
  } catch (e) {
    return strToDecode;
  }
};

var parse = function parse(toParse) {
  if (toParse) {
    return query_string__WEBPACK_IMPORTED_MODULE_1___default.a.parse(toParse);
  }

  return {};
};

var parseParam = function parseParam(paramStr) {
  var _paramDecoded = decode(paramStr);

  if (_paramDecoded && typeof _paramDecoded === 'string') {
    return _paramDecoded.split(PARAM_SEPARATOR);
  }
};

var replaceParam = function replaceParam() {
  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  var paramKey = arguments.length > 1 ? arguments[1] : undefined;
  var paramValue = arguments.length > 2 ? arguments[2] : undefined;
  var paramPattern = "".concat(PARAM_PATTERN_IDENTIFIER).concat(paramKey);

  if (paramValue) {
    return path.replace(paramPattern, paramValue);
  }

  return path;
};

var isValidPath = function isValidPath(path) {
  var paramPatternPiece = "/".concat(PARAM_PATTERN_IDENTIFIER);
  return path.indexOf(paramPatternPiece) < 0;
};

var queryString = {
  getQueryFilters: getQueryFilters
};
var paramString = {
  isValidPath: isValidPath,
  parseParam: parseParam,
  replaceParam: replaceParam
};


/***/ }),

/***/ "./utils/writeScript.js":
/*!******************************!*\
  !*** ./utils/writeScript.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return writeScript; });
/* harmony import */ var _absoluteUrl__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./absoluteUrl */ "./utils/absoluteUrl.js");
/* jshint -W060 */

function writeScript(fileName, callback) {
  var script = document.createElement('script');
  script.src = Object(_absoluteUrl__WEBPACK_IMPORTED_MODULE_0__["default"])(fileName);

  script.onload = function () {
    if (typeof callback === 'function') {
      callback(script);
    }
  };

  document.body.appendChild(script);
}

/***/ }),

/***/ "cornerstone-core":
/*!***********************************!*\
  !*** external "cornerstone-core" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_cornerstone_core__;

/***/ }),

/***/ "cornerstone-math":
/*!***********************************!*\
  !*** external "cornerstone-math" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_cornerstone_math__;

/***/ }),

/***/ "cornerstone-tools":
/*!************************************!*\
  !*** external "cornerstone-tools" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_cornerstone_tools__;

/***/ }),

/***/ "cornerstone-wado-image-loader":
/*!************************************************!*\
  !*** external "cornerstone-wado-image-loader" ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_cornerstone_wado_image_loader__;

/***/ }),

/***/ "dcmjs":
/*!************************!*\
  !*** external "dcmjs" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_dcmjs__;

/***/ }),

/***/ "dicom-parser":
/*!*******************************!*\
  !*** external "dicom-parser" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_dicom_parser__;

/***/ })

/******/ });
});
//# sourceMappingURL=index.umd.js.map